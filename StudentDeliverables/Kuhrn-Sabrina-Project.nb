(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    684040,      13693]
NotebookOptionsPosition[    673440,      13488]
NotebookOutlinePosition[    678695,      13610]
CellTagsIndexPosition[    678475,      13601]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Wednesday, July 11, 2018 at 6:34", \
"TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"2138b1dc-25d4-4a71-b7d5-46cc3f091ca5"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188040860998*^9},
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Sabrina Kuhrn", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 0}},
 CellChangeTimes->{3.736536207540806*^9, 
  3.740241510645935*^9},ExpressionUUID->"2214bf82-cb91-41b2-a79f-\
ecd872282532"],

Cell["Tuseeta Banerjee", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 0}},
 CellChangeTimes->{3.736536216260921*^9, 3.740241515440857*^9, 
  3.7402560747225933`*^9},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-\
49b5afc9692c"],

Cell["Unicredit Bank Austria", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 0}},
 CellChangeTimes->{3.736536278299572*^9, 
  3.740241519580859*^9},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-\
7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.7361879449416428`*^9},
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["Automatic Data Visualization ", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{
  3.7365364091022453`*^9, {3.7402244282744827`*^9, 3.7402244355609493`*^9}, 
   3.74024152501033*^9},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell["\<\
Design heuristic rules to automatically visualize various types of data. The \
project would combine statistical analysis, unsupervised/clustering methods \
along with the wide variety of visualization techniques Wolfram Language has \
to offer.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536691820487*^9, {3.740155118117497*^9, 3.7401551204584227`*^9}, 
   3.7402415301070766`*^9, 
   3.740285832621633*^9},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.736704649824739*^9},ExpressionUUID->"ec924e65-f9fc-4678-8fe3-\
95cd292f053c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tFJMwMCigADJSNJ4hgDQ+kHWPRmtFBMwqihDgGQwhW6fdrv9ww8/lP+blpa2
2SOr1So/r57X+u6vy3zQyusJUEzAeFIKrSaT6f3339+2bVtubu7S0tJqeO2W
0EpSVqHLB+3atWvPnj38vy6Xa8eOHQHfGU+0UkzAqFIErb29vTt37nQ6nbOz
swcPHiwrKwvdbikgQFJJIdDa2tqKlimj1WazpaSk7N27Nz09/erVq3wKIVc8
0UoxAaNKqVLYV66416S4fv16QUFBmO2W0EpSVqEDAoODgzJau7q6srKypqen
HQ5HRkaG2WyW36YqWg/l1/qglWIChpSysdbJyUn0udra2sJst4RWkrIKH63e
MplMeXl58n/VQysv1uqDVooJGFJKoRV+6Z07d3bu3FlTU+PzUoh2S2glKavw
0drf34++FX9cXl5eWFgov8277qWyCohWigkYTKHbT6SVr+CjZmZmwmvlz4TZ
bgmtJGUVPlobGxv37ds3MzMzPz9/4MABi8Uivy3OXivFBAwppWKthw4d8g6o
htluCa0kZRU+WtFci4uLU1NT09PTvUu1ryYCrTwmcNcsqLRdUvylCFrPnj37
+uuvy6lW8FHDbLeEVpKy0vhsLPDzWHGTP1opJmA80WwskpGkZbSivx8CrRQT
MJhoNhbJSNIvWikmYDAlFq0//fYTrqK9kRo+FeM+kIwqLdcQCI1WigkYSYmq
ISBvlNBKUlba91rP3+4IhlaKCRhJ5LWSjCQto9XSMxYarRQTMJIIrSQjSddo
pZiAkUQBAZKRpHe0UkzAMCKvlWQkaR+t6PWHQCvFBAwj9eq11tTUpKenp6am
3rlzJ9gWCa0kZaXlDAEAc120UkzAGFIqQ8C/XuvU1FRKSsrExMT09DToOjY2
FnCjhFaSstKy1xomWikmYAypVK+1srLyd7/7HX/mzJkzN2/eDLhFQitJWRkA
rRQTMIZUqtdaUlJSVFTEn7x169a5c+cCbpHQSlJWBkArDG+jmIDepVK9VqD1
woUL/CWg9fTp0wG3SGglKStjoJViAgaQSvVaKysrs7Oz+eOzZ896F7/yrtdK
aCUpKy2j9bypA8A0W4fXRSvFBAwgleq1Op3OlJSUqampubm5tLS0kZGRgFsk
tJKUlZYzBMJHK8UE9C6lMgT867Xiyerq6t27d2dkZNy9e9dno/JjQitJWRnD
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
wAfs+OPoZrXoBa3BHJJViXh37tzZuXNnTU2Nqtu6f/8+EIcHyqI12OYuX76c
lpaGjvPi4uKRI0dMJpN628It6cCBA7OzswsLC4cPH4bDHOO2uIKhNcSv6aPw
22f4qddhMpbeFv+3+RM1zvvGWR3wbYZEawiHhHuSmZmZ8FrV3taxY8dw8YLh
77zzzltvvfXv//7vqm7OG+Cg+vHjx9XbFtzIa9euyds6ceJEjNviCojWELvh
r4jaZ7DUa8Xm4pKSWxE1UV2g1d8hAVFx2aKP3NDQcOjQIaVGtENvS36Pgl5r
iM3Z7fZdu3bhJTz+9NNP1x1Mj2VbtbW1Bw8ehMvqcrlwn4p9W1zeaJW3FcK9
9Jcu2icpmaVrtK76OSToI+Mmgs4y3J7XX399s0eFhYXqbUt+g4JoDb25Bw8e
fPDBB6mpqQUFBcvLy+ptC9xDJx2gU3Bbq2vR6n1c4c/s00v7JCWt9I5WUnKK
2idJ4yK0kvQoap8kjYvQStKjqH2SNC5CK0mP0lH79J7Vu7KyUlxcnJ6e/v77
78szBP2n94Y/4Tc+WvcQ0tLS5HENq9W6qrFD8J/zHuY5j+UoCK0kPUov7dNn
Vm9DQ8PHH3+8sLAwNze3f/9+QRD8p/dGNOFXC4fgcrl27Njh/RFNHYL/nPcw
z3mMR0FoJelRemmfPrN6i4qK4PLxx5cl+U/vjWjCbxy07iHYbDYgaO/evXDw
rl69CrdWU4fgP+c9zHMe41EQWkl6lI7ap3emGTqYQND8/DwcIbh8p06d8p/e
G9GE3/go9CF0dXVlZWXhvw6HIyMjw2w2a/AQVr3mvId5zmM8CkIrSY/SUfv0
mR9x8eJFXODoU+fk5Jw9e9Z/em9EE37jo9CH4P1Ok8mUl5entUPwmfMe5jmP
8SgIrSQ9Skft05tLcPZmZmb44/z8fHS0/af3RjThNz4KfQj9/f02m40/U15e
XlhYqKlD8J/zHuY5j/EoCK0kPUpH7dObS93d3enp6XNzcxMTE7xao//03ogm
/MZHoQ+hsbFx37594C2oe+DAAYvFoqlD8J/zHuY5j/EoCK0kPUpH7dOnFg36
mNu2bcMzzc3N/Bn/6b1aW8oz9CHwdKzU1FQgV3bttHMIAee8h3nOYzkKQitJ
j6L2SdK4CK0kPYraJ0njIrSS9ChqnySNi9BK0qOofZI0LkIrSY+i9knSuAit
JD2K2idJ4yK0kvQoap8kjYvQStKjqH2SNC5CK0mPovZJ0rgIrSQ9itonSeMi
tJL0KGqfJI2L0ErSo6h9kjQuQitJj6L2SdK4CK0kPYraJ0njIrSS9ChqnySN
i9BK0qOofZI0rhBoJZFIJFLUigi5JJIWRO2TpHERWkl6FLVPksZFaCXpUdQ+
SRoXoZWkR1H7JGlchFaSHkXtk6RxEVpJehS1T5LGRWgl6VHUPkkaF6GVpEdR
+yRpXIRWkh5F7ZOkcSUVWjMyMjau1blz5wK+0+FwvP76694PSJqSIdsnyUhK
NrSWlZVNeWl+fj7gOwmtGpch2yfJSEo2tN6/f9//ebPZjJfeeOONlJSU0tLS
VUKr5mXI9kkykgitcFw3b95cXl4+MzPT1NT02muvOSQRWrUsQ7ZPkpGUbGiF
a7rVo/T0dDy5tLQ0PDy8srKyvLzc3d29adOmwcFBQqvGZcj2STKSkg2t165d
G/NoYmICTwKqN2/e/IWk3NxcsJfQqn0Zsn2SjKRkQ6t/QKClpeW9994DafEY
juuWLVsIrdqXIdsnyUgitFZVVe3YsWNmZmZpaam4uHjjxo19fX2EVo3LkO2T
ZCQRWl0u19GjR7du3bpr1y6TyZSbm5uSkkJo1bgM2T5JRlJSoZVkGFH7JGlc
hFaSHkXtk6RxEVpJehS1T5LGRWgl6VHUPkkaF6GVpEdR+yRpXIRWkh5F7ZOk
cRFaSXoUtU+SxkVoJelR1D5JGhehlaRHUfskaVyEVpIeRe2TpHERWkl6FLVP
ksZFaCXpUdQ+SRoXoZWkR1H7JGlchFaSHkXtk6RxEVpJehS1T5LGRWgl6VHU
PkkaF6HVRz09PWZJJklFRUXZHh3yEn8Gr+I9eDM+ZbfbE73vSaSkbZ8kvYjQ
CiSCjZycu3bt+igt5Tfv/gx27JVnsl74xqmXvwU7/8O/gd34yddgJRseh+G/
lzZ+5/Tm545veeHAz76XsfHFHZtfTdv+rsxbwDbRR2ZkJU/7JOlUSYtW7poC
p9tefh4g5fwEM8t/9D+jNnw89/tfAW8L9rwHRAPUHLPk0Couw7dPkt6VbGiV
HVTg9JPvfQ04jYWl6xowiw0Bs2AsNk2MVUrB2uf84jwZWfwt/CZqMLRyosKN
BOjQkY/RO42asWnb3wVjCbCxK1j7LG0ZyakQyMjiaWh14TdRw6CV9/p5lz/+
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
V6ekelBw+dhCLebOjofnxf6Cnt580HXZL+Asr4kT50Ar6IrDudbirqaIG0GX
tPwB9hn3lLsdbIGz4QlWbfVKk5gQrmoZrdnZ2eSyKmglGx43vOMaO1r5mkfo
Wpp72arZi7PdS9P1S3y+kv2uD1fdjutMZ8Brf06KW1Z2rlPLWlmiyjcI+Kjl
HQynfJEvXhjQew+dUzZ4dBfNniVNK92ZvfhgfrU7SamotqXzIavcArq6PGhl
jmvwPLS4md1hu9vhXsCRpQeb2Wq5gCoAi24CfO+rTexY4hPc1hFayWVVw+C4
GruwQOxolQ1gqe5mPWLvsW/4qL5eqxRu9V1ay1MhJMaCq5FyVUYrfM6KThZr
DeX4SVPDsJONfSxKebKKzfqEm9ciiLfbWdCAlzNt7rwKtE6NPOJq6DSJuNmi
tPYB4Cln8MLfbpECxQHrsRBauSiXVQ1DL8DYU18VRGt2BY8M2G63i2OTnit6
pnMNV7szF6Y7p1iCE8utGhhjhestIqvIOiWVY1W8WmA4aOUlEay29Yfs5Uoy
vJSBdUDkMxrA5DE7m2Y1OCaOjrfOjLFa2W60Oi7ILivezCb2TsY7GiDvPBzX
83VeBXIr3YVSEzJopQu02u32bS8/TxWu1DBjL6GlLFoBRrhtcIQaellWkjtt
YLAYvis31/At25jtZivr8qMrfVpKsD8pRSmrupkH6F9oTj07IZUQgcMGu29l
y1JHVAnBFWQdgZkZ26zdNDNRsuQoWXaWLE9XLHlcdDD5Tjsrzo8HC/bGRXuj
a7LRtd64nlK2IHnd3Gt1/14a8FQ1jlaTyfTJ92haqyp27JVnDDyYpSxaeU3O
uh429Fz3kDmiPle3c8pW3OgOSx73VJbjK7BclgZW8Ddu1zufgVVUz4bFF5Qr
wwLe2kZtN1qFgNURedCjoenGpCXTacmc68hc6soEYJc8URH10Aquei9fmxN5
IeskROvH+/ecee6xhFPIkIYTa+DBLGXRyi9YuKBlFpaYCt/VZ7WXSYcNzqr/
Fc2XoOKFrU5VxS/uBxfOIig8l98lraFgahMrOkW+5qn3q/Ozth7R2ll3TKg/
MtqUOdyUOdacOWLJbhXEpn731AOntGiUUqjnxJ6eYut382xhOQyScJZqHK1m
s5kGsFS1g2/+2KgxAcXRmi35rkDWlSZ3CSlvSoxP2rwHoOUFreCpFknVAs/U
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
llMBH8CKk4qOyIMtLIEhPMd1Yc5miy9asz3TY+9bWVFx+Kj1vazUlVxALNeT
GyCHVdH3PyEVFuPh2UmHe8nagTG2Rm1ZG4sP8KW0eSEyVZfVJrQmrcUfrZ9+
+unnP//5v/iLv3jrrbeWlpYSgtaceK2jJC1fwpKFYucqr4tyt0Ph5AHs4U1p
PdYwvVZ0z0tb4l3qhGMQvXhQ8WID+1tYw7r/IOflRpGHAq61MG9WLnfDk2Dx
DHzX2odizUM2objMwtYxv9zoDrry/LST0vjXSXWG5DSCVrPZ/NPH/jj1yT/T
l73+pf/24hf/q05nOqiNVp96rTU1NV/96ledTieQu2HDhiNHjhjba+UXr0WI
Mn3U2+BYtgii/9Sk2NEKLo1NhlWK0CV5ziCVd0mZ+K+jKq/gwEOsedLQFY8J
8NoCeVWe/1a6V408I4WpYReleOypqjXlCHKl+tXyFA8FdzU+aLWHIbP2VFlZ
2eOnoqIiEGnHjh2vPvfUB996LP1vv5BwSGoTrT5e64cffvi5z33ubyU98cQT
qampxkYrN7hJY2HHM4O5iz1DzD1TvOsqFeoXxsNDK7fmflGOUh6XVlc8pTTw
w7GctcZBekIqBt5uY6s5mNrcVcWuNAoPOkVvnzZ7bTqHT5nH9Tcd9iheHNCK
6/eFzf/9x2//v3qxpzZ87ql/+uvvPP2321PcU0E5aXEg215+/vBLT/3yqS+d
ee4xnTqriULr3r17t23bxh+Pjo4ODQ0lA1rhQZl7Wb2U6OgKX3F6ylbWpkz9
Fh8DfDoHIsu8RZ+a5/DjuNDL7rCJiS3oxxcFu9HKarfiLE1NuQsm1HS7nXy8
JIyydXPCSRIOOKXLv+5umLeS+KD12I2nAl6V2rEDuV8/lPPizt0/S03bVuSR
jNPMTRuMgVNvy/3+VyJa2jVGtN67dw9e6/Dw8PT09Je//OVLly4lA1rl5bQm
JqOpiMLSA5zi9VZV9q2wRnA6w90rl5QPViMlO518wHKfeofZKtjXmuOxFHjg
cyvduW5aWEkBh9Mmn2HcxboHxZJmka8nOztjE0dt+WHM1YIH7j91lw+KRbF7
yYxW4DTr3E+2f/ADf5zue3vTwTd//Mn3vmYwnCYQrdCvfvWrP/3TP/2TP/mT
n//85ysrK3FDa2ni0JrtKYJX0swWWInIReSUGJlgWfpq7BiY77s8a/Ao68iE
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
    "], {{0, 370}, {457, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2018, 7, 10, 20, 33, 29.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageMargins->{{0., 0.}, {3., 1.}},
  ImageSize->{354., Automatic},
  ImageSizeRaw->{457, 370},
  PlotRange->{{0, 457}, {0, 370}}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.7367046498340807`*^9, {3.736882273548814*^9, 3.736882273937325*^9}, {
   3.736882678983438*^9, 3.736882681164237*^9}, {3.7402580772128077`*^9, 
   3.74025810519423*^9}, {3.740270181166708*^9, 
   3.7402701879144506`*^9}},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell["\<\
\[OpenCurlyQuote]A picture is worth a thousand words\[CloseCurlyQuote] - \
While trying to obtain information from large volumes of data, it is useful \
to visualize it in a meaningful way. However, the greatest challenge is to \
find the appropriate tool to visualize the underlying data. In this project, \
we have explored the various kinds of data visualization tools the Wolfram \
Language offers, and have come up with automatic rules to infer the data type \
and decide automatically the exact plot type to use for the data.  As the \
Wolfram Data Repository offers a large amount of curated data, we used \
examples from there. \
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{
  3.7368810316239147`*^9, 3.740241619203301*^9, {3.7402470112638073`*^9, 
   3.740247077125703*^9}, {3.740247111180687*^9, 3.7402471141120853`*^9}, {
   3.740253254984786*^9, 3.740253269201865*^9}, {3.740253357177567*^9, 
   3.7402533774006033`*^9}, {3.7402534211028*^9, 3.7402534368924932`*^9}, {
   3.740253550090845*^9, 3.740253582856453*^9}, {3.74025361467727*^9, 
   3.740253694204591*^9}, {3.7402537428601923`*^9, 3.740253747155016*^9}, {
   3.740253805710671*^9, 3.74025381276464*^9}, {3.740253946082436*^9, 
   3.740253946951456*^9}, {3.7402540951835537`*^9, 3.740254149780308*^9}, {
   3.740254180720345*^9, 3.740254209016185*^9}, {3.74025426364892*^9, 
   3.74025426477916*^9}, {3.7402546714506483`*^9, 3.7402546857844763`*^9}, {
   3.7402547375439243`*^9, 3.740254738627431*^9}, {3.74025478457485*^9, 
   3.740254785938321*^9}, {3.740259004758863*^9, 3.740259345266099*^9}, {
   3.74025944447442*^9, 3.7402594968810673`*^9}, {3.7402595568704643`*^9, 
   3.740259660944332*^9}, 
   3.7402857854524107`*^9},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell["\<\
As large volumes of data imply a high number of visualization methods, there \
are way more informative visualization techniques that can be explored \
further. \
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536768881929*^9, {3.7367072121682987`*^9, 3.736707214173369*^9}, {
   3.74024174227812*^9, 3.740241764821375*^9}, 3.740254832484661*^9, {
   3.740254871150028*^9, 3.740254882948971*^9}, {3.740254930549405*^9, 
   3.7402549694788713`*^9}, {3.740255000803981*^9, 3.740255004206519*^9}, {
   3.740255037610465*^9, 3.7402550612877903`*^9}, {3.7402551883645153`*^9, 
   3.740255192695031*^9}, {3.7402552353156223`*^9, 3.740255279223948*^9}, {
   3.740255395895105*^9, 3.7402553962508497`*^9}, 3.740255590688509*^9, {
   3.740255654739348*^9, 3.740255704848537*^9}, {3.740256029804669*^9, 
   3.740256037918188*^9}, {3.740259686179882*^9, 3.740259701768898*^9}, 
   3.740285814268097*^9},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 2], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"2f09c4c1-886c-4a07-bdd0-f7e9c2bd843a"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7401549957986803`*^9},ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-\
c12593f67d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188003855814*^9},
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.738720159560079*^9},ExpressionUUID->"a415c0fc-f692-474a-a3a1-\
95fb4df9ef20"],

Cell[CellGroupData[{

Cell["Different data types", "TemplateEditableHeader",
 CellChangeTimes->{{3.740257176830834*^9, 3.7402571773667994`*^9}, {
  3.740257260162105*^9, 3.7402572782089453`*^9}, {3.740260001715164*^9, 
  3.74026000786729*^9}, {3.74026109255628*^9, 
  3.7402611014353247`*^9}},ExpressionUUID->"a82eb68b-c55f-495d-ac5a-\
d97167784e73"],

Cell["\<\
Before looking at structures,  features, pattern, trends, relationships etc. \
in data, different data types are extracted, to apply the appropriate \
visualization tools. We focused on the following types:\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402573701237297`*^9, 3.740257379283162*^9}, {
   3.740257465028008*^9, 3.740257469725245*^9}, {3.740257783635268*^9, 
   3.7402577892491198`*^9}, {3.740258629317657*^9, 3.740258634644648*^9}, {
   3.740258675496686*^9, 3.7402588906923733`*^9}, {3.740260086149699*^9, 
   3.74026008673429*^9}, {3.7402601481122427`*^9, 3.740260247562888*^9}, {
   3.740260304109632*^9, 3.740260539800658*^9}, 3.740260671141873*^9, {
   3.740260702771957*^9, 3.740260709003935*^9}, {3.740260802544683*^9, 
   3.7402608278028183`*^9}, {3.7402609413160267`*^9, 3.740260950615594*^9}, {
   3.7402691198779373`*^9, 
   3.740269158007441*^9}},ExpressionUUID->"c93624b0-8e9f-452c-9c74-\
674d9e990fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nominal and Text (\[OpenCurlyDoubleQuote]IBRD Statement of Loans\
\[CloseCurlyDoubleQuote])", "TemplateEditableHeader",
 CellChangeTimes->{{3.740269159966625*^9, 3.740269163020812*^9}, {
  3.740269490479124*^9, 3.740269551841297*^9}, {3.7402804345620613`*^9, 
  3.7402804454035254`*^9}, {3.740280517603492*^9, 3.74028053314939*^9}, {
  3.740282641467339*^9, 3.740282644269238*^9}, {3.740285361603017*^9, 
  3.7402853708233843`*^9}},ExpressionUUID->"d81a2f92-5f84-4614-aee9-\
dcb6b7eeac79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionalPlot", "[", 
   RowBox[{"posT", ",", "\"\<Nominal\>\"", ",", "nomP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conditionalPlot", "[", 
   RowBox[{"posT", ",", "\"\<Text\>\"", ",", "nomP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  GraphicsBox[InsetBox[
    GraphicsBox[
     StyleBox[{InsetBox[
        StyleBox["\<\"Europe\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.2306547619047619],
         FontColor->RGBColor[0., 0., 0.]], {0, 0}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"Asia\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.3645833333333333],
         FontColor->RGBColor[0., 0., 0.]], {18.5, 40.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"Central\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.2306547619047619],
         FontColor->RGBColor[0., 0., 0.]], {7.5, -38.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"CARIBBEAN\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09672619047619048],
         FontColor->RGBColor[0., 0., 0.]], {-0.5, -67.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"AMERICA\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09672619047619048],
         FontColor->RGBColor[0., 0., 0.]], {-12.5, 74.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"Pacific\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09672619047619048],
         FontColor->RGBColor[0., 0., 0.]], {61.5, 76.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"LATIN\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09672619047619048],
         FontColor->RGBColor[0., 0., 0.]], {-70.5, 47.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"East\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09672619047619048],
         FontColor->RGBColor[0., 0., 0.]], {-70.5, 27.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"South\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05208333333333333],
         FontColor->RGBColor[0., 0., 0.]], {-0.5, 57.5}, Center, Automatic]},
      StripOnInput->False,
      FontFamily->"Noto Sans CJK JP"],
     DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
     PlotRange->{{-98., 94.}, {-78., 87.}}], {194.4, -134.0070831910198}, 
    ImageScaled[{0.5, 0.5}], {360.00000000000006, 246.44980816739275}],
   ImageSize->{316., Automatic}], "  ", 
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$60116$73319 = True, DynamicChart`click$60120$73319 = 
        True, DynamicChart`click$60124$73319 = False, 
        DynamicChart`click$60128$73319 = False, 
        DynamicChart`click$60132$73319 = False, 
        DynamicChart`click$60136$73319 = False, 
        DynamicChart`click$60140$73319 = False, 
        DynamicChart`click$60144$73319 = False}, {{
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.5]}], {{{}, {{
             RGBColor[0.259739, 0.395895, 0.39585], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.256637061435917, 
                    3.141592653589793}]}, 
                   ImageSizeCache -> {{19.760786437626876`, 
                    146.06224155679}, {-90.23921356237312, 
                    6.914213562373092}}], StatusArea[#, 3]& , TagBoxNote -> 
                  "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60116$73319, 
                   FEPrivate`Not[DynamicChart`click$60116$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60116$73319, {{{1., 0}, {
                  0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60116$73319}]]}, {
             RGBColor[
             0.34143157142857145`, 0.39578185714285713`, 
              0.30183685714285713`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.256637061435917}]}, 
                   ImageSizeCache -> {{114.08578643762688`, 
                    193.22474155678998`}, {-85.62261946191349, 
                    6.914213562373092}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60120$73319, 
                   FEPrivate`Not[DynamicChart`click$60120$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60120$73319, {{{1., 0}, {0, 1.}}, {
                 0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60120$73319}]]}, {
             RGBColor[
             0.41776985714285714`, 0.34474299999999997`, 
              0.25087585714285715`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 0.6283185307179586}]}, 
                   ImageSizeCache -> {{114.08578643762688`, 
                    211.2392135623731}, {-51.35705748486066, 
                    6.914213562373085}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60124$73319, 
                   FEPrivate`Not[DynamicChart`click$60124$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60124$73319, {{{1., 0}, {0, 1.}}, {
                 0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60124$73319}]]}, {
             RGBColor[0.521671, 0.3277332857142857, 0.22725157142857144`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 0.}]}, 
                   ImageSizeCache -> {{114.08578643762688`, 
                    211.2392135623731}, {4.085786437626865, 
                    62.35705748486065}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60128$73319, 
                   FEPrivate`Not[DynamicChart`click$60128$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60128$73319, {{{1., 0}, {0, 1.}}, {
                 0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60128$73319}]]}, {
             RGBColor[
             0.6600524285714285, 0.3866944285714286, 0.22009357142857144`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.2566370614359172`, -0.6283185307179591}]}, 
                   ImageSizeCache -> {{114.08578643762688`, 
                    193.22474155678998`}, {4.085786437626879, 
                    96.62261946191346}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60132$73319, 
                   FEPrivate`Not[DynamicChart`click$60132$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60132$73319, {{{1., 0}, {0, 1.}}, {
                 0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60132$73319}]]}, {
             RGBColor[0.8138352857142858, 0.520555, 0.2233787142857143], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -1.2566370614359172`}]}, 
                   ImageSizeCache -> {{84.93775844320997, 146.06224155679}, {
                    4.085786437626879, 101.2392135623731}}], 
                  StatusArea[#, 1]& , TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60136$73319, 
                   FEPrivate`Not[DynamicChart`click$60136$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60136$73319, {{{1., 0}, {0, 1.}}, {
                 1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60136$73319}]]}, {
             RGBColor[
             0.9379441428571428, 0.6852302857142857, 0.23593085714285714`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5132741228718345`, -1.8849555921538759`}]}, 
                   ImageSizeCache -> {{37.77525844320998, 
                    116.91421356237308`}, {4.0857864376268935`, 
                    96.62261946191344}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60140$73319, 
                   FEPrivate`Not[DynamicChart`click$60140$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60140$73319, {{{1., 0}, {
                  0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$60140$73319}]]}, {
             RGBColor[0.961303, 0.793622, 0.261418], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.5132741228718345`}]}, 
                   ImageSizeCache -> {{19.760786437626887`, 
                    116.91421356237309`}, {4.085786437626879, 
                    62.35705748486062}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$60144$73319, 
                   FEPrivate`Not[DynamicChart`click$60144$73319]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$60144$73319, {{{1., 0}, {
                  0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$60144$73319}]]}}}, {}}, {}}, {{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
               Style[3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60116$73319, 
                 FEPrivate`Not[DynamicChart`click$60116$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60116$73319, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60116$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60120$73319, 
                 FEPrivate`Not[DynamicChart`click$60120$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60120$73319, {{{1., 0}, {0, 1.}}, {
               0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60120$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60124$73319, 
                 FEPrivate`Not[DynamicChart`click$60124$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60124$73319, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60124$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60128$73319, 
                 FEPrivate`Not[DynamicChart`click$60128$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60128$73319, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60128$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60132$73319, 
                 FEPrivate`Not[DynamicChart`click$60132$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60132$73319, {{{1., 0}, {0, 1.}}, {
               0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60132$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60136$73319, 
                 FEPrivate`Not[DynamicChart`click$60136$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60136$73319, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$60136$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60140$73319, 
                 FEPrivate`Not[DynamicChart`click$60140$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60140$73319, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$60140$73319}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$60144$73319, 
                 FEPrivate`Not[DynamicChart`click$60144$73319]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$60144$73319, {{{1., 0}, {
                0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$60144$73319}]]}, {}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
     ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageMargins -> 0., 
     ImageSize -> {232., Automatic}, PlotLabel -> 
     FormBox["\"Country Code\"", TraditionalForm], 
     PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
     Scaled[0.09166666666666669]],FormBox[
     FormBox[
      TemplateBox[{
       "\"CO\"", "\"EG\"", "\"MY\"", "\"MX\"", "\"NG\"", "\"IN\"", "\"TR\"", 
        "\"CI\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.259739, 0.395895, 0.39585]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.34143157142857145`, 0.39578185714285713`, 
                    0.30183685714285713`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.41776985714285714`, 0.34474299999999997`, 
                    0.25087585714285715`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.521671, 0.3277332857142857, 0.22725157142857144`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6600524285714285, 0.3866944285714286, 
                    0.22009357142857144`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.8138352857142858, 0.520555, 0.2233787142857143]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.9379441428571428, 0.6852302857142857, 
                    0.23593085714285714`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.961303, 0.793622, 0.261418]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.259739, 0.395895, 0.39585], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.17315933333333333`, 0.26393, 0.2639], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.259739`", ",", "0.395895`", ",", "0.39585`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.259739, 0.395895, 0.39585]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.259739, 0.395895, 0.39585], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34143157142857145`, 0.39578185714285713`, 
                    0.30183685714285713`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22762104761904764`, 0.26385457142857144`, 
                    0.20122457142857142`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34143157142857145`", ",", "0.39578185714285713`", ",", 
                    "0.30183685714285713`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34143157142857145`, 0.39578185714285713`, 
                    0.30183685714285713`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34143157142857145`, 0.39578185714285713`, 
                    0.30183685714285713`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.41776985714285714`, 0.34474299999999997`, 
                    0.25087585714285715`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2785132380952381, 0.22982866666666665`, 
                    0.16725057142857144`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.41776985714285714`", ",", "0.34474299999999997`", ",", 
                    "0.25087585714285715`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.41776985714285714`, 0.34474299999999997`, 
                    0.25087585714285715`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.41776985714285714`, 0.34474299999999997`, 
                    0.25087585714285715`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.521671, 0.3277332857142857, 0.22725157142857144`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3477806666666667, 0.21848885714285715`, 
                    0.15150104761904765`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.521671`", ",", "0.3277332857142857`", ",", 
                    "0.22725157142857144`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.521671, 0.3277332857142857, 0.22725157142857144`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.521671, 0.3277332857142857, 0.22725157142857144`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6600524285714285, 0.3866944285714286, 
                    0.22009357142857144`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.44003495238095236`, 0.25779628571428576`, 
                    0.14672904761904765`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6600524285714285`", ",", "0.3866944285714286`", ",", 
                    "0.22009357142857144`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6600524285714285, 0.3866944285714286, 
                    0.22009357142857144`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6600524285714285, 0.3866944285714286, 
                    0.22009357142857144`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8138352857142858, 0.520555, 0.2233787142857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5425568571428572, 0.34703666666666666`, 
                    0.14891914285714286`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8138352857142858`", ",", "0.520555`", ",", 
                    "0.2233787142857143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8138352857142858, 0.520555, 0.2233787142857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8138352857142858, 0.520555, 0.2233787142857143], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9379441428571428, 0.6852302857142857, 
                    0.23593085714285714`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6252960952380953, 0.4568201904761905, 
                    0.1572872380952381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9379441428571428`", ",", "0.6852302857142857`", ",", 
                    "0.23593085714285714`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9379441428571428, 0.6852302857142857, 
                    0.23593085714285714`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9379441428571428, 0.6852302857142857, 
                    0.23593085714285714`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.961303, 0.793622, 0.261418], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6408686666666668, 0.5290813333333334, 
                    0.17427866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.961303`", ",", "0.793622`", ",", "0.261418`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.961303, 0.793622, 0.261418]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.961303, 0.793622, 0.261418], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                     ",", "None", ",", "None", ",", "None"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[
   StyleBox[{InsetBox[
      StyleBox["\<\"Ministry\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.12195121951219512`],
       FontColor->RGBColor[0.817319, 0.134127, 0.164218]], {0, 0}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"CORPORATION\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., 39.}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"International\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., -42.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"L'ECONOMIE\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., 69.}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"PETROLEUM\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {6., -71.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"FINANCIERA\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., 99.}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"MINISTERIO\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., -101.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Cooperation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-32., -124.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"REPUBLICA\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-3., 128.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"VECINALES\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {1., -153.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"MINISTERE\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {7., 157.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"HACIENDA\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., -183.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"NATIONAL\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., 187.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"NACIONAL\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., -213.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"FINANCES\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-3., 216.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"NIGERIAN\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., -243.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"IHRACAT\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {0., 246.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"TURKIYE\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {186., 230.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"CAMINOS\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-189., 244.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"CREDITO\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {191., -243.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"HOUSING\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-191., -242.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"FINANCE\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {184., 259.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"BANKASI\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-197., 157.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"PUBLICO\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-198., -157.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"BANCO\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-192., -72.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"KREDI\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {196., -53.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"NAFIN\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {192., 67.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"CORP\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-185., 69.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"DEVE\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-187., -41.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"S.N.C.\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-203., 0.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"LTD\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {186., -21.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"DES\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {159., -100.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"FIN\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06097560975609756],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {184., 27.}, 
      Center, Automatic]},
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Caps"],
   DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
   ImageSize->{238., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
   PlotRange->{{-289.5, 284.5}, {-260.5, 272.5}}], 
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$66299$73388 = False, DynamicChart`click$66303$73388 = 
        False, DynamicChart`click$66307$73388 = False, 
        DynamicChart`click$66311$73388 = True, DynamicChart`click$66315$73388 = 
        False, DynamicChart`click$66319$73388 = False, 
        DynamicChart`click$66323$73388 = False, 
        DynamicChart`click$66327$73388 = False}, {{
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.5]}], {{{}, {{
             RGBColor[0., 0.00505074, 0.191104], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.256637061435917, 
                    3.141592653589793}]}, 
                   ImageSizeCache -> {{17.835786437626908`, 
                    132.91242083002484`}, {-82.16421356237309, 
                    6.4142135623731065`}}], StatusArea[#, 3]& , TagBoxNote -> 
                  "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66299$73388, 
                   FEPrivate`Not[DynamicChart`click$66299$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", 
                 PassEventsUp -> True}]], 
              Dynamic[
               If[
               DynamicChart`click$66299$73388, {{{1., 0}, {
                  0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66299$73388}]]}, {
             RGBColor[
             0.2222222857142857, 0.10892052857142856`, 0.15657114285714285`], 
             
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.256637061435917}]}, 
                   ImageSizeCache -> {{103.5857864376269, 
                    175.78742083002481`}, {-77.96730983468251, 
                    6.4142135623731065`}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66303$73388, 
                   FEPrivate`Not[DynamicChart`click$66303$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66303$73388, {{{1., 0}, {0, 1.}}, {
                 0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66303$73388}]]}, {
             RGBColor[
             0.4444445714285714, 0.21279031714285712`, 0.12203828571428571`], 
             
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 0.6283185307179586}]}, 
                   ImageSizeCache -> {{103.5857864376269, 
                    192.1642135623731}, {-46.81679894645268, 
                    6.4142135623731065`}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66307$73388, 
                   FEPrivate`Not[DynamicChart`click$66307$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66307$73388, {{{1., 0}, {0, 1.}}, {
                 0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66307$73388}]]}, {
             RGBColor[
             0.6666668571428571, 0.3166601057142857, 0.08750542857142857], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 0.}]}, 
                   ImageSizeCache -> {{103.5857864376269, 
                    192.1642135623731}, {3.5857864376268864`, 
                    56.8167989464527}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66311$73388, 
                   FEPrivate`Not[DynamicChart`click$66311$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66311$73388, {{{1., 0}, {0, 1.}}, {
                 0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66311$73388}]]}, {
             RGBColor[0.809524, 0.38343357142857143`, 0.06530572857142856], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.2566370614359172`, -0.6283185307179591}]}, 
                   ImageSizeCache -> {{103.5857864376269, 
                    175.78742083002481`}, {3.5857864376268935`, 
                    87.96730983468251}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66315$73388, 
                   FEPrivate`Not[DynamicChart`click$66315$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66315$73388, {{{1., 0}, {0, 1.}}, {
                 0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66315$73388}]]}, {
             RGBColor[0.873016, 0.4131107142857143, 0.055439185714285716`], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -1.2566370614359172`}]}, 
                   ImageSizeCache -> {{77.08757916997516, 
                    132.91242083002484`}, {3.5857864376268935`, 
                    92.16421356237309}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66319$73388, 
                   FEPrivate`Not[DynamicChart`click$66319$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66319$73388, {{{1., 0}, {0, 1.}}, {
                 1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66319$73388}]]}, {
             RGBColor[0.936508, 0.4427878571428572, 0.04557264285714285], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5132741228718345`, -1.8849555921538759`}]}, 
                   ImageSizeCache -> {{34.212579169975186`, 
                    106.41421356237309`}, {3.5857864376269077`, 
                    87.96730983468251}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66323$73388, 
                   FEPrivate`Not[DynamicChart`click$66323$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66323$73388, {{{1., 0}, {
                  0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$66323$73388}]]}, {
             RGBColor[1., 0.472465, 0.0357061], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.5132741228718345`}]}, 
                   ImageSizeCache -> {{17.83578643762692, 
                    106.4142135623731}, {3.5857864376268935`, 
                    56.816798946452664`}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$66327$73388, 
                   FEPrivate`Not[DynamicChart`click$66327$73388]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$66327$73388, {{{1., 0}, {
                  0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$66327$73388}]]}}}, {}}, {}}, {{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
               Style[3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66299$73388, 
                 FEPrivate`Not[DynamicChart`click$66299$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66299$73388, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66299$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66303$73388, 
                 FEPrivate`Not[DynamicChart`click$66303$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66303$73388, {{{1., 0}, {0, 1.}}, {
               0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66303$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66307$73388, 
                 FEPrivate`Not[DynamicChart`click$66307$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66307$73388, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66307$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66311$73388, 
                 FEPrivate`Not[DynamicChart`click$66311$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66311$73388, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66311$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66315$73388, 
                 FEPrivate`Not[DynamicChart`click$66315$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66315$73388, {{{1., 0}, {0, 1.}}, {
               0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66315$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66319$73388, 
                 FEPrivate`Not[DynamicChart`click$66319$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66319$73388, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$66319$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66323$73388, 
                 FEPrivate`Not[DynamicChart`click$66323$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66323$73388, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$66323$73388}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$66327$73388, 
                 FEPrivate`Not[DynamicChart`click$66327$73388]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$66327$73388, {{{1., 0}, {
                0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$66327$73388}]]}, {}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
     ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {211., Automatic}, PlotLabel -> 
     FormBox["\"Guarantor Country Code\"", TraditionalForm], 
     PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
     Scaled[0.09166666666666669]],FormBox[
     FormBox[
      TemplateBox[{
       "\"CO\"", "\"EG\"", "\"MY\"", "\"MX\"", "\"NG\"", "\"IN\"", "\"TR\"", 
        "\"CI\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0., 0.00505074, 0.191104]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.2222222857142857, 0.10892052857142856`, 
                    0.15657114285714285`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.4444445714285714, 0.21279031714285712`, 
                    0.12203828571428571`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6666668571428571, 0.3166601057142857, 
                    0.08750542857142857]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.809524, 0.38343357142857143`, 0.06530572857142856]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.873016, 0.4131107142857143, 0.055439185714285716`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.936508, 0.4427878571428572, 0.04557264285714285]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.472465, 0.0357061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.00505074, 0.191104], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.00336716, 0.12740266666666666`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.00505074`", ",", "0.191104`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.00505074, 0.191104]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.00505074, 0.191104], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2222222857142857, 0.10892052857142856`, 
                    0.15657114285714285`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1481481904761905, 0.07261368571428571, 
                    0.1043807619047619], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2222222857142857`", ",", "0.10892052857142856`", ",", 
                    "0.15657114285714285`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2222222857142857, 0.10892052857142856`, 
                    0.15657114285714285`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2222222857142857, 0.10892052857142856`, 
                    0.15657114285714285`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4444445714285714, 0.21279031714285712`, 
                    0.12203828571428571`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.296296380952381, 0.14186021142857141`, 
                    0.08135885714285715], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4444445714285714`", ",", "0.21279031714285712`", ",", 
                    "0.12203828571428571`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4444445714285714, 0.21279031714285712`, 
                    0.12203828571428571`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4444445714285714, 0.21279031714285712`, 
                    0.12203828571428571`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6666668571428571, 0.3166601057142857, 
                    0.08750542857142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444445714285714, 0.21110673714285716`, 
                    0.05833695238095238], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6666668571428571`", ",", "0.3166601057142857`", ",", 
                    "0.08750542857142857`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6666668571428571, 0.3166601057142857, 
                    0.08750542857142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6666668571428571, 0.3166601057142857, 
                    0.08750542857142857], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.809524, 0.38343357142857143`, 0.06530572857142856], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5396826666666668, 0.255622380952381, 
                    0.043537152380952376`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.809524`", ",", "0.38343357142857143`", ",", 
                    "0.06530572857142856`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.809524, 0.38343357142857143`, 0.06530572857142856]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.809524, 0.38343357142857143`, 0.06530572857142856], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.873016, 0.4131107142857143, 0.055439185714285716`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5820106666666667, 0.27540714285714285`, 
                    0.036959457142857144`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.873016`", ",", "0.4131107142857143`", ",", 
                    "0.055439185714285716`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.873016, 0.4131107142857143, 0.055439185714285716`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.873016, 0.4131107142857143, 0.055439185714285716`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.936508, 0.4427878571428572, 0.04557264285714285], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6243386666666667, 0.2951919047619048, 
                    0.030381761904761904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.936508`", ",", "0.4427878571428572`", ",", 
                    "0.04557264285714285`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.936508, 0.4427878571428572, 0.04557264285714285]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.936508, 0.4427878571428572, 0.04557264285714285], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.472465, 0.0357061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3149766666666667, 
                    0.023804066666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.472465`", ",", "0.0357061`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.472465, 0.0357061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.472465, 0.0357061], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7,
                 ",", #8}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                     ",", "None", ",", "None", ",", "None"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], 
      "]"}]& )]}], "\[IndentingNewLine]"}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
  3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
  3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
  3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
  3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
  3.740269536547988*^9, 3.740269538878209*^9}, {3.740280454424787*^9, 
  3.740280460917158*^9}, {3.740285443560423*^9, 3.740285451530954*^9}, {
  3.7402854906474257`*^9, 
  3.740285493578178*^9}},ExpressionUUID->"20197eb1-0a2c-4e3a-a068-\
01939f0a01f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image (\[OpenCurlyDoubleQuote]MNIST\[CloseCurlyDoubleQuote])", \
"TemplateEditableHeader",
 CellChangeTimes->{{3.740269893793407*^9, 3.7402699076092033`*^9}, 
   3.740280539755567*^9, {3.7402853556680813`*^9, 
   3.740285358957055*^9}},ExpressionUUID->"d75dd2ed-6909-4996-9557-\
aed432a2185a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imagePlot", "[", 
   RowBox[{"posT", ",", "intI"}], "]"}], ";"}], "\[IndentingNewLine]", 
 GraphicsBox[{{}, {{}, 
    {Hue[0.67, 0.6, 0.6], Opacity[0], 
     PointBox[{{70.8248291015625, 37.703433990478516`}, {102.27437591552734`, 
      291.867431640625}, {-372.2749328613281, -251.1715087890625}, {
      411.01116943359375`, 38.443294525146484`}, {
      34.008888244628906`, -87.69776916503906}, {
      92.27095794677734, -240.21250915527344`}, {-68.94098663330078, 
      79.10920715332031}, {-272.9293212890625, 219.62539672851562`}, {
      245.5581817626953, 
      42.550811767578125`}, {-241.80319213867188`, -130.21780395507812`}}]}, \
{}}, {}, {}, {{}, {}}, {{}, {InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8ClqEk65JsZ+nHJXGStwyl1nWIVT7qDib5xyAco4pZ4JF+KUu8xY
hVNuKeMRnHIm7DdwSX1XdMWp7TxjHk655YwdOOUqlb7iltPBKfXfArfcM1ED
nHKljK245Rhw+vz/RMVPuN1CDwAAO3v5mQ==
           "], "Byte", ColorSpace -> 
           Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {70.8248291015625, 37.703433990478516}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9O4FMRBDgwMNX/Rpa4XxNmyMTMzAzB1t+QpBqlmF3Dk49DgDpzJ0Lm
qTkb376fcK4DczhC7hiTL7L59kwdcPYblzZk8/+rMy+Cs7vEbiFLLWNiPg7n
1E9C8UsfstwsNH8ycpz9jwM4M4XgknokyrQal9wFfr4LuOQm8AncxCVnxZyJ
S+oSP/MzXHJTmJlxST1iYqrHKccs9hKX3AZm0SO45aI34pJDBQCMHcyJ
           "], 
           "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {102.27437591552734, 291.867431640625}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cOeO+g/xqX3C1mwYc4pLY5MKvhklNjZsZl4gVx5sk4pFaLMSt/wCE3
jYnZBpeUIZPuAxxynkwM3jikXpkxK17CIefPzOz64KiXp9fGW+hSB4SAfkth
ZmZiZmZejSr1z4GJiYkBiiei+uSfODNEDxjfQfUAUIg5NTV1x/Y+JeaAryhy
+SA5CLOdOR9F6j3Iusn/F06aNFGMyQHVLb86gNrEVTlA9vEloHnhXxbUHWqB
hzC8fmHyZEcm3cm44mgwAwBk3KIR
           "], "Byte", ColorSpace -> Automatic, 
           Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {-372.2749328613281, -251.1715087890625}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/8YEY8FsG7N29ue/V/n7AqusSvHgt2RkZGxQpdRn80qT26jDAg8hJV
6jwPI6P5o7dvDzIy8lxGlfpWzchd9/b/9wt6jPxX0EzcwMhY+f//p1RGRj00
A//f92FUfvT/mAOjkA+61P95jIy7n7UwMgouwvTYeUbGBENGRuPDWDx9HuR0
hrovWKT+v5BiZJQ7jU3m/4/1QN+FYZWqlmVkN2EUPY9FqoWV0f7dTQlG7bcY
UpeVmHxf/f/fzMh4CkPOmZEbSB5iZ1TENDKekUktQ5qFUfYkptzzCiGg50Qr
72F155O9e/e+xipDZQAAfYelpw==
           "], "Byte", ColorSpace -> Automatic, 
           Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {411.01116943359375, 38.443294525146484}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AwMB0HKccE3MtHrlwsuTsmXDLdTO7/MAl94iZ+TFZckxMxXj0lVBb
7pMBbvv+hzFH4ZFjJkfuvToTHy45fO58I49b7n8H81KccnQAAIR86IY=
           "], 
           "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {34.008888244628906, -87.69776916503906}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9WYHN5CoNFSvlrLFJr2ZjAgG3VJ3SpldzM5o1r1651kmHqQ5czYNIE
0/eVmVTQjH2mwFQHou+qMfEUohn6XRsiZ87EJI/hFGMmriYLHh4OJqZJGHLX
ZYFONO3fwcOHxQ/XFy7c8P9/D5MiFjkweKPI1IxLbiMT031ccv5MOn9wSJ1g
ZyrCpe0wE165ejxyL+gpd1924l9ccmgAALN0xTk=
           "], "Byte", ColorSpace -> 
           Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {92.27095794677734, -240.21250915527344}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9w4C/+BZfUOQHtn7jkWhhNfuGSs2OchkvqswHjTlxyUYz2n3G5RJpx
By5tcYwyH3FI3VFh7MKlLYRR+gMOqTZ2xuU4pF6LMbpfxiGXzMh1HYfUDTHG
ShxSjw0ZFW7gkCtmZKzDIbWDkzH4G3apj8aMohewS/30Z1S5isPEnx6653BI
0Q8AAEI958w=
           "], "Byte", ColorSpace -> Automatic, Interleaving -> 
           None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {-68.94098663330078, 79.10920715332031}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcG49hF7RdKjJjJGhGS5xonOnLAs7GDAzsTIxcVT/gcvxMmWFMEGB
T2Hh3s9IBrIzZX2vzgKBE29+oFkGlMPpEPLlRF7hktNhYjqIS+6JLpPEUVyS
/UxMknlfsMs9aGJnYrLZj0NnmzwTk4T/LhxabTmZmER349DaI8nEJFKCZuun
J0/eg+jHtRxMTOFfUeTMmJh0MjOnHMrMlAFGRASK3AQhJiSg+AvV1AldohzM
UDmRS5hOmdbSksyU0NIyGYdTaQ0AhyCbFg==
           "], "Byte", ColorSpace -> 
           Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {-272.9293212890625, 219.62539672851562}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4NUBD9n5OOTyeBkZ2RRtG898wSKZzza3PZKRkTELi2Q+/////34f
V2ZsxpSTsQVT97VDMaQOsxRAGNFcl9Dl1jBC5K56cJxDl4tlTH+9rV1bm4st
Al1qlwkjCEgEVx5DEf9yNF+QmZHLsHjC3a9oWq57M/HndDPWYzr9/1kToeX/
/79mnIBFzlfg5H8ccks42v7jkkuQBVMXsMoFgqlahhdY5MBe/auV/huLHPeu
//+f+7Adw5T6f1VOt7ZEmGMBFqn//zdIMXIlnsIqRWUAAJ6Sv14=
           "], "Byte", 
           ColorSpace -> Automatic, Interleaving -> None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->0], {245.5581817626953, 42.550811767578125}, {0, 0}], 
     InsetBox[
      PaneBox[
       FrameBox[
        StyleBox[
         DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984K7bkp33ccg9dGViUtmMQ/JHJw8jW84rHLKnfDgZtV/gsvSILpP2
S1ySa/WYzHHJ/V/ExIrLQUA5se84pN5pMSpilbgSEyvFxGS87C6GzBo3DkYm
IGBkEnFbjyp1g49JByinEhcKUpCLrHe/reKVUEamso///7yY4s3EqLoKIZfJ
GCrKKL4Ayjtlz8jY+QkmB7JK5ypc6ZlAJiZtGKfa3X3pTyQ7Ps1yr8HhzyEG
ANjzwlg=
           "], "Byte", ColorSpace -> Automatic, Interleaving -> 
           None]}, 
          TagBox[
           TooltipBox[
            DynamicBox[ToBoxes[
              Pane[Charting`ChartLabelingDump`i$$, 
               ReplaceAll[
                Map[UpTo[
                  Ceiling[#]]& , {28, 28}], Infinity -> Automatic]], 
              TraditionalForm],
             ImageSizeCache->{28., {11., 17.}}],
            DynamicBox[
             ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
           Annotation[#, 
            Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
          DynamicModuleValues:>{}],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1],
        LabelStyle -> {},
        Frame -> True,
        Background->Directive[
          Opacity[0]],
        ContentPadding->False,
        FrameMargins->2,
        FrameStyle->None,
        RoundingRadius->4,
        StripOnInput->False],
       FrameMargins->
        0], {-241.80319213867188, -130.21780395507812}, {0, 0}]}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{248., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
   3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
   3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
   3.740269536547988*^9, 3.740269538878209*^9}, {3.740269863826082*^9, 
   3.740269873945766*^9}, 3.740269919322875*^9, 
   3.740285508035842*^9},ExpressionUUID->"af2d26b7-fc3c-46f2-93b4-\
de98255e8cb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical plots (\[OpenCurlyDoubleQuote]Mass Shootings in America\
\[CloseCurlyDoubleQuote])", "TemplateEditableHeader",
 CellChangeTimes->{{3.740270205518016*^9, 3.74027027149273*^9}, 
   3.740280544733512*^9, {3.740285323981182*^9, 
   3.7402853311685953`*^9}},ExpressionUUID->"e4763e39-fc36-4b87-825e-\
f177163abd1c"],

Cell[BoxData[{
 RowBox[{"numericPlot", "[", 
  RowBox[{"posT", ",", "\"\<Numerical\>\"", ",", "\"\<H\>\"", ",", "intN"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  GraphicsBox[{{}, {
     {RGBColor[1, 0.5, 0.5], AbsolutePointSize[6], AbsoluteThickness[1.6], 
      Dashing[{}], CapForm["Butt"], GeometricTransformationBox[InsetBox[
        GraphicsBox[
         {RGBColor[1, 0.5, 0.5], AbsolutePointSize[6], AbsoluteThickness[1.6],
           Dashing[{}], CapForm["Butt"], 
          DiskBox[{0, 0}, 
           Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYCYo1DB1I+2++xn1Upt8708F57hYyzzf0zl9mb
3J7mlBG0zJ4BCtJVPhqe23sAKj/NPn1V1I9zXLvsZXYHT449dhiuX4Lv1iLt
zxug/LVwPsS8bVD9x+DqYfbDzFcRdS85mHPSftbnLc9Nyo5A1W+zZ+C53MM4
axPcPgj/EIZ7Ue3fC3c/zD2L7LhqNJhvQM2/gua+ZXDzYObPmzih+5v+U/uG
VRbRB90e4LDvAjQ8TsHlYfah24+uHxaeqPLb4OELCx+Y/7Gbh9CPHj7Excc2
OB8mD7MP7t55p5e++HELKn8ATf80nO6D8dH9C1OP6j9EfKLHP3r4oMpPw4g/
dPehpw+YPK70BrMPANbWZno=
       "]]}, {}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Number of Victims Injured\"", TraditionalForm], 
     FormBox["\"Total Number of Victims\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0],
   BaseStyle->GrayLevel[0],
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->GrayLevel[0],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[1], 
     AbsoluteDashing[{1, 2}]],
   ImagePadding->All,
   ImageSize->{475., Automatic},
   LabelStyle->{FontFamily -> "Helvetica", 
     GrayLevel[0]},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.35312259551358416`}, {0, 0.2761172944523224}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[0]], 
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxdlHtIU1Ecx1eEDdFQLA2RsKXLVojOqUvNnU336I9CXKkZhkQ1laRoOdKh
TbRay1IohwzLmWhlKS2nTcPMJ/O1nFqRW5CZOEVwpuYDHRWdc2DnwuXe7/09
z++cz91//krixe0UCuXS3/vf8/9l52hy9zWGd7dz4AfAsqh5GYl1UFOBJGAx
1NT+AWoPIKlPXTO5tkG9GzjH74W6AWo/mK8Fan/Cn0bkDwCaJf0MS9YDNR1Q
3MZKtmneQB0EdRfUDKLfI0T+YKKfEJh/HOpQIp5J5A8Dinr22U7Bd6hZhH84
nMcA1BFEvUhCs4n4o4Q9iphvNLH+GML/GKFjif45hB0474eC0BSucz0FF7Ce
DNba1iagnUfE84j+4pzrKeKI9cYT+eOJfvnO+6/gE/0LCLuAyC8k+hMSdhFh
FxHn7ThRz86Z1UecoLuMYj5iRb7J3BwD5iMj4UCaffkz5sPm6WY1vRrEfDSe
dgioFzowH1mm/NWuG0OYD2XPulWTbcJ8ZDXNZRT7oHo0UGMo2+RrezEfzyzL
T71LkKaDkDulbM9V5B8Ebqtt3qMH0flmAHd5tGTnzY+Yj5NJSYWRp/oxH2lV
BQ0uBWbMx3WxXa4yWDAfU71ejlpf1C8TpFvK/GapyD8MDD2amy/nTWI+MrWX
QzeYaD/DQYHCleK7iOYRAczNv9yLckcwH+emaqWPbyE7G8xMbexxkegwH4n6
ukOTKuQfBZJTtpjGL58wHw963hkdwcgeAxLE7w1LslbMh7Ji2OqYRfONBdSt
iepGYTfmI68pcC5dN4z5oMmZLzrpfZiPbyuq/ko1+j9xQfD9jv4K3SjmY1yS
OWBm/MB8eFS2CV8+R+eTB1J/psj0WhQfB6ICW15fvWvEfFjNUv/mUrT+eFA9
bxartR2Yj6qFTL+JfLR/fFA/Ni2zdZkxH4fLTSt9eYhfAfD53bouDRvBfBi8
itOUD42Yj3uclqKa9HbMh+ptNm1zB5qfCORMF8qLF4YwH0rGGd217K+Yj11S
uod4Ozp/dsQFBdnR2x8rbctm
      "], {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 101, 102, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
           39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23,
           22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
          4, 3, 2}}]]}, {}, {}, {}, {}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
          17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
          34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
          100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84,
           83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67,
           66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 
          51}}]]}, {}, {}}]}, {{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7GdVyq0zPbzXHirgYHJ7mlNG0DIon8MhXeWj
4bm9B6B8AYf0VVE/znHtgvJFHFD1S0D5a6F8Gah526B8BTT1SmjmqzjM+rzl
uUnZEShfzYGB53IP46xNUL4GlH8IytdCc68Omvl6aO4xgJp/Bco3RNNvhGa+
sUPDKovog24PoHwTNPWm0PA4BeWbodlnjsa3QNNviSZvhRa+1mj+t0FTb4vG
t0Nzvz2avANqfDSg8RkcUe1rcHQwmXd66Ysft6DyTmj6ndDc54xqX4Mzmn9d
0Mx3QXOvK2r8N7iiud8NTd4NzXx3NPe5o8l7oMl7oKU3T7h9AIlc2bE=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Medium], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7F9uMfNVY7tkDxVwsPOQCncs3QHlczhkBCjH
fvhyDcoXcHghyHPn3JrTUL6Iw7rQf24cKfuhfAmHrHO13w9VnIHyZRw6jvy8
Myv3HJSv4JC1+VVGizjMPiWHxTsm/HFdcBTKV3FYfvvLIrEeGF/NwaC930Lw
O0y9hkPbtBdil9SvQPlaDrzV1uns9eehfB0Hv7CwRvOQk1C+nkPs/Lq1bHUX
oXwDh5LgD9VdO25D+YYOj48K/1sqBXOvkUPC7QkyLzlg6o0dzkx59Waq00Mo
38Qhc0GO4S+jQ1C+qUNdAxeD1EdYeJg5XNz6ibe58gKUb+4Q93hp8dxWmLyF
w/PHv0TZ0jdC+ZYOQVuWaT7sgqm3cgiP+Gt04vpVKN/aoe/I7hP/9GDyNg4B
wft2fC7bCeXbOnTMOHvn30tY+No5cPy9tXCd+2Eo396harPqq4SNZ6F8Bwel
aqOVB9WOQfgNDg53v3adnDPtAFTe0UGvd//JGRuh4d3g6HAlPfPURa1HUHkn
B4E5u9xXrzgClXdyiHoSUbZlAUy/s4OV6rYNBZ0noPLODncuFits7Yf538Vh
4ZuLwdMWQNNLg4vD/PeZMrdqYfHn6rDq8tOyF4eg4d/g6qA99dzXY1XboPJu
DuLfdv4sNoaGR4Obww7hltiOyVD7GNwduu23NS9O2AuVd3fo2p6r9IcFFn4e
DqVPG6tb3kPju8HDoUMrcmNR7k2ovKcDX7GaQDDTUXsAhf7xmg==
        
        "]]}}}, {{}, {}, {}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"CaseID\"", TraditionalForm], 
     FormBox["\"Total Number of Victims\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{400., Automatic},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 50.}, {0, 0.5677269891123111}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {
     {RGBColor[0, 1, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
      Dashing[{}], CapForm["Butt"], GeometricTransformationBox[InsetBox[
        GraphicsBox[
         {RGBColor[0, 1, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
          Dashing[{}], CapForm["Butt"], 
          DiskBox[{0, 0}, 
           Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4o0F9vyz9m+y1zh0IOWz/R57p2khIhX/Z9gr
ZJxt7p+5zJ5L875YuvwZewYoqGQ+Jdh5/yhUfhpcvczu4Mmxxw7D+RJ8txZp
f94A5e+A82HmQPQfs7+0O1MyzH4/mv0r7FVE3UsO5pxEc882e5j96PbB3Asz
D2YfjA+zF+LfQ/aL7LhqNJhv4HDvCbh5MPXzJk7o/qb/FMM+WPhB9F+A82Hy
MP/D7EfXD5OHhSeq/m1wfbDwwe6fTRj6UcNnBdx/qO7dAJeH2YeuHhLeT+Hu
hdkLkT+A4X5096Hzsfv3kD2q/85j2IfqvhNw96L7H2Yfevyghw96eOBKbwDu
2FKh
       "]]}, {}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Total Number of Fatalities\"", TraditionalForm], 
     FormBox["\"Number of Victims Injured\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0],
   BaseStyle->GrayLevel[0],
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->GrayLevel[0],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[1], 
     AbsoluteDashing[{1, 2}]],
   ImagePadding->All,
   ImageSize->{443., Automatic},
   LabelStyle->{FontFamily -> "Helvetica", 
     GrayLevel[0]},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.32956250119375996`}, {0, 0.35312259551358416`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[0]]}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
   3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
   3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
   3.740269536547988*^9, 3.740269538878209*^9}, {3.740269863826082*^9, 
   3.740269873945766*^9}, 3.740269919322875*^9, {3.740270091392173*^9, 
   3.740270160588098*^9}, {3.740274027813944*^9, 3.74027403392566*^9}, 
   3.740275091629208*^9, 3.7402751651805563`*^9, {3.740285480660213*^9, 
   3.7402854844468937`*^9}},ExpressionUUID->"63938327-c519-4ea0-94de-\
82039c8feacc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.740270339793291*^9, {3.740274020147757*^9, 
   3.74027402381879*^9}},ExpressionUUID->"062894ea-d746-4cd4-a5df-\
8373fa96b243"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time Series (\[OpenCurlyDoubleQuote]\[OpenCurlyDoubleQuote]IBRD \
Statement of Loans\[CloseCurlyDoubleQuote]\[CloseCurlyDoubleQuote])", \
"TemplateEditableHeader",
 CellChangeTimes->{{3.7402740721196957`*^9, 3.740274080991604*^9}, {
   3.740280551174446*^9, 3.7402805526260633`*^9}, {3.740285335749481*^9, 
   3.7402853505864763`*^9}, 
   3.74028770217266*^9},ExpressionUUID->"c7f99b53-5487-496e-b16f-\
10bec4fa4b0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeSeriesPlot", "[", 
   RowBox[{"posT", ",", "intT"}], "]"}], ";"}], "\[IndentingNewLine]", 
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
xeXphOUPggnLKpLoeeH/y5/gP9aH32Y=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{167, 169, 168}, {132, 134, 133}, {142, 144, 143}, {152, 
          154, 153}}], PolygonBox[{{148, 151, 150, 149}, {11, 14, 13, 12}}], 
         PolygonBox[{{124, 131, 130, 129, 128, 127, 126, 125}, {50, 57, 56, 
          55, 54, 53, 52, 51}}], 
         PolygonBox[{{1, 180, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}], 
         PolygonBox[{{112, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 
          114, 113}}], 
         PolygonBox[{{14, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
          37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
          20, 19, 18, 17, 16, 15}}], 
         PolygonBox[{{57, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 
          102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 
          86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 
          69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
          58}}]}]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175, 176, 177, 178, 179}]}}}], {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{1.5332544*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
       
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{1.2622176*^9, 
        FormBox["\"1940\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       1.8933696*^9, 
        FormBox["\"1960\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.5245216*^9, 
        FormBox["\"1980\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.7868256*^9, 
        FormBox["\"2020\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       4.4179776*^9, 
        FormBox["\"2040\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       1.2622176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.4200704*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.5778368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.7356032*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.0512224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.2089888*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.3667552*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.8401408*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}}, {{1.2622176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.4200704*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.5778368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.7356032*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.0512224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.2089888*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.3667552*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.8401408*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.008333333333333333, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{398., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Interest Rate\"", TraditionalForm],
  PlotRange->{{1.5332544*^9, 3.8261376*^9}, {0, 0.5175000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
   3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
   3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
   3.740269536547988*^9, 3.740269538878209*^9}, {3.740269863826082*^9, 
   3.740269873945766*^9}, 3.740269919322875*^9, {3.740270091392173*^9, 
   3.740270160588098*^9}, {3.740274027813944*^9, 3.74027403392566*^9}, {
   3.7402740912474957`*^9, 3.7402740939281816`*^9}, 3.7402767299204407`*^9, 
   3.7402855375667067`*^9, 
   3.740287676960211*^9},ExpressionUUID->"97861147-20b4-4ff4-94b6-\
79e1965ccd43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GeoHistogram (\[OpenCurlyDoubleQuote]Mass Shootings in America\
\[CloseCurlyDoubleQuote])", "TemplateEditableHeader",
 CellChangeTimes->{{3.7402751424961433`*^9, 3.740275162790197*^9}, {
  3.740285386679242*^9, 
  3.740285400202355*^9}},ExpressionUUID->"b06ea982-1481-48df-a3e0-\
b46f3296baac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geoPlot", "[", "posT", "]"}], ";"}], "\[IndentingNewLine]", 
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvVlzHUmW59daHvSor6BvoVc96nVk+gAzptaYXlpmMzKTycY01jM2ksZM
ehjZdFd3dWVVZ+XWVUxmdXKtJEhmk1iYWFlJbIWVSVwALK7ZJBKkoSiahe7P
4/7jnjjXY7sLADLxcHAv4sbi4eHu8fPjfz/+X/2z//mf/I//6Z/8yZ/8y/+i
/eef/NP/9b/5F//in/5v/91/2f7nv/+zf/k//fM/+9P/4b/9s//lT//5n/6L
//qf/WftjX/xn/zJn7xt7/+ft7//Ymon6c9a75V9eKdrx3ndD8Zmk59/vRS+
/3JyK9l/tpe8OtxL3h7tJY+/737H+P7iYCN8n9q+kNzcOJ8s7FwL27HnL9eT
ue3N5Nbv0/u4tryXzG4vJefmNpOLixPJxv5uOPb5i73kj6+757XGOW9tfpE8
fbES/R2bvn857LP//F7y8qCbzjedc9s0e+MYv+2N+e3V4f3ob8qPncd7yetX
O+G69nxc9+1RK8unmYcPM0t/S/fRtnnz+9zusrlmK5ffO893kpn9neSriWvJ
1ZsXs2PutDbbeXUuGHnRejpfeM9NrOi56H7f1Nx/WLa4cC05OMxf781Rvoza
NJQ9+6r06rz+HmPHaz/+J2+Urqr7eeM+B7U37lwHzzeS1W9v5Mqryh9ppp5/
NN1K7u2k6b65updrD75YaCVTG+1yutXNS+7t8GC/pzxs7Lfax7eS8wt7tdub
m+vns3Lb1BZ2xqJ5sP9gPlmYvpw83lusnW+kn3xZ3dtLnrwY7BmQx3cf7IV8
2Ho42vqg5zHqemfLF/mEkWdV9WMURjle3488w3ZZn5ydSs7fnks2VieSS9cu
Jb8Y3+qTJ1L7cHI7+XB8Pbk+OX6s9zgqozxyX+fm03rK+33Y1xhlmaCc652u
Nktl37f7/G/bZVuGsU9nWs3Lw52d0F7+ajZtG3W+OmnnvUx7d2X6RvLZrYWB
yuWptNvreZu8n9pIrnfyjD5q7j8W9m8/n5/fWk2/t5/Zx+PLyUqrlYwtbwUW
oH3w7xbYkvfvnTZ3t55uZrwvPrh8bzf5vN2+3FxpJZ+068rYykTg/ZcHW+Fc
vB/t+Z6b9+0f27xLPVl8vF9Yj+gLiLOp/2JR1fvidul+1l+xxjbqMOf8o+Ft
f987T1qFdZ172H48kx1neZ/3FXy/8OhhcvfRo9xvsu65Wvlrdnh/bHkuuTx2
Prmz1erhfcv9x/0+OQ7ejzG2nr3n/Sru1nuhLP1VvK/3ir7X5X2lvayMVvVH
qvoLlvfvP+ryPvtfWexyOe8ursU2vvMupb3hncgn26j/ymfL/zp3P+3NILwf
69Pem/0qub82lfyx3QdvWra4n2HxucqBbYveZfN1RLxP2TgO3lc9qcuST5+u
BN6H0z/5eqE/7mgfA+sHzmv3G1RGjqtvNWwj3yjfPDN4fxSsjx2OqMxT3kiz
/IPBp/gibfN9OVX7a/vCb47ybSbs3pT1sX7S/vxFyjGfj88nF8cnUt4fGQuf
gNGv9rw/suudPJcfN/uP9FrhWXW+t58jvP/5/FJgTPE+73fqGu/cqdZSsPGt
68mN9es5DqCO+vTD+9tPtoJ/H/P9c8v78C1sDO9vP98PbLv8eKunPvFb1ta3
+d/75XPvgvbvfrwAruf6tB3ife5N/QHvI9C22PlhKlh/rjWXbRPH77/YD/mz
/mS/lPetj9+OQUw+mMv2ub6ylPH+7a0rYSzE8lBZHozKqvzpg5p437bjatsp
a+S97QeIS6rSZvunb9z2omPs9S3v67v8kP69Y69RxfvPC3zN/pg6vE9ZXt6/
nZUn6vLC/S7fs21sOeV6/PdTG/l2IXbv1ugDnAbeH6R8idNHXY7fNVP5PTzo
llnKNu0574LjuH4/z0S8f/G3l5KPby834orPbt1NPr42lb632tzP8Zem5vri
/dNQnki3nhm8P8rrUIdG0Q+kzWIMzvp8rL+QNlftrcairE9E7wasKWf6517l
J7KmtNCmbrY2k3OTy8kvx0fJxMdr+IiDn3iknP/j4v0Y94+E/dvPLPPxd/pt
MAJsTt2iTqFhkR5lajflcFgfjoe915+l/E29x7+vc395t5X5GMc3ZsM5reaG
/ee2d4Pxv3jfsvBr47sTD+k3+gKwdhnrojPy247a5+Q47m1jbzkY/fG1h5O5
Om39A5yHMQqOWd3byer1xv5mplXC6Kt4LQ+8n/UBnu318P7s3la4d/oH4jPS
AtOrbwXvT2ymfa0YD6GxOul3zLANDo2N31q/ut4Dek7i/ar+mveVV+kkfH/D
vlMsn8iXbt/59hrck/2tzthAE96fnDjf2acVeN+OO/ljpenh8/Zant9j926t
H96/vDSb3G7Xs9udse4mvN+PD7+OHac+5l0xq41QPdM4D3qvUfJsv6xvTbz/
YQlj5d6r7f3g/fGFufxx7ffh4vpSlq6y8mP7/6eB9992nt2Ve6mN6hqUkb0n
adkY1jnlw5e/kTJn23r5drzm2KbJ6zNTf0Y5W+ILubXaSlb2umnQueryvh+H
hfex90bT064TKS8ex/VOnr9PC/sPm/n1Pej4g5Y99RHCCzC353B0Jtc37oXv
8P7BYcr89x7kz42mhz4AvO/9l7RHy620LvJ/zPeNX3y+w85w+hu3n3hmfOvL
MJ+g1julzUI67m1WP1sZ7+s6+o39NbdBmqT7j1qhneN+M8Zk3KAzdqA2aWl3
uTfv6Ks8eZL7X7yvvgufaKbge/z86Pd/O/tNp691IcpERyNiopMwfPu2bVWe
ynciBtE7IMbAZSzn39N1/FNcx2o2rG/J9g8t78fGA2waLFcV+ff9+6Tsd7Ts
7JP6vlrBL35v72b0+Lq8H0vXxXt9anpWu+d+9P1ist6uc2jzp+7HyzR2+wS0
anVN8yROOh22rgzDbLkU84+6XzRM/czde1M9vN/rO9sJOgvp9ZkTcP7a9cD8
YXyg/dul25M5roxp+k5rf5E5dGj0+Byl1oxxBHh/mNeQX1Dv0QPXxvMbvn87
d89refScGNesw5fS6I/CxuaXGnDukG2IWqLMtz/gXJkz3u+P+wdm/3ZZYN6u
mB/ehyefPN8M/mQ4Wn5m/NBRPUprLtPCwL82TbA+7SX+ceoejKx28/ZaK/vO
Z4yLY7a8l+pcwtzYB1fMnL5rOe3OweF2tO6l84xTrobPxft2n1zb8sODXFuP
0Qeyc3ffHH0XzuX1Q/hY69wT4wKYzsGx8L7yhP7ShavnghVx0Um/X4Zp4n2Z
96/Y/y0nyH9epNMYZNyZcqy5q2XcH5v3EpvrXMb7MY544463398cpe/EGO9r
P9IFp9t8YRv7w6zMTVPd1TaNqfu8sHqBpm2X2oD3wchL8trqikdhKiNFaUCr
3S93er2cnR9r+9Wj4trDg259HeY1Pr85WYsr0PF0j0vfA3sPFsLxsXbHm88r
+fhPej6HeL+OH2FQ03zasjI2yPltG8v/B4dd/aQdP9X/r4/S9NB20Y5VlQE/
F2zYBu8HTc8x6/iZgz60a5759k/chsL9lIfOvAvm7ML8fML7+KevrY4FRs7x
/v5O3j/9JG0n0bYoLXyi6cHoB4j34Xz2Y06v6oOPa4MxH7iH9dv8PLW1F34j
bVbHju6F/okYR7xfxP2hjThq3qcn7S8PWkGHJHZ6dZBeA1ZPOS7tT9DWaEyi
qj+jdku8j66f7fj30evA+syreN99+5jnffve8Joa6Uf9fN4Y2/t3Ur9tfOzd
1oRj/XwAbS9ien//hbw/m5/zYM/Nuw+mVx+DsTXqKPfyw2Er+WRmM7lwbyLb
ZucmlOXDV0u7jdqr94n3j8s871tNA0YbC9/1M9bged/WMXFr3TGwJnYcTLy8
OF7OFe13H7x/fax3DAnfvpi/iPP9/yfN+NboR1Hfj4P36W9S/mKxlGTkTb9z
5O28KOygE7PHt5f2PZCN4ZTx8J2d5OK3rWgbN8zyztzdk+B9W84HPceZb//0
2MA+f8VU6vwP76Mfgc3R2zBH1OrNLe9vPO1qWmBhNDw6T2D9nZQ1pNUnfo/l
fXQsMR1PEe9zLjREpEG8r98ZhyiKT1lUf73+v4wBu+16y/gEOuMUxjePWV2Q
jceJ9inG+8yF4BjGStI0tYIWI/B+K9XvX7zycYjP6Xn/2uql0N+ZuR+PW/iu
WRXv+/eIff+mzzS+r/VX2ndEUTqK3pVFvr2m98lxiglp+acoXXX0R8XlPH3f
yi8GG9JWvGqXuRtrd5PffPtNKEeD8v65+e3k8r2twrbmymLr1GogTqtZDYn+
l+YhjJ++6Goc+L+sLMbmlHuNin/Go9KtHIfWfXJyLMoUH369mPz68qXkyf5i
snzvRs9xYzcuBiu7d9venES80jLjvYter8r3PgyjXUFnb+fMeiMN9PXVJ21S
nmIxN9XmWu0PsTMZ0+CzDu/76/ixgmGMS/B5kvN1v5hZT/38DfsHH1quP/Pt
n1rri/3tvN2pVNdjeZ93iOaael0PvG/ruOV9jPaGbRh1Hd5XnaeuFvm9NTfY
8760L3Aw82xzx7S5GO4um8PrdX7a/vh5dV9Bx6Ll0TU0J9iOIzA/gH3R+ds2
gzT6c8P5NuZQuE77HuB+pYfxFfo244vzITZnXNNzPjfn+F22It63z9DO+/b+
NrvfQeQdYc9V5hNt4hsbBrvY+7BjGH5+sd3X2tPnm9HtOq4O789sNRvzSsfL
u/WdebmME5S1T7DBSZexd8lsGVBbrPhU4v0m54p9tzzly6Ti3w6TG48rNtKd
8S+SX968G/VxovHn/mK8Tz/hVxe/GIj5TpL/ee9KXyjd3iivV6dPCO+jp1f5
bXJ+yopty+UfkXafc1+5l7J+FVPi18cX6ccjhp1HSytzySfjKyfG+zB7Y9a3
zN859oPrc8HOYvKcXmvK/d0YS+n/8P6le0vBD886WtKp4I+HccXk0rJg+O+J
83fp280232+H8/C/2ILfmQ/MWlx7T9J4PTamTZmhZ+dYe4zlfcYE+tG1xNbp
eBv537YJG4+mctus/o802vnAVbGPY+sNwPs+thDnhPW/vPaT5Isrf518NfNp
jvVj85UtB5wm31M/5p9RXVbwWp+iWD2x5x/zpeud468/DP1xkV4gxmCx41l3
qoz3U3bbzs5J2by0uBjqqfQ8/TDdhW/Ttbw4D/61KyvXe9oXfI1aB+DiCGOG
/BisX3972TGa9+HHyPg+7PUFjov1mYMr3p+5cy1odGysTngf//7ifHxclOPh
yLJ1Isvy+jjWYCsyPT+9f4/jmlXlC75WfvK9SZ76ebhvzXc+m6yp1W9s/Sb5
gMH7J8H5OWZvuPaAPTZod9oWWP9Y0nzy3Pw+WG32h/c7YzefzayEtbIu3F0P
vJ9by7bNosRiZpvX46LVEe8zToA/n3iSXJfvHAsTw/vSn8b0+7Lx7YnM1y/e
l/4FXTvfFdv+dZ+83y+n0b84OIzP9T1ysUSrfHD0pZh/oHNwvNUHieuvr5wL
zP+r8z/J1j6z+1lf9qh5nzQPe6w45tuv83yq+lVFjGRZ2MfP8Xpme4zX3Y8i
f4vOWcb7Tc4fxsDnF7P6r1jdlsfq1g3K2q/ni+P2wPpqe2CQUZWV99l4LvhH
Y3Oom5SpplqFsvnC74I9aqW8r/8Vh4dPeL/Ix29Naz7FtPo+Dif7rO7Vm8c9
in6Pb8uobycdJ5TxBpicT/KR9lpjVXWOj7XTescp1l+VhiesJbjSGnk/TPXr
RFm/bR9NbvR1XDYe0fHnn8Xbf3etlP3VpzPf4f3F775L5rY3k+n740FjArOr
3sH7aXt3P/A2bYs9r3j/3Nxm+J/6yRq+xK5Hb45Gh+Ol62H8QOttxdjf1it4
n/hA+MhJUxXvWwa3PFzGava96PdL263uOeFu0qR4OfyOJsrG8y26DqxPXsR+
s3GIwlrd7c8rt3+Rzl1o/+b168elj/Zz7obxTumX95tYjF2k/fHPumhcILbP
qKyOf5+1Zqt435+Hd+31lbzWnn0U667JvZ3x/mjMaokH5f2yeSHHeU9148+O
Ol93H2520tGq5H3ZoYvBc3jQHRvRmrDsh0/9tMRqPQ3rApDfxO2EtS3v8xu+
Q3F/nblJtt1lnODrtd2g5Ynxfpd16sfcLNK81TWOuTq90L+WZgj265nt5NM7
DefWtnkvpz+Shn/k6+iesf6JsH+b8bN52FOpjh8fP+vkojGB9+Fqxd9UvYV5
+Q5vH/6Q1mO0O+J9+55nP/oOsDcG41JvGe8P5+vwvjQ7rKtlmX/eaOC1H98P
Djcq2rz7Wbqle/VtR1GsFPkQ2ObX5bK8zzVgcHE7+2s9MV236N3KeWH53LgA
/arO2kniffj++tq54N+Xpmeps0Zv1Xt7mPPu1E8b9nuhiPerxoqbXKPIV2nj
jcfiEPbrw9cYmNZxGHaeYZb36/Zfy3ifeBtNx76owzrPp7N7YbyAPkCqqe3a
sGJd/1h4X9+L5tQ2OddJ6vpUv0ZVB5rcm/JQa0rW5X1v3MthxT3Vjdc66riu
J2lhXH6rG8PH9kG0hrOPtaYYVDHO15hTuuZPEeOnRnuj89tnX6dt72fsdn5t
Jc77xxifh3m6jY9r8z1rIc7vTIS4RZ9Nm3ieI2f+k+fhH4vlmL+j6Qm/dXz8
4n20Ov5dozokv4bmreLXhvXpM/jrMHc3jWu5FbRCxOkPWp8X3XFT4s141hfv
w/h23dp67XKX921dr2IaaXG4T/z3zOv157Br7Frej70Dyua9xeKDkmb6APLt
w/uMi3x56a+SL2/8tEdPVGXsf9z+vCZWxHDD8geS997vprlg4vzYvF4dW8fX
brdxLcaxYWh07rx78GfVTW/dZ7WxPJ6sflvNLP4dd2cr9bvD5fKxMZ8WVm/K
ZZxbGn3W1lJ9Zj2vj9w8/mGUwR8D7w8zbuUgrD+M+nea251+ed8+o0H6MZoT
fdL5MEprqt3BrI7Y6yu9Zj+2pprlfXuNYZTFovp0bnI5z/bt7/jMPzyWWJap
/f1Cen36HE00/Pj3954txXl/ZP2Vk2fgH621nytrcGHUFfn4n3Rif6ie4Mff
erScxdmKtXVprJzeMf6vFlPe5xxwPnr/z+fz3Arvo43hu12XCv8/xxKHX9ub
tLPeR+C/K93MFUC7dPdBZ6y2/X+deq95tt63L6MvgObetmdVaaafIf9+t8/S
Cnr+QXh/FO/fQc9ZFotz2GlN8yPP+2Vj303mzmKszyXdqrZ53i+aLx4rY7E4
PbK6vO+NtNg59emYVfFcw6p0aq1e7pv/+ZzaXA1m2wDm7Gr9Mhlr7lLPbL+8
n7LyPtlJr92k+jAo79s4WqfTWoXzduuYHx9uauobn3w+jNaalgHr77faNv0e
XTfZGLr+YZW7Or7+5c3llPdtOtqcjP8z6GuOycf/qztpHM4mmiL6JNfXLicT
2xeDnx8bW5rNfg+6j5Gk/xRw74/ZOmtwifdlmu+/0krjdG7spToS69/2ppj7
Pk4nxjaxPpwMX8s3zicxaZZ2N7JYQLC+6i68r3m8/cajs22Q1+yRFuoo6WJN
39i6XdLexBgwxvv45sX7ivFT1RbBPsThF++r37Ewczn4+NH00Berum8/d2GQ
Nvi4bRBWqGKlAze+U4e7xWAHFe9n9vW878uL4uWJq4re+VW8/8f28xX/MpYF
O+fj0sb7hVz7/ELK/WjD9V4tHIM64/1jNfW/yvwC/cSPqWtcV+XipPNitDYY
7+s5nPx9dG0Y/bSTNhuTx7aB0hyWzdHFtwLvvz0anpZtbiUfs9vXix7ffifG
Tbau6TGwvni/n+Om79/IeH/uwbVc32U0MfhPAe+eoA20Vu4wTTH5O9oe2Pzz
+aXk3Ox8+A7v39lq9byLYr7KlJ83e67BedDyMCcYTT/cCg8zT4A1rfBfw/vE
1cffP78znp2b+i4/aZM2zWpmdC4YI/Y+g9fFPfC+bTM0/yB6jc65GBsI6ev4
/OF95uVKh6+YiFVppt8z3e4j+HUF2Iamp47/76izZkBM/2v/D3PQfjiZtv3e
7FelbX7Rb7Wee+R46XOK5m3UOdcg8wr8+7hMm+39XFaP9qZdpo/az1b+/YWd
sW6s1o6fhu82TqysKe/79Ht9EP+z3tbqfvpelAaXfXn/qo3je1G91doTsw+u
hnRP378S0o5Rf3QfPwberypjsrAO4X53rPX95/NhW/05u0V20mMxdn6EPtHm
NdEPniaLza1T2U7bkmKOnNzoruWt+dSMYfr1Fl+9qp8e9of30eVcmJpPbi18
m7T2N4MGhu1j8JH37RMD/85Ou21tBf/hcfF+P/bFnduB97N3RtvQ9mRjBNk6
TTvZ/4P7+08B656Q4UNX3PoTt05/NFuHq/1dfv6U/Vu5OunrBXwpdoD12Z+x
AY71fRq4OrD+3lxYRxbGZ/4qvD+2PBc+Jze3et5h9dbtafWkzX4XRzFny6+3
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
hPcVl/z6vY3A94xdoHOC90N8fxt/qHJtrlPAtGdWaVbHj91Yv575op8XaAXE
+5Qj4njeXEnn+n55txVi/Iv39fnBx/8x8L41tRXex8821tjNtBuG9eFoxfas
MsvStq3283dtu4CJR8S5sfXTNW+S+ENqB5RX9A3K/Ps6B7xfpCHi2vQ5WItr
cf5a8s3t80Npr+v0Bfw+pIWYKjBb0+vh24+9x2Lvg0HfUT4u0iD9nlHxfhPz
cZss76f/p2s0l/XHYvH27Tnw82883Ajv2+cvdkpjJsWM+ROcw9YRrcfL+1u6
h4PDrVDv0vk3W+8d77/P9i7wfliTtd2HZT2hovalyf1KP+OvETtfTFcI75dd
U4ys/dO5SHHu1zgapnRp7q60/+wn338R7w/SvtoYYkq/j39mrxvT6Vu/vv2f
8/g1tjDaD5hUPG6P9+esincM78uKnsv249mO/2Q2/L/S2gux9WH6ovxkvu5x
xuPsh/fRWfryCftTX1b30jymb8qckGfGp4kflxg+8vlnGvBC/dLJs+yZ1eB9
mLyzFpf6cJ/NrCSX7i1FeV/aHHE6vL+0uxyYn3m/9lxadxfe/9nf/JvMLPej
pbHMAuuz3i5zfNN2bD+Nl99mmzLe9+vYKn3MHyhbS8AaPAJnKz2aL2f3GVv7
TdiHftHO8/1c+8P+qQ7zvuOYXl4PY7id/I3F2lca6LfEeL+f9nsQn3c/1iS2
otrvKp+N3Z9PG+/dvqM1X7XpOg52HGeUMRCr/HCUId83jc2nLzLKLe9R/PhF
eQeb8zvvBPterXsPA/G+m3c8LN4/Ll/7KMakTqO9C/co3sdiz7+Jj9/G041x
vW2brI9d5YEyT32o4n3vA1F74HU98vHbfgh1W35/y9BeVxMbV+3nmfsxCNu3
0PWUHqVJZvsyts7YdBNzqIj3lV9WO2TTVHUv+Mtmpy4F1i/bD85H6/7DQXdN
HnT6up9YHjEP4MSZvoL3bT5xj+J9yihzlcX73Kv2W99P50zk1vWC8wu1/ifP
sWdW09rPUYxujfmicHxR/RBPjy1vBUO/T70V89OPEO9b3rbcj1nep26tP0nX
2xLvMz+W2EFwPv7uKn2J+gZ23KAu7/f44B/n23e7RhZxRuF9rQesNcLE+6ku
6Fz2W2Hb2u6nwPuxcQcM3o/pefrhmjrto31X+L5OU+s3lnq/PkW9p3lu0sfz
jrLrs1SdI8bHTazuc6nifcaQGFfxxxTdQ+xc/fD+IP5crZXzycxmML6/imj3
Y3GGzvz7Z9avUd/hFvG+rydNNT22DfRzc+0cH/ndxcF8J76jrU86jzWxu42R
a9OtefPSkSomkPUpadvBYf681uftr1nW/lkOj+VD8E+96J7fj3vrfmyMzdi5
fF8A81oe2i3rm7L9ilfufvl9Y3Ui2VqbTF4+T2N5wLN7uwuB8eF9+fbLnjk6
F3g/96wr4viH9cvrrnV7EvN623z+2XS3/xI0S0+68xCoM7TZts+p58jYMMyf
zWH2cfrPeP/dNBOrB/2+Zf4wb326dw1azYelvrG2lng/d2zn/PB+0Vw2eP+v
f/qvcwbvw/rXVi8F/z9zCeycWJi/rqaniTGfxep4sFgcBu5dvG9ZX7yvvsXs
3lb+t3Y/JKa19uMS3p7sLyaHL3rXJu3H7+aPia0LZdcOGNS3NwjvF83JrTo2
ppv1/q6q40e9vo59V/k0WlteGIvOdY1Z7HhYnjqInj52TxoDgE+IscMY7iBx
HznX5aV0XPyzudXk87vzyW++/SbK/OjDiDnk4/Sc8f6ZNTHpW8Tb8X508zm7
nJP+sH8HqF+hdpL90O/Irw/vU4+87sSPFdh5uOJkcS3nE98HH9h+t01UfH6t
w2bXF/Sm6/Ppxzktj3vfuUz9EZ3fjmX4d7rOd3CYZ/m35hp2P/2vGMGe921e
xeZkwPcyeP/p05VkdvJicmf8i8D24zfPJwvTV2qxfpGV+VboC/AcKuPbMFZB
n2BEvP/ZrYXC39Di+HsIWp4HqV8fQz9h1zDjvviE97M0l64jfAoY9szqWWfO
rv6H9+F35uxK1w/Hw7CvI+9smJ/90fTA9R/fXAh1F963MfmLeD/E42ml3Oy5
H8OvD++zDu/kg7kQm74J7+Nnh9/rxNZnX8Ya9H9RzDW1PYuP93t4n222rbC/
ke7Y+WL5aq3JfN3qe+zNf/sbbevttXpjIXWsX96XXz7Wzpcdx7u/TL8T60f4
axwH7+teqnzpK3dv1Ob9ovvVmhifzvb+Rr2krWe+reLeqb+kWJr0gxl7qjN/
Y2JzNrlwbyKw/q/mFwPrw//E+4/dv30Gg/D+2dqzP17TOJ71Ucb2g/eblhEf
31e6+bJ5Qlr/Vv/T56ZO2TEH6p1ia8o/r7aLT/E+v/Meki5R4wKKy28/Oa/l
fqXRM73th/i80rGHnXsS7+vT19my/PTaQ6/nt7xv+XH+fn4Oho/DqU/8YPLp
8x3eD8+j/T8+fXh/0LLl5yFYS8cldmrx/oXZtTAPdpicv7QyF+IMlfE+9vL5
Zqo5aHO8xi8oT8y1pG+a9jlTbpGmh/m7Gh+QP/jMt/8emObpdv7nmaqOKc5O
FodpPB93HgYgrj1tDXN12U+8rz4AbZWYf//ZTk/buP6sy8xTu3l+FvNb7Q+8
L+aH4cXx+M6lD7bzdPGd+zhDVaZ5kvKdxNowtY3UE5v+bx/meZ/fy/oa6l9M
3y9eU0u8T5tWlm4/fu3TrffCKOff+Tmmx2Van4Z3aIz3y3Qzsd8Uh2qUabaM
WpQ+eF+MUfd+YvcCc8TmnZNXlPPba6nBJcTr0e/oiYibSf3pl/dTrrmfxbv1
9813G7NnEP/+cfTTzmz41u9zE5/WmWcuTc8g9dr6t8v8CvYa8CxsZeuf1exI
I0M9lT5Ic3OtT9/qZOyxvGPVrts5/eJzr5+xn74d0XUOzRq/dj6DnWdcpNWx
a5fcu7+bq+te7892z49ah8BfQ//jy1++dyP48uF9n4bYMyiz2DWKfvPnh/c/
tLxfwP7w/uMn6Zq8gzA+fC+bW5kP64Z9OrUR3Zcxhesz8xnvbz9KeR/fPuWF
Mkl8Hnw8rL2VPt9WYP7A+2YtrvKxiVPAsWdWz8IYTSsbr5Fen7qIFh9/fxaH
qf38b/0+Hcvc2N8Mfj/F0ccUi4fvHEsfwK7FxXxezy7eP47Ndz7x598IMQd3
e3Q//C/eVx8As7wPS9MPgPebcKhlE8Y1rM/ftgO0Sfjz4XzmGNM+3tmqv5aj
7QfA+4rT6Q3Ob+rfL2rr9F4YBcuSZzaf+/XtF92Pyo7ec1bXank/lgdVWvmY
jWI9U5smz71Feh4+d59u5fZruq5T0ZwEWMTzvq6Fifdh/Vj5jJWjX06lWrxz
8+l6HIzNe95X+i3vS9fTD+8r796FWDJnNlyrO2+zqYa/6lx1fqM8Uqesbz7G
7FYTL9+85sRqP6tdtzxv+wXeh2919DFftT2O/+k70CbQFpAWWBBNUzYX9+VG
z3g0ba/GMEhzekxq4v3ba61svoP6NhzLOW1sHr7bdjfG8PjxYX78+DG/VtGx
RdYP73MfaCDh94sLKVd/duObQt6fW08ZIhaHqI4RI4gYmWL9+bWV5NbCt4H3
y47jGO8HDPEDV9KxXO6Bz2cd7Rhanycv2kyzZeYlnOn23xtL10xLv8P2Fxcn
euqX1laTifeZY0pfUXodNDz49+F88b6MfShj9n28/yLvz5d/f97xP7yPFt5q
fGO6f3ifODjy/y/sXKvUxnuD7XUNtUcx3lc7S38Eg4XQ5sP7/fiqiubqch38
+8N4R43a4DmbV/3wfpN+iOX9onPZd19R2x3brvGQuukbFWeufnsjaW3NpGtG
dN6zB+4dPsj503dxarwHYH2vv2Ef6oNi6JedjzwbWx1PLi0u5toZftP4Gz4C
LPQPO+dTXH6YX+uLNbGyZztoHp3Z6Tbrsy6rh8Pk/TppkonpSRvvTvnQrfZe
add+8nHbebbq5/Mpbb9+t+Mbvm0oYv235nflG+c/N99lUliQT80fEO/bOQJq
fzXvX7yv9MD56Js0B1RzhNjHsiMsPLnR6kmbTR+2024P7dzcmNWt9/gsFbOm
6TOGZ0jzVCfNzA8uisevvGX/In98kY+e/dHh23sjvZXHt/se8L5N887jdG4J
abfPGN5nvjIG7+fW3T2Luf/emOV9WB+GV9nnncx32ij56APzS8vV8fvzG30F
6X7ge/rzaHrE+Xz3dQreR58fWL+11KPniel8imJ2e/anPwDvwxfcE+sF4E+H
R8v6AByjOcH8z7HzO+O5uKT2PmgvOAbeJxY/4yOak2v99/360/vx7Z8Wg/eb
MHZRPln/U1Orw/t6z3q/Du/iJ5E13P3YtdW3DltP8nhvsS/erypvsDXlVBov
+ue805+8yOugdR72JQ1vKvrPvMdj7Uy0bH+/HObrUne+79Qv0qX1xYZhZ7z/
/ptl3qpnfdy8b9MH39t4oWJ9y/t2/I76aPsN8jG9cdfw8XBsH8KOe8X82N73
K95nHQPLdYqLyT7i/dh8Cc2liP2ucQxdm7EEy/wx3te+ugc+4f29BwuVz6Cs
bZTx/vYxebRP7DzqvxGbH66x+8L7UWa/s5Ncu7sW9oGr0c6QF8TNye69zfTy
pxMP55OJtfA/9vJlqyft67t7aVz8Ig7vxM7kvP7eDg/SNJwLnLaXxecnTdwX
mn6ttZVx3hnvv/PWXTuhFcoG6+Cy1mxWd9u8zzqejOcTG0drK/tY/Zn/Pysb
3WvMbe+GesEnMRJs3UHbLl6C96tYnzm7Zev0WPb3/n9pf2SvjfbfmmL0dOfW
tkr7B+yPXoj8Gd+eCPepvkGdOcJVFuITDcj7J6VxKOP9Ih7122PvlFi7Xpez
ORfvXc/sRTGWfXsfy9vj4H2fHj8m7/2AVXoDyyJ8whaaZ0MsH/LIagLs8bD5
9wXr8HFcXd7H6EPg04f70Q4NIz6PYhTK73im6X9/zZb9uj7+40yb/PU+5qbS
4scmPN/7Om1jGNj/7bmK5jN4tn97FG/bSDO8j45H+hN4X/oh9Qt8/wOTFoff
4MrDg9402DTauDz4HGL5aPsw2ibmH8bzjPG+v77936+7hs09uJZ8ced2lIml
5cH4rnwjj+Fq1uzC9p60kn1ij6/MB+Yndubjh2vJ4nae2XkuMHrpPGETK//x
s3y+8kx4rjA/vC8tj/oxmqObxeQ50+6/H5bpstKyQ9x86THwWd8ycfLg2fWH
cyEGJTybi7vpYvxYozxp7q6vO8Snt7wUi3fjrQ7vy7+uuujj/WPBR/HDg55+
APyO9rhs/mzMOJb+EfdK/tBH4P76bYPUx4D3b179qP5xJe3fcfs5+9Hz2HdZ
1f0UtcFV+VLUf9A7eZC8KztH0zzAPO9bf6C9L6vx9b7CmAb2feZ9dAVPjKZZ
zGTjixwn951ZtfE8inR5Vcf52JOnRdNT1v+wjO59ycoLO4Zn673//tb9b/PD
fsb0PWX1wI4vvD3qbXc0b6psLpH3jVtfPef3mpeic6h9Vz9jmLxf5zmGNL+K
+3SUhutrl5Mvpm8FPg4x6829fTGznly5uxXmwXIeTLyfxc55kvfjw/vMp/X1
gjyA+X89sx1l/ljsT7/OJv23wwPNvUj1PB92/LniuWrf/hnvv2tmef/z+W4/
lzF2y/t8l1Yddqf8SKdj4/tYQ9fDPjCErxsYPEw/Qly89Wg56PTR+Hh/f6rf
j6/PY83rbmLtgeX+Iv//UcT/r/mGRQbvZ/Eb2rxeNP/Wmx0/0DXTba3g239X
eb+IfevMNW3ajuv9kXsez+IMEfNLDXLtYdkb94l53o+971XO6/J+kVGnVXep
s3pH+OPpT6PlR3vv4+rbc2AXvi3n/e69t9p97LFQhy/f/CDwf7+xnlLf4n6W
J/oe4/4zOz6rGqcTP/Z7TquvK9t/FLzv6+JbkybLydbX7/340sIrxmYR22vc
AF289Y8o7v0r8/nKbZO9Poqf297LG/d/2b3Htvv2zN6v0pTqXVpZvH3fR9L/
ildkz9eE98Xq/T7fN0fdWJVFa3Dx2/zORHJ+ejHK+1a7w/5o6Z99vxO4v+g+
NA7g6wX5EXg/4tePrf9FLB6fH/A+3B9iDN3pzNXQuEClX/+M9985k3+/o+mB
92FuygN+fhhfFvxubda322D1dK2tdP1ctCw6N+WL/zVXFz+/rauYtPKaG8u1
1QfI1qXd3wnX1bYy43x13y+wBDoc9EuxuJ+W+RkHKNL/WKM9mdhcan+mdSvG
+6mvIj4nie/+Gt/cPh/V8zTlFu837/edVrfNlG+/SldS5IsbhgZpEJ9hk/2b
9KNsPG/rhyuy549Xk/mpi7m0FfG+fZ8rtl8V81s9PudgrUXbRlBv/buXtgGL
nRNfke0zkAZ8UVV5Sv/h+trFjPezccU+uN/zPvFGFAtRcVbPeP94zfKtfU52
H3Fuk7rv2/g6WrZR8L6tk7mYFCbWjI21Exufi8XrsX35A+OrZ71wyrXKM/se
Gr2N7d/afq5vD/yYwVtzD/Y++O25m9tTlse2zZD5MiDeF/PH4vLY56mYbGxj
vi7P8dXL++k7tWTubpb/r3rTLXa3ZcbzvO8LVZVH5dPE4ko+VmfHiM3JvvxG
vwAtT6wuKD4SvI9+B1+/vc70RqunX8E5OZ+djyvDH6b5FcwxRrsD72dzc02s
/TPef09NsTan0ufOuraUJ61ne8utfWmN34l9id8bv7pib1KWtNYWvE8MH/oF
vs7ADMwPEKvD37Zf0fXrx69tY3bb7XXaZ9LM9UKbHGKLp30PdDxe+0Nf4HUN
/39ok9r5UDYOEON936ZY216fLOT9Ou1PHRuFvt/yflEfYdTzCgbldu+nq3tc
k+s14f0qX/3ro64fWzFwynj/TWcMyW6LzbdVX13PzMby8M8WDtFx+OykrbPx
w2NpJ62qw5dv/zzwP8fGYmNVmfWhYkW8f9zjXXXTzqe45qTT08Ss7sNzd8z3
bbky7aPlfd91rhlb66oOkw373j3vY/CZZ1irrbd8bdfQivXnFQ+TfZjnSj3D
rL7f+/J1bs/+McaPfXqdlB+XLW5X8s/ctkGe/8WN9jpvK86LKT4Pa+nOz17K
vtd5TrbsxHwmoRy9ivtK6vI+3/HffygtfERzk/nhO/ofeDzE75lJ/fnWTw/v
a34wFl3nC99+Z42kdJy1Ow+assj5SdPsdjcGE592LkD5ulpnvP/Om42/337m
F+726nLraObh3KXdjeT+o5Tv4X0YH4P5fbsMK8PY8D4+fasfgvdjmn3r4xfv
o//lWJuOsvck/KD903gj6Zxb0iDe98d437/8//ymWP/i/+cFuuZ+3zXb65PB
x+/brEHfWfbdOwp/Z5F23891GvVcSjjvuOZrFuVh0TusDu+X5WXRtfSeRmMf
Y+w3R/cD659W3ice5yDlUZpipY9rKu63PgeJ+TRKI13Ey2MOAv2UpussnGS6
Y/xUVEbfHvWyqMpSEbPHttk5sWXH+vOMysdv7ylWvlQHNPam8qr7sOvYxnhf
sfHhN8XqR9ejvLN+dJ8eq+mx4wCx8ZE3Jl1+f+1X9Wn7Hp6b+W7n6qZrdPTm
F+/ay5d+lh3z6OF6srw4Hp4feh77Tob3P/n4/w7a/rJnZL+jW5e2xfdXY8+v
qmxJm6+xZTT7letV6Xfi6cy0ctr5wPzZmqgdpu/ob4L9w1J2HvoMxN98/qKj
L9hhvLaVxd9J2780NlDPul+d9IXr1lgv+Iz7303rPt9WD+8zjg7P1uF9TOzL
+H2q4UnH6GB+zwVWyyPOTz/Phzg30u8TG8j+bscbtGau/k/n/8bH/oPGoRPz
G95P1+BKt5MW8X4df2Js/q/GABT3s3cMoNk6ADKOn5vs+nd9mzWI+fmMRe/G
fs5dh/eP046D7arYfVRpsL6xJrzf/T+Nm0V8TOqubyM+ms6XA5he48I+Lbzj
LO977imKYYRu5+b6+aDpGZT3ifHNO4004gsVS51EuWvyDGE43p2e90c9DtaP
+Wev+aX6FP9bPZ3lKasNsW1Q0+duOZ/nXuf4UfK+vh8exOuHb2+VZ+J2MTzb
FXeXfKRsSMPDPrAc3ykr+G0p59L7eN2N9+8rrX4f+7+eUayPUHbvVWMGSgNx
OMX7aFbs2ITO+fTpRni3/uQv/1VgfI6F9/fabHB97JPk3Lm/CL+z9hZ5iJ//
l7/4P7Ptdu3d2DPifM++z28vG/dr6meTLoh1bUNc/g5Ty29PPE10/eem01ic
xDiE3zP/utfS61PaG/oD4v3OGAExQYmhH0uv1TN1dVQ7yVLr9+maAJb5G/P+
Gfe/E2Zi9BBDH2aXjxp2tr7zmMX4mzImbY94n/bJtnP41su0QtLvh/V1Devr
GPzwpNX2R/D5e42NxhEw0gfXMy7Ab687v9lr6reyd5u1xflrUf1/zxyAg+3M
mr5HuEZVOvq1Kg35sHm/n3soaoObnCvVLKZ9UTTqvCuHnZdN0hTL16b3Y59h
7Jx1n53yN+jyXsTj68Aa2p93a9FcXs5F/+DT2TSPY2WLGD6wmV0Lmf0YCyA2
Frw/aFkX70v/cBqZ2ZvYBw5Cs4u2ljJ73GlvUm7sGrBlWgx/Xq8t9z6HJmmw
56szX2dUvJ/TgzhNjd1Pv/n59ZjtL+k3yjH1j3IM62PUH+og/ULqEb9xPr7b
tbj8+T2zW192zL/txwrsNvus7XX8s/GMzf/M78vmsi70+sLQ5+CrF+9jPDMM
9of58ftj4n2lS7yPLd+7kTtvGcvX2aesP+D3tXkTfKAdvzlr2M6tLmdraBFz
kzVzS+Ppd9hcbM88qTDXdjKN0cOxxP6B922+e95H868Yq/QLllszXd6f2jGx
Fvvl/TPuP7Xm42i2/2feLbzf1clUxcQ5n+N96WNpn+B92iTqttrhbptxP4t1
X9iX2Pgy16+A562mR+MJOk+Rpl68Lz2wzkUafJ8jxvve1KaJw2MW8/9j8D55
WzUPwBrXQcP/8ll87MHzQL98EGvLhsEa1pfV7zmG0dfhHPjJfj2/F+LGNPX5
1smLond8Wb6UPnvXbyobY/bv8X7ySPF0vMET2kf9pqJzyEdZtDYXrCLfL/uN
b15LrqxcD759+fcH9WvTDukadXjfan4GLav9mLS7F79N8xddrdY2HXbftMl4
Xlk5sr71smOKdDh+WxOddNE91Z2fP6qYnG9ceoryVLxv55pYPY+NtSPep58s
7Q778W5Vn5Z9Kb+K2WP99TE/vtJh2/xYOn0alccx9uW7XQvQ3qvPJ/H+R9Np
HPie67Z5/8sv/jL8Pzl+KeN9+gD48PVe1TGq67oH+gHy/dctz3Wfb9Nz2PzF
9naXctsD5xfofaTb0Xfuk/YT3uf5333QCmMEdv3dWD/r1WGrzTaTIcYn6w1s
/GEuGG0OGqAsDfh/WTe1L03PGfefdst4v6Mhg/fhz67//XylH148jk6fWD20
RbRPiueteUa+PMLc6Pc5dvLBXE98fXtd/Pz4/ryOH+a3cXlidVH9F5nWx4rd
V5N6DIfXGYOOjQFUxQH1fQA0PTD/9vp0z/ljc9Zi+e3fsTF/8DC4OubbJ98H
Pe+gZu9f49WjulZZmXjS4LqTE+dDDIrjSBd2kryPUccv3vw82X26NVBZlG7o
4DC/rmdZ2SDdJxG/h/u0vH9+IfX1a70j/rfjK4Oa9OGW45r0U5XmYZdDnpP6
XGXpiHFp0/kYo9T02LTgfy/T9egZ6B2pfqrYH+Mc1Bl4H3+Fxq7UF7D6HT/f
17K+X6vL969i21Q+rD7Jrw3gy0SsH+DzXjxo5zPnymib9+F6MT/6Hd6b8D4+
exuPh3P4tQJknMMyfz/jxGX3Wqc8FO378vlmMjc/nnx245vA2/jexfaqC+fm
02348mkPKAM6XrxfFh+0619tdfsbbd5Hx6+5wbm+Ru24PGfc/y6ajb+froHb
LS9pzP3rOQ19nsXl2z+fTG5u5XifNoH/WZu5iKuetMs7HAivx3jfm+d9OB5r
wumW+2W6H7T3Tdp2+feruLFoHMBrgHwfwGqA+H92eynK+7F3SdH2Jvr5ft/p
4n3r46lau0DtUz/X68dGoY2qY8SJbML7q9/eOFbexz+Y+pXTd8Hle1vJpcXF
yvyLnZf5A34+jBgifG+XacoFPn3L+1g/vG/LPdeAA568qI7rzr7wtDjKctJx
lQu92zHL+3zyHOyc6brP2DK97rOf8Qur+fZajmFrjeqcs8ovUafcjIr3lV9K
A/1kn9cau2L7oVmbW0x+cJjnfcqudDrwvo/fb+NUer291XT4mP4+P2y67XHi
fXvNmA/fjq/Y94y/lvQkMn89DK7XPF3Zk/3FwO/8pm02fmmsTIv3Y/2ZWJnx
n1XtQN2yFvOtwfuP95eC4XeH91vPU46390S8Q3g/du3YPXldlv1u5xOHWJ5m
LkD9NbbOuP9dNcv76Pctu0r74vXzWnsLzkdHT8x5YvKE2Js76bsLLQ9tU1nb
Dat/vfVFLhYP3C/NfhHvp5r788E4h+YN2PpXd1xXzF8VVydmcDzjIVX71D1f
bAxAn+L9i1c+Dp96b/Tjo370/WKUv2PazqbnDve8kB9v4VpNeX/UPJ6+w/ZH
eo1B08fnyt3h8n6at71xefK/t59Z+1209oe5ZHV/vnAOvH92dfVOsDy6uetr
Y5mOJ52rO5b8du16cuHeRLL1aKMvTYe+W/6J+S3tceyLf1Axr9WGHYduXrzC
nBLmPWj+pX1H1uV976NXn2cYZVFtg/LV89mwbZBz19XSjXqdXfLfjovJxPte
J2Pn4ViNj12XgH7pgTvu0IzRWJ73sXVURmKm37z2xz5rpe/A1Qtb7vTetf0O
7cdvxIoR76PlIaaHvbb2Za6u5/2iPC773fJ+Wb2J+e9tmvoZF7D3dXC4n/PD
831rYzYZvxmPvef7ajL0+f66Md73/Ru+KxYRzwDWz3i/E5N9OLr9M/Y/zebj
86jMwNC8kzVfd2ztNznfPkwOd2/sb2Zl7vCHvcD9vJvE+9RxmNiXW6vJGd+6
nkw86Gr5y3j/6srVMOaQxu0/X8qRo3wfieOHyfsxs9xvxwCwfngfn+rt9vNT
vtXltEZ5s9Crr6o73j6o3652PrxuNtbRj5XppP17tugcZbxfOE5c477q9L/6
zfc/VsxHsee7tXk11GtY/+rq1czH3zSvrZ+P/8t439+P4neimYC18aXC3cfl
36d/cfHblIHSubq9PtCYhl/vdLGj1owWZxatx1f3edqxAM8Qg9blYVhRn6Os
XmVjS47335jf0c8MI31lc1Ds2EvM98unjVmj8m2PsT55Pf+ULfOsH9Px2N9s
DNCYD9+z+4Fp13wf07b3Mb92zLfv7/vp05VcHM4yq9PWSQNUVZaqOLrqt1if
QXkI77O+VdYfanP3p1fGAr8XlelY+WbbDw1ifjAn1z7rJy/2u2tsTe104/6Y
9baOl/nPuP/YTGupdf4/N7eZKyvifdicT8WyQd9D2UH/43mXtkO8z5wc/GQq
41aTLt4vWze3iPvF+xw7KO/3y7twPHlwc314vF/UvjDP2I6BWOb3YwK5ezvq
xj/PtnV4v27s0X7M6/f9fIKmz2jYpjHw2LuiSiug+2l6vX6eO1ak5ykaZ65K
u45J156oFyN2lLxPW5Ly/sUsHidm9Q3S+kvb7PuOepcdHHbnL1omqXqm4n2/
NsRxlUfP+4pTiP8zrIXT0fb48ldUBvQ7eTGIf59z05bbuPh2TaiqMj5q3i8q
W55B6SuRx+ShfcZomGPlY1h+AM0JKUpnjPlt+r2OxsfHfHWY533rf/fzhb0+
5dDULxsbqE7sHd//8+MH1jftz2V5n3IeyzN88lWsb1lYeVO0b+D9xfHKst6k
zheNRdfxvaPZe/R0J+j2Fees6B5j26t43x63/2Qr0+/wrBXPR7FaRq/fOeP+
02QfjM3m1tctK/PwNXNdg/7lRcr7tBHSvrIPn+h6iMHJuVh/S+2IPVcsFqaP
9yPNkN+H+PzE5IFX62gNRmHi+CrdUFPej+U/MUS1HgE237ap3f1kpm180o+K
rQlgLWtv2vsS6zydP9vfmgBN7uc0nMOb3g/9Ml0dfbE99yDsCO/fX5uK5kvR
+HNZnjXh/Tp9n+hxBbxflA9NeF/zFHl++OL5Lr2zX2erDrdJ48++di7ccfI+
175yr8tClvfR+PC/na9b55lwX/Z++jVblsvy5KTW1ShKr023dCTkox0n4f9L
N69nzFvnXuqUC+/jLtrHztm16bXbDw2Pq2z7cRbrl/e8HcsT1S3NHbDzb72G
n0/KkR1HKtKL1CmbYjvKdtH4Ezr9It632ht7fIz3bRtZ5uNvyvqyonmyMYPR
Ma7D/NvPx+dDTM4i3u8nPdmYz6v0evj2+Z/5uYxdsj7vp3c6fn3peIYWh+eM
+98J62i3+L7SahX6I3w5VAwe6hxsr3ZqdW8n+Pzx77NvjIfh9LI4/lVxgDgn
bZB4/zjezf4adTi+qZaniPfpG3ne13fx/lFY66uVi+1j+wEaA/igbT//4N8m
f/PTP4+mwc6F6MfK1oIte/+9z1Z2z9JgFP3+eG8xyvsqL/Z7Ge/D97GxMO17
5PrNtcbGKvz4dY34PLC+DN4fu3kum2crzlD8nCreV78gpp22XM+9811t3kkx
q3y8qZ5Z/v5uHCTL+3X7X8PQ7ds8qyrfp4H3lTeWYfUOIj/Q6WiMiDwW76dx
TpqN25XVW+tzLxuHK+Jzuy609e/HYnzG+NvqfXyaLO9b374fC7D8b/sWfp6A
/d+mK2bkf0zLY49ByxObq1tWd3y9iPU9xPt1tWhV5SzM72nA+5h4XzF3/O/i
c7sv3zW3qKz+yYevNbXUvwhtXIf3rV4n8+ufSt4/Y/+Rsb7R7kt/U7e9Uwxg
eB9fP20m7yv8+/B+0RgbcXC6fH8+8+HHmN9vE7M09V31O1Znt+mdVpfjB9Xu
y+B9zVcQ788b3l/a3cjFHpbB+7G27ad//a8D7/Pp7QOnCWpqZbxv87ZJuzto
H8EfX/Ye7sdGqWUu4317f5U6nk6MXXR5mqOO1uvgcCvz86f83sryhXndtebq
9sn9SnPo/693xvHan1+tjgXetxoGsTzaerU90uw8MfvYcQB437dBarO0Fuug
ZWAY40+kARaC74lnJu5X/H24tK7/NCs3NeMVVFkdBvYselJm/erW2Cbeh514
z5HPnvebPm87d5n/7dwAypddc0aftl9uf7M+dTuf17ZVsbkonvfVn/HXtVoc
Xcdqbuy+NqanvYbnfK/viWmpbL6J98n32Bpbspiep6hsxcqn+nj2GHif+RpF
PrU6z9saWvx+eJ/5yVofC/9+7Hrbj2fDvmj8KKe3Vlsh3n5Run35UgweznF9
+bvkyr2d5NM7ER3PibP8GfefNO/zHX6vav/S+SetjPfF+dLyqM2x9QXGSOPe
X42wvdft9PYBbJz9KlObOawY69bXEeP4WLvTL+8X+fjROs/s7+R4v8v8y4Vt
U1X79qp9bphNvI//n89f/Pz/yPUFKtPdPkfddXVtu1vF/vZ9VXRfZcfLf2rf
yzENcr/zlkepUy7ifa6Jz7fOGlEwuwy2Rs+lORzrDydD3MxB0liX98vSZ/37
zNtlzS14/smL7tqisMzttd1sXJF7ly/U823RtYbJ+16j3Hf+Gd7HYCHuFzZA
50MfR/HF655vGLzP/cXiSeafXVzzfZzm2wfLov5+xPvZvj/0lt2i422Z438f
59XWQ8qXxqK8/93rZfw1POurX+v9/OoP27yPXcOyr+0v2Hm9di6A3t02Tmhs
LML3P2LtuP6nzjJmBevfKVk/Dv8+vB97djaPfZ7XKf8w/9xsc+aPpYN6qbyp
4v6J7YvBd//4WRqPaGx+KYzbxPZFc8P6Yxi8n7YJXd4vul99yscvW9zdTT6d
Wkk+ut3V6XdjtJw0w59x/7Ga5uu2P4nFCavLv1/kr+HdjOZDvM94szifsmxj
xvixPmJe2nWu8szf5f00Dv/5nu1/rKk3VztIXRnk/WPbfNtme44XQyhurrYP
wvs+3cydDnnT5v2g3Xe8X/T+KLtG9r3D+xi6Dow5opj6Ad4YH8A+6GiEdJ5v
Z6/mzmfN5yXffb/wOHhBvG+14SfBKXWszL8Pi1Ffq9I+at7vp8z59NXhfeoz
selhY7vup2WUJlb3mR9H2VCbxX1Y3re6pLr90WFpa6p437LpcZSfsjJkY+p4
f7U+Y88R3sfvK0ZXPivmpFhY94v+X2NNlEfbfqntl49c6+LG5uP6d6PN8x5+
c30Gr7F/44712haNedm1b+15lB47X9fGu7LpVV174/ImVlfsd56P5qLb/pY1
xdePaXks79f183iD9+dnL5WWo57y4VheMXvF+1Wsj48d3qdd01xZ4mD6e0v7
9um4B8yP3of5PHwvS88bY2L9o87n382tJR9Nr+d5/0Tibp6x/2kwG5sH5qe8
lOl5FJsTHUDr6WYWm4d1s+B9z02+LWCObdynn2d98T59A1hAa2rV9e9rXHMU
rM//Md5Pr7mT5UOsbRrExPtXlsd6WJ/Pg8P4ehyDXLOK2zHxvjXGB6zpON6t
/jyx8exYutFxwal+bbVh5W9MD9XE/HjFMNKEvXi8msxPXezZbsftm1zv1avN
wPwwvrQ9w8zHorxpsp26d+XG1aDZE+/CYsPm/UHTP2yzvuO3R11mFO/XfUbD
ygvOw9hC0XV5PjwX9jmO/PF5YL8rjqZn5arzWd63PngbY17PX3oycTFjBbq2
5X0dwz7iffa1XBZjfs9uls29P937R+z4sz1G2m9+01pylt3tfdv3ls6lbTa9
sfL1xplNG2tw8mzQpVQ9kyLtvtUo2e9Ffv+ic4v3y/qoWWxS+ckPdnJ5xHNe
2Ut/qzO3Bda/Mn0j8D7zdHUM/nt4Hr9p0PkYlo3p+/09d20/nPN75jN20jSz
uZvcWNlJ9fqYtPvvhGb/jPtHxvth/karMjYPprVo0ZXY9ang/aPImL4vl4wL
4NNPY3Cmun1i8BDbX/H9A8fu72T8L95P44nUeyfQJg/zHW3zpUjLQ98HTZPa
R+03CEfZY8kDafjJQ8v8srK8P26zvE8fwM4Z4H+ND8TGGV5F+hiW9xd24uvk
UFaqfNVlOuNh6DJGkfdVvF9kcD355hnJ+xWL0j3KPkDVdSYmrwX/FgwMU8K8
X97dDYYPTOthxXRZg5o0EHYM6DjywTMj5hmu3/xs+jzqnENx/o/Tv2/vzz53
cZjlwbr3Kd63ehnrQ/dthr5rP/qhsRh04kP1DazPXL52GWXcczif0ut5P4jn
a99HkHbJrkMhfdHbo3yZ8uXL9y3eFpw/Ns7g+y+TG2lMpJurqV8f5o/VV22z
a+cWPfcY8xaN3/hybJnfrwGs/63fPuRFm/cPTR9AGgbys45eGK1+8O13eBuf
P+dDGwHzw/YhJn6HX9Hv1Jkb8KbN+Ri8v7g/2Wapi8naH6bTuJsTWznGP32x
N8/Y/9jNxOGU7p6+eFFbn/L++eBr9vW0rnVZP9XzcC78/invnw8+fK/tL6vP
vm6P+t1TpNGRL0f1fxhzdW27yZgK+UMs0tm9raiP3/bB7PvhuLitiYn3ZeoX
+G2W+dEXPfl+OdMZ6TP7vQbvj5LdDhwn1LVhlNmiMRHNv7Xv9CI/XBOmbGpN
NEMHzzeSX537i2R7YyZwwpXFvWwdD/GS9HPyL8t3Ocw0F8ULHJVF9SZGL3Nc
fXh/z0V9Ho0/HGcexdgbQ1+h2IY+rVXpg/fVf7SsC5PZ+Dg6l29bxeT+HcV3
q+Fnm9X8WD4W73sfvu17ebb2+8qkC4P3Ye2iOb9+7MDfl5+X4e/PtnVF4y7w
vp03X/Ue92vI+HF2+TnemDTafcvqLMd43vdto43n68uQTbfdx/cb9H1vdym5
Or0QeD+waJu9ry/cCbyvufjy5VN29X95HUj5/uh1+n1lfzwwP2mA+We2U93/
p+NrXQZmju4/LJ/QWlpn3H8aLPT3vl5KxPvE01EciKL64n34ZeP0OkeIHd9m
fOJJso6uXV8r5frzgfeX9+Yyff508GN3eV8xIsvaCdb2PY73DRzv23/6SZ7Z
mvJ+2TspjAl2+kjwPnkpE/M/L+Gp08j7ZebnBnizsYQs779st6P0H22fIJcP
ET1SzKzvpilj9dPnPA7/qI+z/a7w/k9+8ufhO3oAzVXQe53xNPoDis8rnfJJ
j20N2+w9neS9+XKq+KjH4WfxZjlTHFj27ior19L02HlnOpdYTvMrPddKz61x
XTtPVLxv9/f9N8WU8LF4LF97PtexVl+v47i++r8wpHhf+x+Y6/t+gM1TOzfD
64BsHtgxkNhaeMw7pe7WjZsxO3mxZ76uzRv/7lX+eX1fzP+vvKJPAff7eRHi
/Zgu3/O+fP2as13Ujwl+fcuht9dD/C14n/FL4u/QL+NZ8V1xi3r71/udPEx5
/49HuyGGB7y/3okF9eJgJ/C+1ez87Np08sH1hR8h759xf87o84n32+VDsXn6
aXNtfXjteCrElMEH3eH93lib57P1e+H6x8+XcrxPX6BOTPhhv2/qcg/7lWlc
B7me2tZ0XbLzydWVq8mlxfmM9dH3iPfL1hlucj/vglne9+MEbPdjBeH+C+Yi
FPUBNPbe77OsqwPpZzygHxPvq1zZ8mXn3cS0A4Oa1niru//+g/lM/1WX9/l9
0DkYp9m4b8b8MbutqhwWnavymTVk+FHyflldsmW5bM0By4g9ae/wvnQ3dk2r
WGxL69eN5ZPKZyzNnt1jehmNGUhTZjnb+rWVTvGwYg9oHOzA9CX8eICu6XU6
/vmL971m/vnLjVx6i3SSTfV28P65dn2PnYdr8K61YzG6tp6F92X45y/e/8lf
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
fpL6Metb7ed44nXoHWR5n++DvtN+u9yrC+/XlMcwquX9WEz6sryyukasrC9n
9eiDPifP+/a5lZUf5ZvGmaquI3++1mFn7ql4/9py/v7F+3pG3u/+9qg3fZZt
Y+xv57XavoItAzG/vu/HWd5HW8f9xPz+RWWlaD/L4D6P37rjivpXZc/J5g/a
fa6zsTqRzd/96U/+98D8RXMN7LiYeP/5i1YyNr+U8X5Znfv7mZXk6fMHiTh/
+/FC8v3BVmL1+Wkfo6vnkaG51m/E3SQtmpereJvvz7q5p8lOntcHtQ/GZoNZ
3r+x9CDElWStB3h/Zn6yUZvZXdfjftDe44sW7zOnVCya8n6eT8tiSdYxjac2
Pc7HzS0ar8Sk3be8X/Uuw7c/CO/jMxHva7t4v8yazH04s+ZGvMh+ef+4+mIx
P19VOvpN27ezV4PuyG6jD0+fH6NNePT9YhjHC+t/dfz7vpwyr5dyj2af+X4a
X/jt8m6I04POp0m6qKtaA/UkrZ8+B8fQztDHQSOBVod7sf78Qd5jHD/s8stv
sKs4sinvWw151diN9h9WHALL+9J01I3tWldLBhtrXELa/Xv3d0M5Fe9bnY1l
/Zi/3fv02ebHBPzxahM010Uxr2yfwvcLNHfA3qd+o2xq3QNb1vth/xjvvyk4
J9dW/8mmFdP8AZtP/rq6H3ifbUHP/9N/E3i/SBMk9laaVEY/sX72mDFPd2Ir
8H7Xp98KvP+Hdrv4xvD+G+PzD/XnVarbg/dnfr+ePNhdD7wfWF+6Ia2rdeJs
/D7byXN7X+bm6v5ycitrR8T7fG/K/LSNM9sp58OkfKIv8XNzFYPT6lEG1e5T
53gfNn2veg1o2btMvF+k6YzZ+Nhnfd+T+hM8k/q8f/69Zf3TNGYxCO+fBivq
054G3o+dn/UUGBNI5y7XKytwDAwFYzVdE0q+TNVB5Zf0w8PKt6pnxHseLuce
BuX7mE1vNmf+In63c0L76d/4POQ66CSK8kZtt3i/3zEUa5734clhPls7Bi0N
P98pqyFeS0dbf+i0RLaPoP+9bl+cLt63ceit/97zvq5jy7vNZ9v/svdCes8v
xJ9RU1+/HS+Qrh6NjdLMvR+666usqa5KZ8uYCbwvvVXsmraMcQzfQ1ygNu9f
vPhBdExBYz5K7/jKZrK4vZFcuHOvmvfbdnluJfn+H6lv6fxbaXh+//BOIr7X
nFzr4/94eje50b6fz6fXkl9PLnVi/KxnFs7f5rkPrs2cAib+sdgp4PiaFsZ8
Ql+wl/fzdaMVeH9y+kYyNTWWPNxdzLU1sfqLJke8H+NRy/7wPv/zzu/Xvz/M
sfq6HF93zU18+/C+jfHbT5p8O5uucdybt4PqoU6z1R23PS570VC/X2VNy/Ew
9BfDrDv0f65f/qg3nw42wnw45hSI/Uvvq0DTX8T7aPqZO1B2TmJ4KnZIk3vy
vI++An7Yfdb9bdhlkvOhVTrXiZUm3mesY1TvrmGl3fJ+3WOqxmSL/Oa6jjQ3
TcYRSq/3spXF6ZHWJv5uLDexd1mMUjuHWfejfqnnfRtPX30RnT/G8/a94XVA
Krea/2p/91p9O1+gOz6Q9hHF+4OU9ZjfXrxvffzKH9I7tdFlfN8faj1L/X4+
38uegX22MD+anoXp7rv08f5S5tvXvFnWx4X3S3X6xvDtw/tifPE+50zn7XR9
+lrrC95n7ES8n/nwI378wHRnev0TsJPn+aa8T2weynV+vlgr8H3G+O3yre/x
9rfVmYv7ZanvmXm9rH8qzckfa8QZPC4re3/7WPr13vOtwPur9272PWdXGn6/
3c6PlpGvJ52HPxYbtn+/KTeeZN+nqJ8Ai99fy6+VERiB+byvNtvHlXN51TUv
XviboPP/7LP/J3C+Pqt4P5tr8It/n/zsZ/9XmAcwMXklrMVcdhzM8MTEL4zx
/jAYU/lE7B29R/hO3ec7mr5R+PZlzJEYRvr7KZM2dk1Z/9NrdiwfD7Nsw/vj
C3O5NNmYmtK2+LTKR2zLq/XB+/1tvHaxudp6rS9h/fZs1zpT4v23R/nzW+2e
ZWk/H83P77V12vrTfZot8+89aYV5JLC1jSvky4DXEtYpI2J98f6h4Xqbb7F8
1jiE1fZUlT9bhy9f+lmm4ZevH95nvjx1UryvOJvwfhXz44OH9R8+7a6fJe2O
+P/odbrdztnl89fz1P2dYJ7n4ThrJ8++P3Y7ebav0vKgFVFZJ3b7UYF/DV7F
1w/3Hh1+59rerSz2ztTuflj3Vbp9a3O7yxnvD7ONPg6ru85WzOrwflNfayz2
/nHnSd029X0wxdLQvfbL+zznw4P9Y0+/H6MfxTXg/cmJ87lt+Pc1n4fPrOx0
1o9D41OVX/b/39+/ldy89kkwrkWMfs3/ZX0u+gB2jIB9inhf85uL+gvwlXyg
0lrDYQeHXT1zv7zv78vyPmzPNfHxw+Kjfk9xvTprdhWZ8iG2rpI3P1+qqbZf
38WWg/K+TQPnunR7MuN9e+3YWmV2fqvVxdj6ZvU2Vhej7YqDLy1KTF8qlqf9
4TnZ2HCxtNh7ste1v1lOtvv5tqLoWag/EtO9WPM+NB8DOFYnxPpwP3F07L1x
/8orO87x1qRf1/DrHfq12tSH0n5am/jOzM2M94nZ84u/+1ngfRn1MhpXP2Yd
7c3kRqvzbLusb5nfsv8b5+unv8+aufLh5xi/wN9/Zidtp4D1K3gfK+J9DF0K
7Nrbhm/1xNy0vE9cHrYVra/5Lli/vP+odTfE5CTvfD+pX7Nx9xXn6Dh5375D
bDv7YzJ4v99jh5lfdd7Nw/RDl9kgvK8xAPannZh9cDVogPAN2NiifO9h5fax
PA/GFojvA/PL4Hk+l5cmkjvT14IxJgD7V/G+eMzGVt93vv1BYspbnyxaavu+
EO+H9/rXSzkbxRo6ML/3UZeVKVuurA6kKmaZZeu69UDaDB0rxrPrRPVbv7wO
5tK1S8nS1kbuXP6+bMwclQXFIhWDSkNv18iy8YSUdqu1t3p75ZWO1VyCdO52
3j+v7/J7+36UzSt7Ha//t8/QjhnoPJwfbsXs84tp8MvKTpFGS8eJ932/gPIp
vwuaHuaFx/oO0jlZ3rd5bfunnJPzMU6hZ8l93rz+efDzM97D9g/PfxLq4ke3
fhe4CX3OL6eqtTzn7qyF9bDE+3bdXMv18ukr9j5GOojHGWJ2GN9+5ssX65/x
/im3E+T9dtnIYnG2y9C5uc3abaPnfVvXeA9b3s/5nltLYdvCo4fHwh2nzV4+
20i21yf7WnsrZnn9/vlsXoRt70Z1L35s2JaDH5O9K3N1h8H7VeMBev5Xzv9N
iFMa24c1tALTH6Zx+vkfS+fptwbifWv0N9D9YHzff9CdD0weMO9V+t7LFz/K
xgZWv70RvS/L++IFzfErW1+qicEBd7Yi8TU7a2SK82G9UXM/8wTK0kpsoI+m
97L4/V73bf3aseMtN/czn4JPaU2KNECDtkfEaTx4uZ1Lp9dv+Xu2TG1j71iW
1jmsttyug2U16pa52Re+1VwOeN/6Wny/wLfP9jqx+Dox7U/s+YV1MdplhH6o
5g2UtQex7crL2Hpc+m55H9P6ZxrXIB3UY/G+H2e2+9pzK/9teVIfgv9Vn0Ne
tbl7s7UZeB+d88zvZpKf//3fp7zfpN61GYvzf7O1mzE+bdzTf9wM1yAWp2Lw
vO2spSVdv9Jx5d5O8vmM4/2zdXPfQTtB1m9/Z55u0zUp8XOjTbG+jTDm/Xwp
aHkUZz/G+2L+Qd+Px22DaHlk2+sp7/PZ7zns+5U4JzaP4SDrPx2W+fHgJu37
+2r4kmN8eJptEO1JXUNjE+sHwfKUI+bcwvL0V/lc2l1K5ncmQtmF6zceTQX+
Xzdz/fnf8n7RfF6Z5f2yvAgM9sNO2H/s5rng85+fupjF/0cnxG/WJ+t5X35S
jmNso98511pTy66h9fOx2a612f6jyY0c74f3B/0B/s/mYw3+ToL3uQ7aIhiT
ec5sI10y8f7E5kTGR5YZrd+47N77bTesHsXrZ2y+9muhrO4vJpOTY9m59a4T
R2JoQazPXBoTlQu7Pu/BYW/+ePNzY+098hvnuLXaXXvRa4ti2h2bZ2XbYhoi
u9/MVncOCbyvfHrj8q3smVkdkB1L8s9LvH997JMon2icTTq7GO/H4mxb3mcf
Owag/ovmiYR4QD/sZ3p7mB8/+99+eTHUu0+nquNvnpteTWa2076R9PnwO7x/
e+ticmv9Wo73WTMX3re+fiwXd5O24cbvTgG7ntlgdvy+/U+mW414f3t9MuPV
nvlHbd6/0+4Pj2/MRufpbj/fz80zGraNSpOMDYP3MWIWbqyMl2qmvNkxFNue
ed4v0vQcF4sP8v5+1+xdisUpRvUaLFk/fYCiuoZ/v4j3/fecT7Hj90ffI+7H
t69yzfep+xeCz5++Au/LQfLE1ynyAD1/tlbYJ/8h+06/4enzzewY6a2tLmL3
6VbG++x31LDfbXk/8+d3tLqMv15ZuhOfryvetzaEeXvi/ap94H2eF/5w/KA+
T0dVpm05HoZ/39YNcTm8PzuflmXNFxXvKy4Qz03x68X74lobOyjG5pbv7fiB
TYftM/n5A5ZzbYxIez77GZs/ENPsFBn+dGJc+vGBNyYPq+Zt6J7lr/fPa2dr
pse3H1tDM8Ysti8W0wyJ921eWJ2Y0m/7A/C+OB0ODzr6r75Ofn7zXvLR7aWU
+Uv62V8u3A/94nutvWzNXGLu3396L1nc/4fkxsaV5OrKWIilzzWevrjfo9/n
WOLuS89D/T6Lu/m+2fFo9z9pGJfhwd5aoX9aMfU9g+Kf4z0u3h9F+6+6XPRu
GPT8w+J9rNVu05rwvm1XdS/wjo3PIz0/25qeuyxPi/Kujma8yEbx/EfxzMvs
XeH9orFulSfNE/S+2Kp6OgzeR8uDvx/j+8vDjYQ4f7QVbzq/i/Xhfzg/3Wev
x+dfmgcl9SHG+/j5r69dTC4vnMutB4z5vLXzhXWs533phYgrtHwvPibEcwjt
vubidbgdzv/t6tXwWfq+KOL+Eep6P5neSuYefJVMbF8MvK/nZv3F/db5svI3
Sn+R5W3L+1b3IQ5XvWH7a1OO7FgAczIODvNtqc0b61+3bM5+0gP5uK+2/lq/
tc3v/We9/Qf/POTTtml6exR/XjuPWxnv+z5L0TMuen+I9/2zDvn/8n6O9+09
2vt/69Kb9Rce599NVWUv1p+wY0c2Ziafm+u/S3n/H5aTrdZ3QZdfVMfwyYv3
7XzchRaxCb9I5neuB97fefb7ZP67VrK8u5jxvrQ9fD8/vR6ul1s/90yv/x7b
aFj/8/lWsrG/W1ofQp0w8TLh/Rj7lq3zCoOG9XVGEHdTdb2MP0+b3xnex8/f
9D5tu5je8/2wzoHlfT4H1fTUyauiPC/L69gY87tqMd7398W7nnlgfGqNV76P
Om1+jN6/5z3vx+LI9/uM8HGjbamzbxnvU4bLeH/j4Ub4vd88smyW5Vu7XwCX
l/E+v+Pv/+K3f5PNBf7Zz/9t+P/62ljys7/68ywWkD+OT3jfrh9K/JEP/v7L
oNmx2pyPby8Hxre8XyceZ25ur/k+Ep3/+vnMrq9fDJ/osOr6i2PPhOPserax
9l283+91/DWpm7q2ZfWX7To+OX4pfNpYmNKjHBzmtfd+HqjVgLHfa3NdG4PH
s7g9n72Gr8vKE3TwNv0y24+P+chj9sZ9yrhvz9s2D2P1qej8sWemtki8zzpb
9rfYejd2vMN+lvG+YgfYNqDovux18O1PzX+TLK/OJR/dTuPi/PLru+G7X/NK
9YO5FsTSJH6n4u4Q21e8j6394ZvA++Pru8H2n+3ndD/rD1PeD+dEmwH3nziP
ntnx2YC8H8aEurzfpG1kzunUxMXAq3zXdvzJcCb+tiLeH6RN9m1FrL9f1s40
nZ/gLcQfHZLPXLa9PpnLw6aWvk9S3oeDSB9MNEia6vSdrP0Y513LYvp98oN5
oJjWeLe8z/aT4n0/Vu25wY5t2/2LruF/U12E9WPzdWPvUvT7B4db2f+wPGWZ
doRPfsOPj1G20flPba4GG4T3mePn+cy2JVoTDJ0KfY0bvz+XXJ37OKfvEe/T
J4Bzr61eCn2EW+sXkiuTnwa7dOOXYV8+79z7KnzC/Z73NfdOn7Az54Px8aH3
9Z6w4wQd3h+W1kfGfQc/Q4f58fXv9LGutxhfnOzXUFLZFPN5n/QgvhyOpTzo
u/WnSy+Dhp/t4n3qMp+tZ11tl+aw6VilTbyveDxWV6d7tayuOqk+je7Xs75t
p3V+y/t2HMLriWJ9e1vvY3WcdsvqtWL5aHUwddoN//7YfbiZnGv3tcX7ipml
vPLn9tobfcb8/zqGtkXr/XnfVCzdr15uB93+5YnpwPvoeLCfXZsOvO/rRMbj
YW7kZvDtK46+/PvfPZlNbtA/bvP+9Y0r7TQttPshO+G3g8NWtvYWx6203xmc
J/jz1Uac+fZ/pDYY76NFK6qX8CMxNu02+sZo9D3v27oUYmmsTyZfzXyaaXn6
bYtjbUVRW+PXBrFtxKA2TC2PjLHib26f7/v4Yd1bLC9Hcd73zYrm63re97+z
DV4Y1fPTM9T728b947c3Li1XFlul6382LRPkiV9vK5yj3Z5UzbOV+TquuJS2
Lfv1fP/5A9/Ba/Cb9R3KNh8thjUD8dev/WEu8AGfv/nmi6Drl/8+xvvX134T
PtlGX8EzKX10WAau+ejyjS6DG97/amUsOb+wPLz1tazWp8ML2XzfAYz5Bpb3
ped5a+65rk9A7ObbeGlO9KmyWsSX/fj7KQ+UBe8P17xNzrm5MRfW3FX9lbYH
w79u0ynfuo0hZHncanB8PFHP+zZups1Tr6exa4+L923fxWva7baYD82b5f06
+Vw2xlt0DPUCs31hv4/to9s+kj1/rMzpmcTS4PtDud86vP/JP3wb+F6839Nv
vp1qbgLvd+Lta257V7ef2vqjbzL/Prw/vvX3ye6zLu+v7DNunPJ+iPcpvj+L
x3NmmTXT8pSxvjfr2xbvM+d0fuZaLjanGBbWly0ujgde5rd+3891zNZn+YmG
de7TyPtndrKG76kofmPZcfwOW0j3Ky3BsNNnx9eL3s3sQ+wVjDgs9FG0npg/
pi5HFfE+Jn98FfeLPcinK4t7IRYM6SOvAncMoW6X8f7lpdnAr+Ob17L1tuA1
Ygmt7s8nm3tLgelhfHF+GMtE1xLhfdvX4nmQ3xnLu3c463TC+3X1O42sE6sh
p/EZkCFI42/u3s14//nLjUJNSFV51bpZ/jjNi209637P96HyZaesj2Fj5Fh/
uBie79IT2f2wvQcLyezkxYz5/Zxtmx47V9f78H1arQbIj7vZvrjdLn2RdDDi
+7emPIv31W+x9To21ndYUK8Ui7Zpvyo2Tlh03Jdf/GWO98lr7E3n+dt179Sm
Vfn8vZXpf2J+/sfP278d7CSf355Pzt2aT8s8/tLb611tjepQR1uf1afJ+1mc
rbGl3cDu6Hrw8T9p1xPm7PJ5d+9Wu898IXwnTs/rV98lMw++av+/HtJ78/cb
3Rj/8gmcOGue2emy4fO+17Pgp2IbvI8WXZx/Y/nvcrwP14r399v1d9D3dJmp
jR32eYcVM98b+aZ1uGK/x3yyvj2ts+3Mhm9FvF9lPFP8gZb3q/bvJ32s3+s1
uzENzjB5P3DDq52e9bZkw+B9+LKfMl52DO9V+hGKrw/vw/GW9zFi9Ezfv5Vc
WbmeMT2cf3srXSdAcUXpE7w8aOV8qEoD/2ftNH678T71OoOa8fln2wZIC89l
8w+zOd5vXKcinKY1zlQm7P8xv26MY63v2q6TxT56ZzAmJ426Z3J9wp8bqxPJ
1tpkzi+v74rbo1g9OrfSIF63/UsbV9LzvrR/Nha/+F+8r/P7MQK1L1b7730A
fk5AEe/Hnk3d9sC2YUU6QevP13d7DuuX9/lpr2PnTYR8e17s61eeHf6QHxvR
ufaebIfjz00uJZ/c2c7Vm6z+dObQiq2stl7+/Q/v7GQx9OF9vqfanVaimJuw
fdoH2Et+ONxOpr+7HLZ9tfhd8un0d7m4PCfPlmd2ui3l/a7uK+V93p/V7W93
3udRJ362ratsw9+PZofYkOJ93oGLj/fDPk/a70jGArbXpwPb+rV50QXxez/v
h5jNbe82YiTmEBdpjkjbqFgfY93d8bHPKucGFPnLvH7pTItzfDYo74dztN87
15ZHk746vO+3iSPk3+x3fgYa/u0NHzunFeX8Mm4gPd5vYXm/LlfKF1i1P/to
3c67D/JrncZ4n/kH8D2xOG3dU76JuYhbfuFbxdV3PvuT4n1zffn8h5EWxiWK
dJdN64m+W2bV/7H2znKxZVzvR7fnsr5iy82WHa0eB95fnB9LFpdnsvEAe7zV
85fxqa7lNUD2t7dHvWny83Ctj8sfo2vb+5XGz/aJip6Xzmdj3jTx8RddI+TX
840c30uzT7x9tgf9/mFvXsTS55+lnrflfV8/lY8aU9K+6iNt7G2GOfN/d3O6
p4wHPY98+bE1b029hvfhfGn403XY8uvpWq2P5uo+fLobeN9qec54/8zqWI71
25/9vMdjdRtOPTjcCHPpiMN5Y/1CWGdrdm8rrKuV1q1un4E1uuB9GBqDdfH9
SxuEn5t+ARqgtA4uJTPzk8nMna+Cse3eykKYM8z+2iZDZ9REeyPWx9ChMvd1
7eFk9/3f5v1Ram7E+xjX+uMPD0IekE/aB6YgbeTxKOIbnVl/hn6/n+PEjrxn
eLfAlqOc99xUU2Hfy3rXNuU35usSpyeenngZTtfjamXXVdptTBRpFrxfNxa7
w+dBHd7XvpZTnrzo+vc1fsFcYq0XFuP97tiE1ifyZtrnIWlyU1/igPqfjs8/
l6YGcwO5PponYnMqH5pyv/fbZ/XtMM+qYl5bHqSh91yvZypdiPazvG6va/32
MZ24eB9m9f7zA1eXYzode37xvr2uZVyvE/Lcr7bE+6jF+7YNsHnh+yCxtkJ6
oFhsn9hYof/f9mH8/uSdZX3xvsYYfJ7H2ipb9/1chFia/LNVjFW235idT+aX
5wOvkGY4H20dvG7rQugbt3m/SAuXzY9hn87/n97ZDvNutaYWvC8T86f5tJ/F
/5zcaCXniO1Pv0HXPeP9M6uyjv9G7faHU9u1/MCvG8Sj0ZqYsD6cL95ffryV
i88Dx9q1pmDzh7uplgW21zgAvA/T8xmYv8P7U1Njgf8Vrw/mp9/Ab+kYQSuc
01sszZyDNMfWBcvdW/u8wxx/iBn9FO5jYeZyj7YHrlDahsH7eleM8n5+DKbY
EYMa8ayH+TzqaGXLjolpefoxfPwrd28UpoP628MMkTbHvseVPssy2ifwQWcM
MnZvRT7COvnn+xeek2K6HfF+fD5Vt20etH3XeryW9wfl/n7j93PdIi11k7Lo
deZ63taP6/Xx6tPZ2D1+DEC8j04m14crKBvSz1hO1vejH+5nvE9set9nKLqv
qn6pj+OvdNs+q34T50uHZDU9yivxrPf3W79/bLzMXnvvSauyjfL3Zv8v0tiK
8xda4yG2053xLwLv2z5PVblRvlo//ht3D7E2xfbn8O3D+/jz11enk4uTcxnv
58p4J0ZO+F7C+x9cS+P4ZPW7/QnvH3Wewfcd1tf6vW87fn/W4SX+JnE54f3o
dc/szMpMvN/5TpyLqnceLNwk/mTq309jv8P5sokHqd+/7lqYcLVi/+j68L6t
2/jTfHx57ke8789puV/zDL688dPcWlWe972OqW4+DGqMfXi9k9KgflOTdYaK
2scz3h/CsyrQ8ihmfN0y34T3rTa17Pk21Xa9C7yfjoPnuSU2nm/XHLV+1/z+
rRyDWF9hWX+pjk+UOQZd3U4J7w+g3ef86MCs7gquW98fDu/LCuP3F/QBth7d
78mbMl+rL6/ia/scrG/ePk9+i+n4Y/0LlSFY/+u13cD73ndc1S/07aY0KcTs
WV4cz/6P3Sf77LWWSvNA9/b6qHdd3ti8BPG++jhWQ2bLqk+z5WjP+zKdT75z
eN/nr68Xvo7Z79LM5Noy49+fX7kaeF/Mr+tfX2nl4v43tVhanz/dSHb3N7L6
zj6w/bVvpsOnNDwfdvzqlqFyPvYadVfrY2t/MT9rdMH1WjtX+h54/1ezqYVx
Bevbv/G7M+Y/s3KzfdB22ZlYr7G21uudQt7Hv2y3s5/WeUrnrV2J8j7j3oPy
g0yxuX17U/d48b43y/xZu9fuaxxnDB36JPR3/Hbxvpi/LksWP+PjuZ/31Ypi
cWbPq8Z6Z7wD0fHDh6xbyZzZJy/yfqeZrdTQ/Gherfx1RdYP7/uyEePapkYe
eE2PYnLC+vjiA8tk7Uk3trfX/ZbxvuUV8b54SXMmbT/A3peO83ogq5/weRPL
F7btPErf0/ViI+8MzPs27ZQhYmOO8j1S5fNnbSHls82roj6T9Vdrm/RaPr6+
5V2Y3fZJDw7jz85f1+tk/LiRfZZvj6rXp7LXgeWJ20PMTtif76zTNXPnWojd
rz4B39nO74u/uxXGCNkO+9p8sJp/q0vy/R0xq/X7xzRB9t5IS+h/PFgIYxS2
zXhr7t32G+49qD+u7McNsCre3360HFgfX9b18Y87fu+U971+z/bLyvwSvq/D
/q9fPch4H58+3y/fngh8P39/PplcuhDX7FNPXV2tpa2x/NWuM3D+s4Pd8Elb
EeI8Gd5f+8O3ydfr2yHePjF5AvPLt38Wc//MqqxP3pfZ7TCm1qmgLhFnP7q2
Vrvtu9PazJg/aHweXOmbG7w10RnFjLTY9Ir34Xr0NFYDdNy8XzR312uNTiPv
D8Mn/K5YFe/XMR9TUnNFYX9i0sBw6hMQO0TPrA7vD+NZxsb4m14rxvuMf/yx
o7sp0n7Y/bPvr7txMe08SvoO+o39pHGwvK+YhDHNgeWSNy4dzHnWvt5/GsuH
+muh7Azkq7u52sv7x/U+YR3gzBzzXPy2FfQYdfqbmhfOfocHXd73ZcH7+WPl
xo/JeEYsem72/F4PY03xtGzsers/n+gwYejlEH96rNuveJnqfsT7m4/uhHXk
6CPwf5f383GnbN/Sa9OtWZ2T7/vqmKdPVwLjky7xPvOO+aT/oXtBQ3J7rRU0
ACutdF2O6c32970478fGb+ycB82PUDpYcwLT+hOwPvHtW08Xgon32Zd+3cR6
q0cL5PNI3zf2d3v43u9z8GwjxNaE6acWvkmW13+XrLTznxg8MD7s/8vxbr3M
1qi2fnrVgz54H4anjtA3hvfHVvfCerqas8v/bA/ra03tdK995tc/szrmeP96
gxicMRPvY7Cw9e3LxtZ+E3h/fHsi/O998SdpjE/E+ijM05WGx2v/L1/8m5ym
aFSGhim2jm9+jsFw+h6jXOvpx2Dw/sbyaOZ08D7Dp1/E+03OM4y0DHKe2Jzd
mGYnpiWOpYX+kI19KF5En8EYCOsmcX7FFMXg/CcRLYiua8cQLGP6/Pb+RM8d
xDeOsf3ftttdb/2+v+EEOEzX5f7ZdlLvFq/1gWXQEsEsjEH4uPQ+P4vKqeVZ
rw/RtteRY+zz1PN+afTg/tn5sqBypTKmdbHF++o72jGm2PxanQ+fNTFbtx/P
hnWHMfG+9oH7x25czHif8zFOMH5nPKcBsue34yOx/kDMr0+/Qn0PDN7nN/oA
3CPlCN7n+7WlVJPGmBG8X/TsqraRl3A9sfXF+tjEzXPBLl/+IPnZz/5dzr9I
XFuYH188Pnh7Ph8/3+YFvO/X0fDlRrz/6zsbQaMP74v/P51Kff2+jH8wNhev
r3XrsNVT46NnLS4zB/jX7b4VGn7ar/t/6Kyv5foWJ86RZ3b6rQ/ffpFR92Lb
Pe/D+sS3gZ/5TXEsBuWOQY35BayX6TkfX7/6MFYTr7m8/H7t618cSxpj6xXL
lF7ydBjXkm+0yld8ZnEbhPer+DmmL/A+x6bn6NdOC++L2/U+x++I/09riBDr
Hl4Rq1kfp12TNabt9j5RbfN8WKRP4Ri/9m8R5/9tZ23zv+1Tx2OvqfGgE3/P
2HieU935wzB/Uf/q7VGexyyje3aVXuXA9Nc871u+U/weOwZkdV32+ftyoDLC
/qk2aye7J9hXvmb6Wf5c4vuwvnyb7/kU78eM3/C7cxyxfvC1s35t0K2PfRF4
/NK1S4X6KGl5LPtandvO1kzQDQUf/mR3jkFVnRXvU7eK/EKx7fY5W7bHblz5
KLk59nFmsD77rS/eSqa/Pp/xvu5vop1eyxx+DoK93pvOM4f3GQ+wc3BtvoU2
pMP78DZ2eWE9+5/2IxeLZ6oz93ZYvG/8/B92xhC4Hrz/8fRuyG8+e9bWOuP9
M6tjjveXWsW8T92Cb/08WNn3L9dMfUvfsTF+ttp37DSwvtfvYLA9Zscr+F/z
jmWsJQDvHx1+N7L0wfnoiGK6fRl5jW6/ztzhuvOLz3i/f4vzfr2xs374GZ6N
+SSHeY1BrOh6sXW3PO+/PNgOGh/albzfrpWLbViH98U61vdq45tbH20svdY3
SBqemHiGMd6n/vi5uZbri6ypj5/+hK2r3Adzc4e+/m4fRhow+fn1v+KoxvQ2
Ps+tP17PWfcp3re+bH+emJbb9vvoF1mdv9XE83/Qi3diMzIPmvyG77Ue3qez
6Rgb98T+Vo/O+mITmxPJ9fWL2ZzTKytj6VrL6xcLeT+sR9zmfZs/+PXhc/H+
7Rufh23Kj5jmzOuQQrndX8x4v6qesi/rh+lcjGlw3+gKi8ZevMZG6+LKYHyx
/bWvfpGcv/JZYH4/T2a/dS9oUzW/T9e7t3AzOXyxWdjW2DqqMqNn7sdcrLGd
ODysnyW+v3yvlXwy3WV9z/w9LGW3NWWxzjyAD41miOtlnG/nCJ9p9s+siTXg
/aKY2N33y/3cvrDn7a3f9HA0246TM+qYj8MTW1vLj1PY/1lDDH0/sX3KfPD9
mmL8l527SYygJvvCQrwLT/oZvWs2DD1PU31Okbb4uK1Juhfn681x8D5227+x
v9v9YI4nxp+5/3ynkvet3iHGMooZZJni7VGeLcp4vw7r9+Pft2lM/fqtU8H7
YvuQjo62n+2wMsw8f7/Vk3+xMu3HdzJ/7GFvrBg7PzXWD/MxbCgL4n1xvv1d
+9jfFZcdg39t+uw1sN+uXg1cL7bXd/u/53xto2/gyz/G+gWra/PhurC/vbb2
hdMVD8jeV1gbYD7V5zOfoKi+ajv77nXWvWebNHNl421s84yPTY5fTCZvf57c
uvZpYH1/jNfjwPvsu/ZwIuh4LGesL99Onj9ezaXX98dtHzFWprwxPxd9vvXn
Y/8/e+/6JLWV7Wn/5fNhIubjfJqIOXPmtPsN29jdboP7GFy4TXFpqAsNdaG5
VNFQt0NlFW6MwQEYPDRBRL75bOknLe3cW5dM5aVAH1bkTSltSVvSs9f+rbVO
r+2FOT+1If1+ylRN4+1tjp+Q/t8xfxqf2+Xa76yuFXIoDPokc13lz9sm8feH
TrPjs/5aizG57VnPaYusTj+03POXD53ZvKKW+fGvT5L3idOd1THqeL+5TVK/
HzP7XG86VhjX3nltqDt/oHycw9YbWi+voVwcoZwkNhchOYuId6Afu5och8v9
p79suWXfpNp9+SNt/sagbigdK4f0HpYz+HztwVGhlpav2VEt4IR994eWq3Mf
X9nZzWIl8YOi+2Yfd472snw8fl6eZPwxmeeKtDp/ufegf6+36+ZHYdalnY0C
77OcWN8/dj636nzYvDuW99XnFYdted/2E8vsfKfcV71nxTGF1Qvp8+tX+X9t
bVzlegrp9B8/v9tf3j+X8b7P8/oOX3/od44bWn5f96++msWjvzxwzI8eR7VZ
+I73yvcj7ofb4fcmz/OkZs1i/7vVdXduuY5C14bV4Gc+/ItnHOPfXPqz4/yN
mwul9w/fX8E+XDj3e8f7K/tnHfNnczID3re1aPx7ntXpcK41zg8to3Mn3qeP
ov1R3ssy1nc2jp7HWppbU4yWMb2t09vl4+msoRV4f8R6ujF79HRtyLd/4+iB
s2kySJXxfFQcARby61vLeV/1AnruO1hfPv57e1ejmqdxzPL+NFlOvq9Zn6uT
ZuPoecY1XxMdsrbjsWfB+75eQd/j+2f/lKfUxYauJZ/9MYH8wdLvW9YMHcMQ
74fGV+QnTDg79dVfvjPk15ffO8T7QzV2A5bET+a8rzaQn4y4WNZLfCXxu/j6
aROM/cPddnlfdbw+v9HLeB9tOjqWV68P+3cH91X43z57xPviw0+++Lf+7/7j
v2e51eXr1XmQvt72L8v7+v2Vx+s6R7aOrNbtch0eFmvP2v72zvzXzgtZ3te6
fH+x2scxgPctx1+4/50zfRfifavhZ5u/pTlqeQ0xKzzu8nxuLLnYXjgfrY9y
/rjvBty/dedSOkdVfS+y1xSs/6cra/3d/XvZceS8LXz3u8zgfWl0vvr63/rn
B9uH923frHPfssvyfuGb/+uYfyWdh3/yy1237P6DFcf7Pw3G7v7/QvvAcZPO
yvYN1ahQP9u4vZrl2wxqeFJdRKbbL/O1t6Ctd9z/161sO10d3c6aml9Pt81n
/9UBD8P72Orhen9twIvT5n3mF+B3y/AwvbQ78DrPJLT7fA/3W60+dv1gwbG9
9fn79WtZv/z8aPm/Of/vrcXMWsPH34Tz2xoT2FzXTWza/uV5sxDv45viGb72
6Pux86XWOf5l52BS56fp3MJPx3f7Fxc+L7YtZZt8nQcuV7+465Xxxdp91TM8
xvt+jSK37pTf2ebPLx6l9XdjuQWL2hP5lEP7PMzuOeOr1i2M/8XNXffqzwOU
8T77w77Zc/nPF393Wm/yu4j3LZfasQBtx189bj5+5T5im8Sf4stWDKrlfbZr
ed/5MK/cc7pz8T5xp5/857f9i0uXMv2FuD85p0WuxievOrhWyyNuE8Ml5604
VnhlxgfWQnou/ddu244ZfD1LKEaX4+L77uF9OF+sL96njizG3IDOWRLj0Ov/
/fB+f3PvnvstmBOUHP8p76P3sfk7ORd8r5rfTa9/8T5cz7iMPJm8OuZf+CQz
uBze/8ul8/31/aNMIxzbnj+fE1oGpkfb/2yw3/IfwvzEFG7fuey4n+9C2iIb
x+Dr+tUujQN4Tw5OcvGor/p+fRjfWqaJjvna24qlHSNnV2cft9ncT19e32vt
WS+fIbxf0PEMeN9am/5vPw+m/O/atuKBef4kXH4m09/A+rxqGcv7fCd9jz8O
8LevbV3c/noivM820ArVXX4eWHse2jBLg/f973j+EnfGGHHScepV3D2p89N0
3oB2XFjI81sp776vxfhXWnvLZ3brpxeDWe5T3C7amireXz04m+oOv3dGjHDZ
sQvpA/hsc/FY3ofTyQeqZeF8TP7x4fHB8L0bfob33puxx48vbjvmhveVz+X8
nSLvsywcznK6//L9KPp+xhJHT/cyRtK54j6J/gT25z2v2ld4n5jV8/euO4N3
4XvH+Itf5Ly/+E2hHqzP3da3b2Or7bLEaF+938tigf2+8uAoySmpOgAaL1ht
kM3XZOM7XpvYYL+mm9rja8s4Dj7v/zDgfPn4LfOL921eT9074P1Qnwtd+/B+
Mjbey15ZB7wf09yHDJ7/4zdf9b84+507T473f/c/+v/+f/6bM97D+Tx3Oefk
yHfXwWD7X33/g4t1LY8LrJ6PhPcxdML4+K8Nnq/wPtfqhfVBm5Z/X4i7s31S
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
v3n/QXAOMH6P6DkNj/1u2+h1pee55vJsLLp2ELdr9VVi/lCuMPieurn39+9n
vD903lUTOmX87D21b6tyc3rr6TT8nc3EAvW16t4Lyox7wnZEP+/zP4bWD94X
18u0Ptg7r589Dlf2krn6QLv8cYi9JzAncDnQ7pDh26f27SR4H90+hj8fQ9sj
3id+l7HAJPL9+2aPDbwPH8EEk97uSbVJ8r7VkVSZnvd12dtni6Y26v8WzsXz
87CvcNtTL0aX34ZzcYT9iGIN1oNPTyxGrC5GPh9t1+f9JM4x/83GE3OOl1fO
939+Hq7zGTPxvv2OdTDuIXZ5Y/XcYP0JByvfDfl3yGfv877P0vLvi81+M+3V
8cKfDo/jU2ZcoJgqGWMN9ptlYjki4XWxLWMpMb9bx8tk/kCaH2mRLO9rPdq2
aidj4v3PL631v9vccfsNJ8P8n6/sZM+z63tJPk1yq6PTgd+JceD4XnvQy84z
mh1MfC7ep05unecmeu47B0cFP3riM0+OqcaSfuyu+q/V3BNvjbm2UHfXHB+O
Ccc+H88WcwWpL/9mxsN23BYap4fi50PLkVMH1ue9fPk8f3nP+SH/PRwPX6OB
DfG373c/v3XB8f65lfXa9xb9Tr5+mJ9+yHNVXB+aT8BfD+/b80M9oVuPjgp5
mvZ2bjq2F+87v771v8PlpiaR4m3Hyn/Z6fc7m4H59bXw2Y/rx+Me/cvLB+5+
QC0t5eAs6mQuujyc+mw1L+L9LM/d2/2C7kbLs41R22j1/LExyIPUlyaD90P1
wkIGb/M6KX8762c8Id6Xbx/uh/f5bhLbjT0fuO9yP3/5uv4442OLCZ4X3te5
K8uH7z9//Tz0TWySvK8YW3z48t0m+1fM01+2n3AZfPjKjBu0r+h2eE+MLrpE
jPdvDOeHeJ98ov7x9jXIdc6XeJ++c/nCF475+R6OlkYePoepH6ZxQ77vXFoZ
OFv+ejsngpbH8engVbzP//Dp/+bykSZ+eV6l+2cZn/fR4mCaR9C4Av094yl4
Hy2ScvJoHBIaO3y9vjtg9T1XH+ze0T0Xn8o6v7t8MeN9lsEYA3x17hvXLmoJ
WN53edMPEn3+hXv5uI58rNLeMG/iamw9SsYWdXkfYyxBrC+1DCzv29hae6xj
5vIrmZhjlpf2ieOE39/vP9bstaycRUPX8PNi3/bvHX5/dBqeAeuT85LPMP67
t3kMDboeeL/O89A3mFq83+SeQnyueN+yfWgbjD2IA7q7eaFwzXFs0OhrrIU/
n/ag3XI+/QCL21yb5Iwdm7063u9sBvb7K2lO2VRTdvR0PG21yz3tnokPnMHH
eZ0t8fQZl5cH5ucz+rtSXhjwvs/i4n3Wz3OlKm85vgDapbYwj6B6ADHeZxuh
9aIDWo3cY+BuNPtw+KRzK8L7+PnJ1WPvh7RhktsVe/nxjU3nMjren72FrnWe
i74mZhzeH9VsPk6/zePy/puUz39Jc/rAf4rjy3yvaR/nlfgAadbKzOUeHFyP
Vbz/PtKusr5jeR9tjNW+w/6K1xVDSwdueT/JhZCwJPc2/PFJPvy9LIZWcwfi
fX3HeELxt/94spx9H+J9tie9kGP/n7fdNmB38T7PHdXcvfTgcn/tIIld5TMc
zzK+HkdaG1enIOV9x1+DZ5d09yyDLx/fvXif39DsKC8/hs+f/sN34nxidUd5
jqomMMeU/bX+e5unTrxt9T6MQVwOu5T3eaVdqtEr3rd5pWzf0bptzSjNz9ua
wpb337/NNe3ifb+PkgcH5n/+032vHx9mPv1RWF+Gj//46X6jewo59eF9O49A
PLDP+Tzr2SfL+zJd59of8f4QG6X++0KuzbbMzhl01tk0zOp40pz748zZcy/y
825iiw+KGpmVRytZLk7ycvJdVf6aZL7yUVSHk/itwtp+4oT5HZ++rfGbxOba
9ZwZeh/ifcv6yj2k+QdY2/J3bF8mxUjT4v1hbullvN9zz/lOx+/bvPG+nxsm
P5c57/u6vqqcfW3awYNV96qxpX8timWk47csU2Zi+DLed7nKn++6ZXUsXA7D
gb15U7zP+H5Xy/u2TbG21T2ehz/uO1///s7NId638bo2blf+fjG5z/t7T/I4
AP1H/xe7W95XHK3Wa3MAsTzLiPfVd9Dc8D387mvjxejk+SEfJ1yr+sJ8n8cv
x59h4n296jf9T3G48L4+K07C+tjhfbhd229Sg0DbYAyBzsjW8bLaGX1n6wMo
n6ryIqkvi8EZcynnrK5Zv1/pWuA5CkPba9fmo7HjDVgf8+cK+A86GHz74n2/
j/Os5V6vHDzWQt/5dmn76/6Z83/I2prcj7acJqgqRg+NEc85qxey/L+dakof
P0vmXKx/X8fLXnMbWxtZTG4Wa6s43EnF1XY5+DublqkvGx3Pxa1e45o4Mvkb
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
OxvT/Dkq8vE0yXUYz6Xe6289vlKofevzPZ/R7/g5+FXLSp/9vD5lvB8zfPrc
j1i35X2MuAKf9/36WvD+A1e3vHze49Xzvf7tte8bty/0zB53HTF7cPeKs0mt
v7NmBqOHdOhlVof/t29d6m9tLjpzvuX01Tf7vV3+0tKFxrwf0r6PYiF/nGUX
fUdb33vfv0vbaPU8WpdyoViuH4X30fHhy4crpPMLxgS8TOYguCeQK1Pbtlqb
EO+HxlBVx8s/blmM7usi19i8P03PC8yPzsd+J94PPV/gYjQwVc+hGIv7Ma7K
m1R2POx5sLxfO4enl6s/ZoxFpDOC9y9us6+9SvbXcuJ9lseszlwx2q6vvbK+
qiLv857nGgbv6zfl2NGYzh4vO4/j9wsxMLG71LiVb1+8H3r+aW4rpueB8RWj
W8b7Q3G8a185BvfvJ0kdl810v/L2rFwrav5fva533UjTw7JPjm65OQIYwfG+
ZWzp6WfJbLPefmcn16yGB0O3v7lfen0MXy+9IPMXY13DPnM4HrOaffT9qsca
M/Q3Tdpoc3NqfuC6if+B96m1ZTVFPu/X3RbP95tLfx5Ldz1pHzb+C/jD1kbs
bHY2Cu+3ZVW8v7xywc016Dv051qG9/zGq2/63r7KQr/7/6trvn9f5uuSbUxi
wlWJ9v7X18X4XGeG9+1cgLUy3pcGmve0j1z9+p8dw2i7+s7yXRnvZ/EC6auf
QzCkBfKXlTWtYwHrw/zk6HH7+nLHaXyGGHfARp+vhMcAvpVxuM23H2pPKJ4h
NO7inDfi/ZpcBbfDhWhv4HiYmJwuX9yIb4vfWJZz1HvWy3jfb6/iFMidqXPI
tmzMCO+Pnybnm1edz+Jc1nD/CB079Q/2ge3A/LC+zYUf4n3pjbgmYs9s6fer
/Pt2Gfj/4tIpp8tH11P0KxRr7LkxymA52y7FGNt5CH+/bY4iy/sP79/of3F9
v9APZqLf920exhydnTyzcd9Le05LyL0ipoUpPnsO3bUdyj9vdTgh47erqTYm
vNywlj+0TJ18N4n1Ar764TYpZ6fVH+m3qjz7vuFXnUWcZRMT78P+9Y9lM0vi
F5vn2/8QNTtlRl+hz7R23Fs8fvBErE5VjBfqbl96E/kyra8xtn5/H/d3hmN1
/mU0+DbfjvTI8v2/Sfun83WndXVD2v58HqBeXw7xvtVX+HwuH6z1x5f53n3e
j81D2ONp/fqW/6zOwz9voXXC+2h7VFcJQ6+fPVcUX2h5v0KHEKt7hU9e8zHS
lfv76+9LjPe1f/SBqmdjE97HYPcsLiLlfTQ6df4bul5pK5pa6WfE++ortv4t
16c++8cldi3GYi8w9gUWIOfRxaVFx/u0xebkHm5vkqOnjPetln/o+RvRAPEf
eB+djs/yytFj94VnmV3Ov4/wnAvreg7d/L8+7xzvOp//qWtbBU6aC96Xddzf
WROzcd/p6/LDo6wWFRbjXD+/rTXG+VW6vJi+52rG+nmee/u76tTi36/LqKHt
+jp94nLx+Yv3ea/aXMwNjML7xOrOc7zui2cPXfvIGcp8RNu+fnKUfr9+ytn6
1kJ/cfPLWv8bRfsds8R/2U59r0lam7xvfX9tmc0PGDrG9nWeeT+rtWN4X+2Q
rzsU51ele7H5PS1vMh+i/Fwh3vfjCG1OoTrHr4r3378t5u6PaZjF+3ViBHze
x8+/9fhmosdJuR6/6KXNrTzeUbzfILcgeTbVPpur3u53yLdvNdl+HyXXpXJ+
lm6/YWwmfEw8gXLYw8fifb6HoWP/xdf/3ms350L/J/7B7rP6sPLLSrOjsYF/
bq2mzT9m/Ecsj5GLRm39ZHHd2TfLq9kymm8I98U8Ni7ks6/znbW/bF93r9t3
lzLez+MN9oI5OX3ez89/r/A+70eH2at4n985XvBN1l9tnYZZc1uM4TrrrMyU
b9/4XeD9vMbUGce5sC/1Z2HfunxQl/fF+PL1816+eF17WiaWc6fMcp/9eTd+
Ub4deJ/PVrMv3kdPZNcB7zfdrrvvpbqeSdW3asvg/knoev71ptc/85f/PeD9
zzLe5/XW/R+c3Tg47z7/7e9n+5eu1RsLNLWTxPtt6XnaYH35QXnlGd+E9+ua
/JRu/18Pr9OPNxzuX4cu100or6blaKvpz3z8aRyCHaM05X1fI673qk9EfG4o
tsBvb4j3y/i97PyGfgvNFSj/itV7hHjfbwf1tBa++53jffLz890Q768ehmvk
1uR9+fot7/ucX7cP+4wLi9d+NtaM25XB/PKBsz14HRPv8z6k8RHvJ+fqoNB+
/ccu4/dH9Td7nmztDJ/3lYsStud4wPy0D6ZnHzDaBeurjbSDZSzvKwdm8Zgf
FvJm+vqcJryvZVTb5uHdq9k+kKOHOQFqe9ntMy7YTmvLFMfTPXPs8mOMFg8r
6Hte7rtn9sV7e8X+mtZpmzm3+SZNto0r7qwz31z/3cr7y6Cv3NgbzlHjxtgN
WN+vZetzPT56NPu2Xm3C4bnmBg7nGoW9ybfThCP8+4+ub+Jzxfu2Xq/2V3MJ
q949ZFTjnnFSeL+teQhpEdx7w/uyc0uf9M8vf+peZSvLZxzvw/74QkM2SlsY
pz1/MRmdUts2S/1+7Dxa3j82dZ9DPmLf6rB/7qsL+yBhFuk4fO6HpZdXzkf7
RkHjkWl00n7xLBwjq/HAO699dfbR8mimmU/jdKkP8MrktGH86cdIFvrC63Le
b9y3TNyu335tR7xYpgly54oa0PeXnZGj8+2v1CPeyfU4hvejWnnjLw2Zcmji
h7fHs+l+Wy27TLwvpi2zOrn4fbO8r+3xSh8Wu8PVsDb7RzvgSrWPexb1n+ij
8u+L92P9YVizMpy7yO8PLKv881zf4v1hPrjntk077ZgDI14WFq+qr9skH8+Q
lsfwPrZ/P38P72M+m9xZ+77/6tlOYX91XGz+LL2K961/gDHD1q1riZ7HG5/O
labHO1+uv3bM31nECn138PrnjYMS3q/2kzIfIKYO6XZ83lddK/8/8D73EWJo
68QT1Lr/D3ifOQLidNmu4oyps8X8xbhjC9/E+22tb5K2dPGPI+Vpz+/zx65/
4M98+mMyLwrvn730H9H7ufifZXj94ebnrvYoOUyxJ71bQfYnxwmm9z7z0W8Y
z9kYyXk3jr31Bc+DcU7vHOba/UnEVNh8kHb9Nl+84k6fmmXhZzj6t1e7wbaF
GMj68t+kuYZicxP22e9r+N+bz6orqxjfMt5/8+thpk2x8cN2+23UNwxxYd3v
1Aa/barnKt5H04OxT+i8P1166IznCJ+ZDwryvuffJ28Ptbn0GZ8+29V/YeLY
3Ir1acf6pvVp6z2cW4f33fOxoY7f1jcuu65i+a7F+yzDvsP80gfZdVqfvj9O
O3pW7Ef2N8UE8J2ty8UxKcw9qNbw4FyJ9xWjkOxDUkdXuULR7bs6d78ltWpH
4XvflIPHziGs3z3vfPvU2hXv+1pb9Dx2vtqPWfbPjXLzULdgZ3vV/V+872LQ
fYauGK/O1Lp8nZ2VWKZHS/s0vM917PM3vvk3FTwIK8PyoZyb+efhmlqJnu6w
EFOLtgZmY2w/qp6m/JkYHru0yfv4zVeWT7fc7naPg6zMj44P79HOjf4LT/Pz
znu/eu1Mxvtr+0md8jLeDxnn2vJ+8np7MHa6416x4/01Z5b3/ffMFdhxgX3W
TuL4jWvzyPs6XlV6nnFsFrzvePvNYa7jNzVx/T7txz/y6ucyLLB+YUyQ3GNg
D9oa433b9iaxD7HzFfq+7n0jNO7x37MNy/s2bpDaWuzDD3erY1XR0H+9vlvI
1Wl5X/ktYVS/ToDP++8Dn/3jYd8zJqn1fGzA+3B5nfGa1bmHflcf0NxAyODz
kF7fv6bs8XLjsuuHhfz66n9X7x9mXJ/xgM3RnfK+1sd9Gk6GteFy9gk9PZ95
tkrTE4vDreP7D8Xnra7ny4v3mU+wsYSJzv9w6Nwn5uuPjtMxe8/xPpyPn87F
H/+W1JPguLm5FnH0PPO+bN7b19nUzdUS9Hgf/T7Xss2ZL+O7svsYbG55Hz+6
nxeHz1/cfJB91n9trn22n8zh9SbC+tOwvQfLLg627fVOmve515EPkdz87MPx
wUZ/8/q5jPfx2b98/jBh8t6d/vGPO+5VvL9xc9Etz+9NWV/nvqqt4n3aprGB
fX842I+ltdOFOQBrbemF2rRx5lba6FOxfgWboi2I5eepa0041NYZffU615r7
yzJ/o1ycdh+CvnmjF9JvTXg/5LMNfqfau2+SXIFHaawA15SrhRbIm+kfG+uT
tmOLOjG8bfL+b2bsEuJY9DynV+4V2JDtw/zRulYBDoElic387vau20eOmXLY
w5jKqTjKPsViLLDGz8gKg89Dx99vQ5M5nBDzS38fi89V7C7LMFZiHcT82jGO
dPrSF/nzHaFxDstoO2hgku3l8a7wvj5zH4f5q2pv+ebyb6a/aRzhnz/L/DKr
4//Xr4/6y5e/Nm3L/2/Xp2uP5xq1wuTXd7w/YH38nht7u8k4SXHnkWMzd9bl
7unMN6Pbpy9z3cdy68DxmsMruz/B+jauNrQueH/h3kXn60dLw3I8G/M44a8z
3q+6982rkeuy7RyXdXXFTY120l7GJ+j4Yc8XPz3IOBp+R2dDrnP8lPpsed99
fpbEOsH9zwb3z1F4v0mcSMjE+2L/tXvfFeIHLt76U//+YBzDb0MaocPb/Z+O
77p5BV5DNqn+0mYuzjatLd73+3B5f0w4H1vdOe5v9YbjaLUcuXnWrl9w586y
cUzP4Gt58997We5YsbU0LDE9feg7bZt7IPdK2Es5et55bavSY/u8P851X3Xc
aSt6DGJvMeJyLe9H9/VlrnWQ3j7K+xH+gCOpB8t/0dzD+OSzZH3KCxOapynr
P3WOQS1NT824XeXT989TaJ6p2CZ/nrn4OTY2KOsLNn9+XRYY4n3GOZH95nkh
3k9q2B4GDR859/OmvI9Wh3n2WP4/amr5cweW93lOWZ3/8LE7dEwvY/4Nzsfg
frabaJOSPEDKteSYP+3Hc5enJ2Qp1828HZ3Nh9kx4KBf4NuP59LM/fRNfO5o
5tHmhOYLcq5P5tTgfS1nY3RkMf9JG9b2eifB+1XPgHHN+rrF+3A8ZpcT78P+
+h3/Jb5/fn/1y97IvN+Gngp2UR+96vmXLO9bY4xg7dHO9ex9jP1jscVN5wsY
X81TrK5v8o2P+v8mc1Ly6b8yvn1yKL6K8LuM2N03nj+6qJM5KGhtxGXSDL1x
uqHD7Du7jJ0PoDZX2TxCjPfVpibHwmp9xtX5VI0X9n9a6989vtzfGvAZr5cf
nnF1tPzjoOXReMFAcLmeJzpGQY4u8TX+aWMr431p2/FHsw3p1O0xqYp18Pcz
tlxbvA/rqy7uOPOvyfOiyPtNapeoZm8bbBDaZ9bN+X6XthUWpn/jq+O+bbX2
8g1yLure+5V/E96P3x8OXD5+aXnE+tbHKD2P/R+1usjd8/hwM+N8+P7h1rWM
9ZXXR+MZ2k5cdcZKOjY+6zfIMTsTU87OeW5jZ5M3YnLUdyt5P6y5qHs/ynk/
GTcwDhDXW9++9EDE6dr/s82quYUmz1H7HDwgP8FWuzkb727+0Or6yp5nbdoo
2hbu+U9/yZ+r8P6NpT+73Dx17vMw+W7aD9raD62LfnMlUmuNcWjovz7vYxrX
YGib7ByCLMb+vp4opC+aZ97HJqXf921avG+Xc3MYzw+zfET5dnqF5WyO+lev
8zmPEPPT/8jDQ5vEq015v22r4n3FR3LNVPkqLO/DgbyHjfgt+Kyp4H2bE128
X8XzsTmc0DnWMlqOc1I3ZrfK/Lw1zfv8cF5L2wfLtEz48cnFo7z5dWt8WYPt
Q+bvo3jftkE1buF9XvGL85utOc33POdvpPXsYz5/eP/ig4tJ/3t7kJ0nO94T
78e0PJh4f//BijM4X7yv78T3b1PtflFzldQWYh8y3rfHSzlOrAVym8+VmRp4
M29LZzMx2z+5jsmDE8ulOY7ews93yfUkv78f28v39trmldw5jAdevnrUim9b
PiTmO9ceJ6yPLdw5GsuPKZsk69vn3byYz/vu3L3cjfL++a2L/c9v7PQv3P/O
sT7PCp4NbfK+rIz37xxdHm/dHu9bQwdFjEH2OX2ff1fkfeagZ30eY3b/eDz/
PlZXe65YQqvht3WWYqbjh6Z/98ndhBlM/p2Y1eF96fH1m7RFv719XGi7fc3z
pyTr2Jhx3T1f4+Qb1594n2cAx8/OCfhzHZYrLe9H60oFfIv878qDu/2NwbVi
z4f6QJXuKaSbqToGWi/nptGzMs1VE/rNxrE2aU+xHx4EfWch3leNWN6P9Nyv
wffWOK+h6w8mlnaH/Dy6f9s4GT7b+zr9TLyvWFv6Gwbv++c1dt/wmX/j0ZK7
BziOv7vk8uJdOv95/+7OpX7vcNnZo93rffz7SW28XnYsxfw2dzf7hjkdD+NC
m6NHcz427700PvPO/V3Ozo/WyL3v8u/zeWkvm8eOsf7t3mg+yBDvc33H8n5q
TKF7oO4RbfE+9xC0QT7vHwXyNY9iHxvvh9rj5+JcfPCt4+7Tm+vO0PfC/dLw
tDV3E2zfoC1+Tug2eL+JWd737cHfr8xlbh5ZG7xf1169zrnfavZ9tvP7XML7
vew5zjP9/uONQG2rIj+FtP5+jK7P+/rN8r7N1aN1ZnMVz3cc78/yuq3ifbuc
fPzoNULcapkeHor9llmEk8t4364zdtxUlzm0D/5+69zovIT8tqXPypKc66P4
9/28TOqbvMZ065hqYxVy6ZQ+45uxfWz/Qtec2ilW1vdV9wr+R2wvvJ+MXXpD
xyZ2nbM8ufXF++518VR/ef1Mxvv8jiYfzY54n/kC5c7l3sD4RPm41Yb8c877
Wf0xn5Gtb9/P1Wl1E/NoXc7Oj9Is75M7+U9/S8bhfk4dWZ38+75ZHY94n/Xs
P9kL5um3zC9NDzG9fE5qAs5/zK7lfZ4tjCMmpbmfV/NZH18+r3yG+y3v83mS
vI+xfr+fsd2YpmeaRq7R/Z21mbcjZOg2yMEfyvE3CROP+bl5QvV3Ldcl8SOH
6ff5fWr3+F4WW+ibn7tH8wkuN9/r3A/81NT7sjG0vg86xvt8R8xL1b6HGTCZ
O2vj+I863vCZX88Pn3NLNTIR/z7H5/Wvo7WL7Uk3H2uvX1fNcn8j5i+prWr5
tq5f3/YV/9yU8T5Wxvlt8L21M5vF8e/7wLHkM2MQW5OvTp/S3IC9XquOn7u2
Xh32L/zw/znWxxifMofg8kygKXqGriivD+C2NeD9l6/vZz588b6uX/LxFOP3
8zoNO8e7wRxGmQ3Y+fTaXh7PK96fZ718l7vn4zJ/DDo4//v/9aB/4e4fMhMX
weX5/XM4b2DsGvX9+jB/pqNJY3MT3X4+vuA/Nuc+rJ9oeY5PBOtjlvdDWtMP
3egjoVhd6Wp4PXd3yfn5eY+mZ9K8H/LvW/2n6rvN4njB+35M9LzYvd60+077
vF9nu2xH3Kl1iLX9WAA759B7/ri/+2OR8y1Tiovq8L6/jyH+H+V46vg14VLr
Y7Xf41/WM8PyPsuXxopGeH/c/ZMGy47D/P3394G53cZxrRHehwFHmfvyNS/v
vX7r93Xb9gJ3pvqRNtg+ZMUYmGL/4DkO5zMmCGmayiy0r3oG+LnzQ8cDXQ45
o5NcWnuO65kntuMHpzcacD5GP3n66pZh+sSvn8fm99wYQfMUb9O5ABff9yRf
3o0RPd84nA/vY4v37+a/y/8/a9YrYUDXr/+6Nfu2dDZZ8/vi4P1nS/f7i4Px
8sLS7zPmX9z4sr+xl/M+7L726IdCPLy9Tu11Kf99wvsJ693Y2854X7yVvz8T
yf0Tv5eEcsSN8/wY13wtz7xpb6Zh0vLA8lY7z3vpei4+LMZtTEtbw3MhpOef
J94P8e00jW3zjIN1N3qPp3pN+T5YntOvXj/OuN8uaz+7fFhvpNVpPg8Z4/2Y
tiDJGfo4O1d2/KF22XM4Cu+H8uKMekzlC2/if479BvP4taVKeb8kTrAuK4dy
RPEd7QjlbSs7dlW1toJ+XNWbHWMfmp2zXnY/epcec1frNXBsm/qSY35qmF31
pVZ29rKcSX5OUb9/NH3GhTQ8sHkTnw+8/zaNc8Zvb3nfavBhfa5H+khSR7dn
2pC3HY3P/3ub5EfiVbxv25vkJDL6Hq9/iPczP/8JqcvleH+e5yI6a+U821yc
vP9y9WHG+9bg/Tt7lx37y+B9xdkQ56vrQu/dM66g18l5Hz/92c199zusj43y
jNY9aJ585yHe/xiZX/GT1qdvX2elo8divn61Y1padZnP+/SXpy3lu69rXEP4
8tHvyFc6Cd5/97bIxr7lOTIfF+IrQ5qWTFv/Ou9vygkbW3/dfGJWs6P1+YxD
e5I6YD3HEi9f7ReYQoxNblrGI6Mcq7Z5v41zqNzu9jt4qvRZE/kNvqwby122
XJNjFON91fiq0sv433HNjHos6+RZZf0F3k/n5jOffoVWXHl72G+r+1e9LdbL
75j89HBtqA/ps3JVVfU75eux5zF8fnPfetn6dJ737i85JkeX43w1v6FF7hXG
Esm103PX6NGz3B+pfEi5psjyfj7Wsn0qiU1Ojgu5TUJ9xNUgvhfQ9cya9arM
5uvsuP/DMy8PJ6/Eq5Ibx9fu++wv3v9+/fPMuN4wuP2q0URzffz8bMfp8MX7
/EY+DLZneV/vi9d3r++PA7i+9T6pgxHW+MTmdydtk47VPSkm/uI+yrm96Z1b
6/Mft8ZWU4vxPvniJtVnyjS5T3q3Z67nsbx/cfuov7Z/5D63OVaV/7xqnfKd
W828eCPEdbF4cb1vksPcPyZ6ztvv3w1ZnPfVlu3bl/sr6+f6b37ZC27rpPsE
yJ9Z9ryJ/RbL/SJTrp622hnSYSu3kB3jxfIMhWqrMhemflGnT4XOfa6RH2Ze
P84gq4UVYDMxuxhf7/1jqrwzdY6tzWFatV9++7ke0NRnuvlXyXhROS/tHEZ4
HqFYM0PH6Padv7i4HPG+y/X/Vrk1e2mbDtyYgO2J95WPxx5vXwNIvk7b5vdv
8/k+zNWFGGzX5agyfRvOZ/zE3MipGzuF8zVz5qtjyjXUxfJ+WObHkww+w9/o
5tHPX/U4SGMAy/3nVz9zr2L+y2tfuXEAPD8c29PL8vPqvqHfj0yMD+OC20cX
XRv4/PrNcJydnfNTvfDQ/emnXzren6WJ9/GZE5dr9V+zNtoU4v0mdeTatHnQ
71uuQo+OzaotbfD++0je8vjy8eXgdc0z2FctB+fb3/gu0QPvZf8P8f7TH7dm
es59G2cegX2P6WBi/ICftO17dGw+lb4Tyk/v1w6wFpwHiNRWhfmbsLPl26r/
RWvfeseVfUFLr5xJVecz4e52+ozOI1p6my9Ufo687m7O+1wfiqW3LB/z9dv9
IfcOmh64m23Kx6+423fZtnuZPx///btUr+Nvk9z8Nj8/66etLEsb8xj+AxcH
IN53vvy0j/Oe+yhc8sX1/cL5mjnz1bUud8+HaZoTVK7YAft/d/ee09pfDbD+
UA71lPd93//mvfP9x7289mjoerW8b42xwtbjK9m4AN4v1t3qFXg/tA43d/d0
drzfWc760soTl+vz/qzjLFT7ZdK8X+d5Og+8bw3dB779tvQfo2wffrJzdLbm
bdl/89/H532tz88JGvq/zfMZ2y58v3rtTH/r7lJ/6+Hm3PF+qO2+fzX2v6h+
v0TLE9Jnla2/TntjJt6325eeJfYf/Lih/Ylpesr6RxOzcUTBvDDK/55yGctM
Q4MoDVuoj+S+vL2M8eFkzd3KV+5r5sX2PCveZHr8vK5z7Bku3uc/PFscj6e8
n+cJZdme56NPeJ+6usT7qu6WeP9x746r1yXe177SVvkdWD/HgTEijL/5aD+L
IeF7l8PTaPhPFO/b63beYw86a2RZPxzcN768vucYyK9/NWxh/pfPf3nttGN+
W19U9as1npafzvcNcG9gfMG9Q9e+s7f76XVuY23C88C/vn48s/yX8+Dbj7EI
YynmTfy6xU3W68/bxIxcKbxa3lc+zknn4aljHI+raS12Pw9s29tCd16l750n
1te5nibvh/Ix+r5P1a8q86NaDY9/vu26hnJ6v4mPDap4P6Sxt9xfzO3f67/9
9SDLv/r99b84vhj3XI3Ll34OlpCeoizmQhbk/YivECayvO/HRpe1MdRPqiwU
68r8QlWe0yhre+uy88x1z4evC/N/Vz7I4LN70IZP/vOs8zFPmvetf041D3hV
31auAzhdOp3QuWEZ6d3Ur3zed3WpX5fXXWR5GF1jCOXWFzfY7dvxalaP69al
jPfx5W/cXMh4n+X4jVpdWgf7h26feQmdK/qT5oTYHno25oPk77fnbe5zc8ZM
+p5Zt6OzVsz2Q/H+9YDfM875xe/gSTfe3rnZ33uw3P/7vQv9v21+6/hfzI/v
X+9D1zHxvknOi4MCm/Jbou9JrjF8sWzT+kJg/Und8+rYPPB+yJT/6Mre6Ezb
hCnE+9LNoOeB92cRmxuyEO9fieaGGs+qeB/2e7Rz3bRt9v2Fcy39/jTGzaGY
VMUDWnZ2OfV+KefBId8jWpx0HCBdTmw5ew6aMFuM96vszcv9/rXlxf7y0jmn
9/npn7sTOZZ19iFr0xDvDzNpjE2jvB/QnbC8PRehcVVZO5scZyzUtjq8H/pv
iPfx7zY9VyHet/sEx8dyHsGY//5//lvwOdqWKSabY6Tc+o+f6Tn9MNW5JM9q
mJj7p3z2ei5bv53WazU+erX5cliv/c32RXvtUC+X7eHft9vXmOLqhS9dHcOM
8wfG/8jP//rFblKX6+ekNhfcb/vg8dNef+Gb/+t+S3wNe+n56bn2wfucH7bH
q3hf56fg3285R+rULNV9dMz/YVih7vPgnK4d3CroHOB3myszxPtX904P8b6u
yb8/Xsx4H9u+e6m/Mxg7i/e5ll4MjFdd2/xfNW/E+/osPR7fkReIbdoxgZ8z
YtrWlPfbiEP7KZLHxfr0r+x9MzbvNzHxvsZk5N4kRpY2zQPv4weiPcQRq7/P
at7B1/LMA++7dv2SaPh5zo/ST8fdj6a8jyn+L4/ZC9fxqeOrxqr2W3xg575G
zafDfXDj5mL/MKKBbLy+bI60Ot+U3QZjU9jVjlHF8rE2wTvR50xED4z/M3as
q3Kva5kmx8b3k8NmodivkA0xd4DhmvB+nb5IXxbv0+9Zv+IPxJos87vf/Y/+
ylJ1rtc65s/n6XnKtvRb4usfzt0j3nbroTazq2cV5v2y8ZyW5X8//bIV1PFj
cDvcAG+/S3W+bBdfPc+f5ctfZ7wP2xOjy3/E+8n20hz8g/Xg0+d+o3ENvE9+
zYVry/3Vzb9lvK/axpzzbDzm92/LyCPkS+2ss1bNzws7+Ly4vVbgH5uXPMb7
sCQ1s1RDV3G2MngffRDj7+X9ay4eGN5f21hxxvvtu0sJ9z976MYAL3564N5z
LfI/rnnVjLG5L7i2+V28z73i4Kd2GHpUa8L7k8zTmZyzM+58wvfifZ3Hqrxn
4xq5B+EN5d+3vD+rc1NmLhdDRAsyaZs37b5v0qQo/31d3UCb4xZdK2K8mE+2
Ld7Pxxi9TDfI2MfGNGuuQDG6yTFKcrGP0pfE+zeXvm1+fALbo09zfxTv1z0f
4n3+I52I/JYxJq/k/cD3Lndh4xpNxe3H9smfk5KmWtvGF9vk3uvnHgrl6MHq
jh+amnjf30fYFt4/dep/Zgw77nbsZ+lV2K/YvkkjL1+/W8/g2Zxr9ePxt7Ik
B9Zhwfg/OT78uC/F/KLdhxvuDJ41+O85Fptri+6V7eLLx2cvX35pDqjnOe9r
OfYX3qePoufXfVAxIPQnxl0F3rfcL01PyvmO+Ts9fGezMD8f58AuD64N+HDV
5CpcdYymOawHhd/wr6Ovwfjfi1fbhXsydXH/9mjBzQ/8v7dHGe+/T+PcNw/X
Mt7nFVYm9794n5wXv/yyPeD5DZfT03/Gs33/XoCve1a839S3Lz3yJNrLeSLu
meMD7x//fCs7b9Ngbvn3lWufXJzznG+w4/24jcr7rRybXxJDs6+6VmX5ynnu
q73S8Vi9RFVufrvPyWs57+t46PiIrUftS/DNKLwfyn3FdS/eF7+H/jsUy2Di
JXzeD8VZYE3r6spCvF81DqtzHwnV1MXwV8OwTev6+uOZGO+XzS83nY+o2lc3
zny5X5v3uccN6+nz60n9V8yvsSz7JK0+xyGkTdScPiwO60vPL46v2lfpe6QL
SmJjD1wf5jkf6h9wPRwu3rc5cMX7sX5uNWr6juOner36jrkU+gr91I0l9nYz
3ud7rout3t6wjifNaXntoalj1cW/djYrs7zPOHQ54f3rqX5fGn64UfWzuA79
sQC/wftPXmymLJ9fQzxrmCtgOXhfMbdcl4wPbvUuufsHsbX899LDs4VcP+cu
/oczWP/V8z03BqBW1w9/30m1PGfSOJpke23naW5q86bd5/gz5nKxTYP7ps6b
rYc2meNwIbt3a5511sdinq2M9+dxjKS5NtUDC7VR39WpJVRmbEc1AMQkZeMN
xpn42OWjyDQ2Af62mn7/t5CW2tY81piijPfLmD+YL/L1jtO6PX602d+8seBe
Rz1urN/VQxysj7GSGC3EmzGtvr4jRlHPjbx+wmHhv2gfos+aEt5X3shQm0Jt
9ftTHd1PG8Z5tvvja3lgv6b6/XBehepj4C+Lhh3e/+rrfyvdnvLn2POnvpvn
0iy2T/lm1H/oC7xH8yItDGZrk/OZOXnd963vvvx4JHl5aCc8wDN+83DRPbtC
+iFe8cmjv9d32tY7bz/9/4Wub3ifOF67vPRTjBHhffnvldcJzqe+FvM/GvPC
+5oXsLzfaXo6m4lZLU86DoX3r+6cd2yOFWN2k3w5XL82d48dC1CnqzgO7zl/
P9cqy/E/Gf/N6+6eGWw30ZfD+xe3knGHtiHmxxgDfHF+0fE+44gLd//g6v6+
SLX/oTxh07R5432Mc4aG39Y5nhbvd1bPLO8PxZDOIe+rXfj8xONl8chlOVdi
5seP+uuIrcv6+RLLffzk86+KzbT/lY845pfl+1evewVeGvl4DtoI65CjRO1G
x0/eTvL31J0vCMYqp/nOq/5Tdn5U2zWPpy3yvh0TFKwk97506bExSNW1MEk9
pG+W90O+ffH+OM+f0LyrjWO2+2uPz5dXb/U/WVzvf/V9/Plja1BhNh5Wfd3/
j3Lz21hdHXfxPpp2sUH+ex5na+Ny2Wao5qD0OcrLw+vao+8d8/Ne8b/+f3iF
z21f9Nc/3IcOg33L1cqA99M5Af0urT58/9nSw0J/Vn4eeN+ylXi/EOsq/2rn
3+9s2mbnlQZ98U83dpzuRvVF8bsnXJ5oMbjmYERfu49eJL9fHBR4H5+8eF9j
A8v7SezoN2l+/zye9MI/LntxAmeyV/E+BltvrC04g/fx/7NNt91nwzW6pmHz
yvucU/H+qLk4mx2H2fH+rDQ545jP+76/ddbtKzNYQMz/NBI3fpJ4X5bECQ1v
r5hbc/g751/0cnvWOYfifb//vnz+0DH/5vWF/uFBtb8/dFykywnNs/n+5Nh6
0XTYMYNyJ+pzlPdL/Jllee/L2jOL2HFZ4Rm6msf8VvXxOtuP6Swt6+NrlsZE
RhtgfngS9qzajvLqVPV/Mb6NYR3uW3tD9bXydudafG0zxOPSAMH39Cs4At5n
forxIGbnJqyJ92Njv9iYMTR2ZJ4gz/GZ7Per155WzdQnHdLs+7VpeRVrRWq0
ddbZxG3QJz+5uJ69X7y3lfE1bAij82zgehOrh/JzKpe74mr4zH+Jg0ezv/Jo
xeXSvzrE7qHY33BO//y3M/3FB3/un7qR50EQ7y9d/KPT/2PifYwxgHRAbdzr
y2weWR8T73McGWtN0rfP/RHtwLi8P8s5mllYqZ5nzscvPu9P8tzVWbfte9L0
ZMcyi1vtVer46/B+HV1J0/MX4n19Tyzv+t2N0u2FrIz37bp4ZZ6maq6CY3Ft
95shPo1q+CPMH6pnGzrffn6hafr1fXP76NXbqjN3EpsjkibG97/rP6ybcydd
icxtW/UyB21xdvV+7f0I+eOLY9RDp4t79TqP0VZNXKvTdD75V8P+d60jy48/
eIURWKd+4/ut43XH+uJ9DO4gt4N432+bf3wVn6u4+WHf/fBnnQ/5EjC4hZw+
5N2nfVksbnqes9qklvltH095P1tOnJ+en07L09nULe2PGe8P+uOXqw8zfofX
0XxzLYj3E2YP8zi8z3JJTd6E7bluVg/X+2uPj52J9+2cgV7D6z2T5mo/U+D9
hbsHTutvr9311XPZvVHMb03sb+3Ny4PgvWMcm1fef//2OM1vmuwzfv5JMj/s
Rz7xUf9fV5v7IZmff39UwzfG+eV1FuME8WKdc9vEfF+/dPOhZcX7vo/fbT+Q
e98++2193NC2y/Zn0n3V5/1RjmGZfprjmeRVr94X1qVYLVlpfp4I58RiZn0f
rB+vMUveh7vF1uwDvvUy3tfxyuu92VrFPY/3i31OvB89rtKIDF4ZA8RiqcN9
9zDl3YMoq4v3h7U/B0PXSlUOCPLoPH2y3T96vJONpa32n23wCn8oDyfa/Tqx
X7rmxfvDxzl/9ev7Eu9MvhA+o4c69c0XWUxuoT6bxlZieXMehvg+fZ+Nw05q
7v3OTr7Z2s6D9wt3jjKtBzx+u3cpuz6s/ibG+/ofed3F+zwL1g+vZbzv63iq
1hfjffL0iPd55RlD3kc73299Uztp/Txr4n1Mvn9ex30OzDPvy6Tjn2feP0la
lrbM+vdH5XT+tzu47siHxPh7N50bT3LZtj++jZmYse312nVKmxPajvJCWUv6
VDF+ltxfz+EYr8aWuKVMt4/lcbuTGVf5cxPv3ubMP3IfKeFkO34q6sSHtwWH
+bxfmp+nQrPsn2P7GoofruofkzQ40NW03XxY0PEUz12v8N4/l/Y3lxP+t6JW
hTFz1fG0Pn1iReu0Xayr/gRLl/E0XC4W9/dJ6yieg/xcooVXXR0ZvM8zmBhb
jXF8LpdviuurLPe+XzO36lryX/X/vZ2b/Y3bq/2NrY2M90PH3DK9/9ppdTqb
V/Pra8H7xNrCgWhw4P21Rz8M+d95tf75oq/+68yHr3pOrEusH2N8fwwgrhfv
i/kX7l10Wh54X9csmh40peJ93fPL5qIt91P3S/wv7s/sp+Y8fFJ4X8d9nPVw
DmI5UjotT3MbNR8n3MczWTmqXVzbm94Q709rP7j2TjLv+9uI7UeSA2T4fmP7
bhs5S0NzDVxfTWJ3Y7k2q/I85v6Tg/4P9/9a4D1432/jOLxPjduyXKGW90P8
P46/X/+r6xsnR4t4v3ish3m4KidN7lsvnk+/Lpj//M58xua4VrVbMa/vXC7s
g4z33VxgRRvlzy9bv2P6n3cyE+/D9nv3l1we/Iep/011bqm1E62lVcH7+fk7
dNdEIU+u6QtWlxcaQ+Pf/zSNsZXZWlnWx1/Q8ki7EzgXnXU2U5O2zMv/+unq
fv/srcP+vaP1rI4urG5ZftgP7+txvh5ifvE+YwjqcEnrY8cHw6yfr5//KEcQ
r7A+rGrv0VzfMDbvj0as/yn2H9IApfn/X6S1f5X/J2YhxphHU8w1Y7pY/FNd
Ixd56PumvO+ft4+V90Pfw/E8j0M5LaTZCfG+llEu62ntRxXvt8HAVWxHLc3Q
9772QPW6k/pYh9m67fIFvU6EsasY/53ZZtN9DV0L5Okch/frHFPlXlIfgvfL
/o/mpIxR6/K+zXUaOxZtjyWbzieS9xKrc77q8b79nORB0rEcOqapH1n6ENUr
87Vt3AdCcbHy14vflTczzwlVbLt97+8brP7cPB95D9Njlu8xf93ifXLn22dr
KBa/7Lqx4z4xfz4Wz9vf21sbmrM6fW2j/8fLN/qnrm1lvD/ETEvFHDtDPvxA
XtbOOpu52b6a9l/usczJwt2Kx1Wu/BDX+1qcXOeTs77ew/q27i7L6jutn+/y
PEDF9RM/AJtyLbN8EufzyNx/ct7379Xj5MUL6f8T/k/va4MxgJ2ffJ/da04G
7+teNy7vE5cJ74eey6Pw/sei2xk+F+W+fca4MV7nGb2SXkv48qep2YmZavJU
5ci3+2/7QRt9pkn/Ew+H8golOXbCvv/YPth9HmdsUzbmtbzfRoxGLKeJag3A
TSEetG0s9e1jNXyfaGPGzWnatB9VHeuYUd9qOA8UZvvLYd/XxsPyGHPTmp9W
e/keDb7yuisHJMcm5tPn91D7LO9bzbp4//3bfG6BOFmWf/+2qPfRPvDqtDgp
3/Oq93D9zvZqxvUYnF//XA22f7jpzJ47tVVtyq+pPW8scOziC94MxutJ3Y3j
wn67c/By3/E+bI9eh1cM3uf4fXrlbpJnMz2m8P9nKzs556PbHxx38p1iM2e5
zjorM7G+yRH1zdq+uxaUIxMWF/cr7365vj43tDZX904n5vntxfuX0/GB5f1k
G+cLeeGtifdj93Fpeex3dTmjrvnc/7fNb/sry6dzPWJ63yNmuGoOYF6sDb0x
5yUWlzmKnkeMOOtjMwuD9/d3wjlSy3ifOTSuHVifV1d37vWO+35W+2Lr8kzK
qnzWVf3PxuxWrdevrRX6H/n3fe5Ga1TWnznnT3q3XT2tJ71b7n0dIw8/vK/Y
7qa8b/2nueak3nn1j4u9N5fGlGI1eB++rYp7DZ2nSfj7q9YJ74f81omFz4lY
399vmFP1nLK8O9ZMDh4b9+zHCfvjfZsD3/5mdVp+G8X71m+P5l7Puv37qwUT
749zvMX7Rc3W4dD8RBI/nMfZiefF+8wXWF2+tDp/uXQ+43xe/WMP73OMlVsf
3i/k2lQuJuXanDXPddZZxH5/ZSsxT7O/8+M9lxsf9pamGz1Asc7WmYJWx9fg
MB6gPhYG65fl2tF/GVdo/cwjsj3mFDC2n2uJvs7aFLuvW96fhn+Y+wj7B++j
/Yf/9x4su1dyAMv/b+cCZlUHYJY2irZJfuFZt30WVsb7Zeb8c15OSfvdrAzO
jeXhb8Pa5n0YGu7mVVzNOZG5341Z/rbL2eXd62Cd+g6m95cL8T71tXx7tHOj
8Hn12pkhP0fZsfK/S2qpcF8qxkrWtVAMcyXv1+QktCl17gN17/ejPBeq+hfH
rJz3i4YfHzZv/Oz28mxaTTnPPrVFryHeZ1489FuhP6S+K/T2zz1tjnz20ufA
+Ha7bRisz7qtT585h+HcpEVtlM2/6efN1/wfRl2CTyP9D7aXrufu1mbm+8+Y
34vJnTXPddZZqdl+Oui/Z9Z205p1285/jp5Gun3YWswPoyf5dsK8z2+Kp3W8
n34X0v5QO8PW1qWul/Ltsi3/XkRbtC35NoeeLwOeqPvMa8vE+9ov2s/34v1Y
HlA/FniabZ6FjeLfF+9/rNr9sljdOsyiOXv3fP8IeD+UrwVfHvx8Y+nPBR4P
cbm4/fhgozHvi7955bz5xtjN/w5/PK8hjvd53v/s7z+8vnL56ywvf7TfvBnO
Ldq0X5Wdg3w9h+6cl+r30+dP1fMKH784rk5O0Lb7lD0udvvsn/Lfk+v9k8/+
V+11w/uNntk+Z/qsOvgOLS5szDhLcy98ts9Su0/2ezG9m5v+eafA9+J6q79H
y4Ufzuo/R+X92DlTzC1tYj+IqfO34et4LO87G1z/xAMwbnE6ocG1emltw/F+
6DjzGzHXxOMube063g+dh5kzXGedNTHD+8TnqqaF9AD422FsNHwY7xN2H66t
xX+w248vuhw+8L7T4R9fimj+z2S8b/PviPet/16mnP9YTMsA799am24NV+0D
x6HsfhfS/ysmWPdZ5QBSXPA092Neza+p87FYaa2tiLZ83g1NT5vtrsOmm9fP
uTo5MIpl55yrrxc4mmO+t73k+JzP29trzrScXvW7Xi2Px3h/ksfW1TcasD5+
/irmrzqmIaaqw9H+dQqj1eL9CuYX7/ttqno/qvl60ZjPQbzvNNwD1qefVa0b
Fm/i17e52jOfvuF9jg1tID+QjjnboO5tSAfltO2BnJjWd299+GXa+yR+I+5H
iOXwb3KeaCvzB/jpeV5evfCle1ba9dg6Gaqp6/z7g31ivMDcsnh/KP52YGh2
vlh64Pz34v37+/f7CzduJZp9nQubT3/W/NZZZw3M9lt4H55Gw6P8OfA+LKsc
HwnvfxPU1BPnSSwtrL/1+IobN/A/5cyE/8mlI97X+EC6/USrf8Z958fio++h
HQnv57mB2F5yTynef5dWp8P73DvYb7WJ9jX1b4j3yR2yvHa6v7h0ylmeByhh
fzsXMI19G+l4vOlFY33HzcX5MdrTH7c+ON7HuF6Pn05ve29/PXAc9nzEOBrG
KKHclXV4xebgUa6fSVo571fN7/QyP0p57pji8bBx2KH6V23wPlY3X1eV7sb5
r5/fL13mnbcu+YpD2ySemH2E98l3r/xFIYPLK49HmjOvoNspyfWSjIV6prbU
ofPPifelx0Fvv3u85epa2ZyYGFp7p71POT/RdQ23H75Xns5cEx/Xf0k3VOca
8fuY5ic0p8N5u7x4KuN92smr5X39V+uRHonlVjf/luTcSfNqwvjWmAfgeLn5
mgHvY0P99NrDWn21s87myqyeZ9D35VPH5658OfA+MbWqYw2L+3l5bI5O+Js8
+DAf69k8XHPfn71zzWl74H7L+5b1ld9fbeDaZT1aPtHynHHfiSntvdjen6fl
39fxUFxxaE6iibHfrAfe31hbcLEAm/fOJ7qgwXur/ZE/5ucnWyNzzDTtpOQl
nScbNfc+Nu95jeBCuChWC7dNG5f3rYWYwv7GmLcQAzlFDRX3RfRH8D77PLxM
/bbIT4rmxD9HvqbGaihC46JKvk2fQXWeW9ZfXZXDKXYNKJdC2Tn2zeV8fx5m
U/ZPeVrQiMD8tx4dRddfh/cLfnzlg/GWQ0Ok7Yj3yTeD7T5ey54R4n20OKvr
Z/sXB8+X5fUzQzkxxeWqo6XveM6J8y3vq8+V+bnq8H7IuD9YHRX23cXfuXg+
eARtP21Hm0MNXPb5bXrdsb/JOg77y5e/dsZ3Lv7W6qAGr3wP52PsC6/U1/p6
5V5B21/w63e839lJNMP7f7qx43Ltw5w30rhZWHwnzfGR58qJ5eY5ky3Hf8T7
9lp3+Xp2khyamM3LY2Nx+S9zBNx34HzGItLu+3G68ifpnlDF+m1ykOKZ2edQ
vEHd7UunJN73TbzPGABjPMBcAN+L9xUPYG1424cTrZ9bZp1/v7m5eN37KzNv
xyRsUrwf4jEY+MLZ34+lcfHXH4sdHc5t3l5+zDq2vHTOMYvaOu79jnuaz7ny
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
tJ/4p7me1W6+r3wOVfj38dXae0cotraJr96vE1Z37o15BvF+Gbtnz9Ya+Xfg
fPzQVX2OGrHUyFVenHo1X5L8euJ9ntNifOntxfvKv6P4XOl3lKdHDCDdvvJu
ah5A67bbtu81lzCs8cn7Ob+pRo/2/8aVM1n+CM3x+/uo+wD+ffE+Gn3fb1+I
x7V1Rzvr7GMwfy518Bnexwev6w/e5/qGS9GTW5+mjNw+ZfcqnkGK+ZUWyMb9
Yrs/7md5d8T7NvePf08u5uU5HNrmvJt4fxLrbsL7yl8A7/O+1I/m6Quu7n4z
xPsXt49MO4pMcFJiqpswmuV9+8pz0Gq16mr54f2PVc8zrvHMd/NK1xO/P+PN
SxdOZXWoGq2roq9OivcncQ+7vHjaxfFW8f242/Hz3fAa1bP7z6GS322OFXtM
bbynz/tVxz00frN5LX1z9bLSefAh3h+8DtXT0nJ+7SzPlHuoqo2qKStebhrX
xb3IZ3L2Vfl5xPuK1RXLi/d1P5MfULzPb+j9Q7G6lvkVH2D3Sevi2Ct+2N4n
+R3/vr0mYxrLo8c7TsvjfPkDpoH3lW/c6nY67U5nH7Nl/R89z72tzE+Z59VK
4tYUi1PG+2VMA+9Lx2Pr6vKKtuXKg7/37x7uOO5EC60xQRIfUM37obxw08h5
PY/WlPdP3Uj6gp/n2jfd02F+vw/4z5+TnJun6biE6+POUbFGMmMhP5a34/3p
mYs1ub/i+uEoc4BtacjmIY8nmih0Pa4e15veUC2TJlZ2j7d5VvRe2vZSK+H9
mHbfb39s/qUtH8PS1m6e28I8Oy37D9XIrfAfM0bwz0Hs2KLneWFidu399qdf
tkbaJ2lseIX1lWdT5xAGVz59mD6Z90+2rbGDmN+e81C+Hfn382V6WT5P1fXV
3IV0aeJ96uTa2tH+8eIYivf5Dr+h01mJ9zvG76wzZ9m1MLguqLVreT/JebCf
1dKyeeGt2Xqz9lli72WsT8sePlsr+PcZQ5CHB973tfzKFZzU5jnqL9zJ7//k
ls/vKbN/rs6DNWH9i1u5Twotatn4SLmcXf62AO9zz7fPoJPO+03HiruBa8Pn
/Tpj0HnV85y068vnffJ+zsuxGDVv06jteZPqoYhzWFn/25jbiufvjPH+8sOS
mlslrE/N2sJ+BHw++s5q8e3x0O/FfPX19xXtOHNG4v1QbtEg55fsF+sgZyf1
pf3jF2pbVZ4eeB3mbzrPrfllWBvet/dvPVeVc5jfEj2OPbYHWY7OcE2aZB3M
C/hz2ZpbsHW79F7zLNj2ncuO92M1YULXEm2kRgN10MT8nXans4/a0twI1r9/
bm0rYxWbj1PcAneHeL9uDnLuF+J9q+EX7yv/vmJZ9Rkjrhc+hfcVfyu/3UnS
8UzamvA+cyn2+TWsjTx2z6Tj9HiX8b7v4z/JvM9xaMr77DvHxs95F1q2rK5P
W7w/Su7ED83g/ZtL3/YvnP19q7xfdVxnsa917oF1eT+c7zKv31r+317GeNa/
G2X+Eg7zeT8UX1vkz/g5aTrG4v4FaxJ/jI954dqyi8UN8T7fYQVtuMf7+JsV
2yver9t/dP/1ef/d25yplWdnlL4D7xfr1+b5MDXPr9+sRlF6fz8XP8vL4Hzx
/o8v7mXafMznfX/7ek9uzb2dm475e3tr2W+x2BbVeM7y63da/c4+drPa/cF7
fOuWwW0tLeXGpS7UOLyv61N6wdzHX6yxVeR9xfMmvO9y6qaxnSc1Vreucdyp
d9zkP014n3GT7+Nn/vworXea5IHOnzfSrHD+Qv3AavtPKu/D+bs/js778oPF
eN/6+EP8QXwpvulx9kF65nkZB/t662kbuudp8/6o9Xxj57Pp+oJ1qQbrIK4B
vRi5Tyex/9zjYX5epdcgn/O/3h70F+7UZ36Y2L8GbWxuzK/Lq80ZbM33jTM/
XBbPAO+Hzi/3SLsvjGXKamzlcxCHwdqzVXMP+s3l6Hl8tzBnMX5/TeZi8vjq
hLU5d6qpa/PsKC8Pc/36jfsdHC8fvuV9O3ZQfh7pgDRvUKed6Hl2tlcd74v5
Q8dK31ne7/Lrd/bRW4D38bPLuCbfptcszEltLephhWpiNdEPvnn7X/0nLzY9
3q9riZ9fviax7bxwTdtGzAPHqJlfanTelzGHwn1TvM+9Ez//zUCNBJmfk3UU
3m+7rtaoxv6O0xbNf4Ry8vuaHp9b8O+T22jUtpf5Mifhz5+H81Vl1IYjhrdJ
3VlZ81iONA6xRd7XeR33HNl8nSuXv3bjoDbWb836XHWfFvcdPIlo+SO8T6xv
aD9gd9h37/5S9sp3erXGPsLI+Ifx0ytvKK/i/VGPKdwP54v30ePL/8+9k/kJ
fvNzC+m9fOJVcw/6jf2L1d3iWCv/zah+/qQfJP9Vfn03Rkm187xXPK+YPbRN
x/ZvE3ZQXk/F+4r3i9fLcF9XX/X7ZpH3w/oljcnE+F2cbmedFWN1qWu19uiH
jPdVN5frU7wf9Ok2zj/Rc7xvffrk2xfPh3J1WtM9AN8+vGrjBOrkmDkJhp/E
zrNMkvepXYzZfmF5n3w75KNHDwnTX/HmYrI5GS8/w0n177dlz18+rKzBZU3n
mOf5OPG6xZqVJ4PHp2Hk64zl6W/T/PwuE6nDNULOH78dcDD1DNrf/+FjYY+J
zVfvLM15Y78jd/rG7dUhlrcm5oflrT1P63+rBqB4Hx3+48PhHDLj7CfznnA+
bImJ96nzWvY/y9Sh2jWWf+25Zr/jOvbekC+9eb8qMrt873C65uSJp6PdSTsP
sjGBZW/1Af4n3me+AMOHaLU/dfqyzcP0Lu27nP9Qzk/NKTG2zPT7lnU66+xj
NPlUBtfDnzcSE++rJpbG4xrXw+O5zj6xUfJDM36w68h532r2k/fJ9vLPtIt1
SMsj3keLwv7MY22tpvdc8h0prqHJf/FbjbJN+F79glw9HE8YH9++vR/D+n7O
fUzfa7kPmfXts8d+T/2AY9P3nqfPnaY2Lu/L5MsP8eZJyYvapk2P95ss3+4c
QFmb/HYx53H+0mSuU7+OquX9q/cPh2vrSu+emuX954bdM/s5iaG1nB9uR/Gc
tM38ZVbG/DpGGDlxpPuzmh6u0VfpdWqvV41x/P0M5cQZ5bwp16bNlc/npFZM
kq/Hzwmq3N3aB9bBd+yX6vH+ErgfJvmBiu2vc/1wHh/cW3FxvNpP1RLmlc/w
vtPzmByqM2euzjqbldmYosEr2nz4Unnv0dDba0z1+sbhfZZ9/Ozh0DqGOT+p
ARDif8YG5PRcXz1XWDd+ffblJPO+8qPB+2h5yFPUhB/a4H3s9GDshH16vdff
6D3OlpOex889Kd6XfrMt3k84YTpMNK75vD+qxfJxNvUTVy3/sfn9D/dujnx9
tHvcvRjUlnU/IW14aHuT4n0b76UcK1He536T+l/xiy9sDnjyeDfjeuunb9IG
5eL38/GzHhvvOYnz2/RYwfu2jfb3V5lOP9e1hHg/yZE5fA6a7If89OTboU3S
6ivPvp5N4nnibMX4uu/bsYZqeoW2rdyc/r6pbq/1VYT8//C+NEash/aqThjv
iQtAR5Xxfhev29nHbl5unv0ne1kNPvE+1x46Dq6rmL4mloMkZmxn58d7hf8r
B49dL3582nJrwL6Y6u4qh7/P+xj74tdmOSmGH4T7pvZR+U+brKMt3pf5vO9z
vm+7aXureL/qmannCD7y0Hz3PFqTOp0xGzc3j6/lKWur/7+Pgf8VqzrLNjjd
RcuMH+sD7lyXbIvYcGoTt7l9qymxdVzVNnzzp69t5HluUt732XzU/mhrb/n9
HN5/tHt9pudf+1f2va5Hn/exkKZnlPuOf3zxv8Pb4n3ib6WPEetrHMc9WbW3
bK5NzjcmXYDmCfz+wTK+FodX5XRS+5I84Hl7Gf+tLJ1zsRjwPnGD10zNR/E+
z01iJz61OrGO+Tv7WM3Oo6afz95KrjOuFXgTf7/NoxzKvc98gMYDVUYMJDk+
xfsaWyS59pVz89uMd3mfjD1+cPcO3RcYi4RYH0OH/tcHJ1OvwD1Ux1U5y6bF
+5obwaSLwuB99LbKE+3nm8Snz3mU6d4+rn+fda0/utpf2bs0Nd4fl3fb4OU2
c3FW+Xmrlv8QDZ82NXcf3r0603ZMkvfrbov5js3r5/qvfmmvxndxvJlznXTe
cCvMjfaaPGv4YDHeV+m4y34n/r2ODhy/8Lj+/Ymco9/C45OQwftPjurnbGty
XUuzw3vL+6pv4+ff4Xerxddv+k9o/dL+lOXrDx0f9uMvl84XamX7vG+NZ4iL
FRHzwzqmVlpnnX00ZutPpHV1dQ3B5Jjm9/x7uL2mVPu26r6SaBH33Hpd/a5n
D7M4HvG+jdMV78P6GnfY+0EsJpXnxkmsqauxlPz6o66nSayub+ig6A+W9/GR
oOGH+4nbFe/bHMrWJsH7o+rgm9i8xHe3wfvvPLPfz3r/Zm3zwvvjnl+993Uc
TQzWb7s99jt7z7a8D6vC+3XWI6vK5+rzvvUTW5s074+cz6vB/acp7zdrx2FB
Z6+cqvjqyIHPOeQ5Lg0/n+Xrsec6pNV3x/919djSz19k72NPn2w75ue98oVW
8r6N1+14v7OP0WyN6cF7y/sxS/LeHPavHyxkrI+fvu69JFRfD516VT4e5hAU
e4+mndeNtYXodk4a7ydjqDMZR4/K++OwPgbvo+thjkQ5NOTbF+8f/ZzkDarK
O9MG75/fuhjVf36oNkne7yyxx482s3mwSY4lYbiHx/n6lbc8uGwDf7/P+6OM
Vcm93xbv+23KrbhPmd/Y4/06fbRsH6V7eRXJeWm1MNOM123nGIYtHLN7OBQb
0tQs78tHb3nf6nqUP79u7Z1RjWtmdfNv/eWVxf7m2mK23+h2YszAeGRjb7fT
73fWWWqfXFzv//7Klrsevrq5X/ncgPfx/d47Wndj+DLWr3Pv4t70j5+uu/FD
mPnPONYnl0+SzydhYvz+8H7d+c95t0dPN4Z0PKPYOLz/6+vH2TmD69VHLOs/
fnbs9Dto+KvbciHI/Owfzwl0/mUszz0e3q9bi6VtmxUnt6Xn8XP8193fj2V8
AOvC/TH+HtX8+IkQ77d9jEe5BxLDME6Nh3rtivOnND2h49b0WNsxT2ycO4v8
PJMyWH/l2ulgTqJx5oY5Rm+Nb55zJ9ZPjvNBxvv4/bmPw9z2GnprdDpN8/ZZ
4zyRe2f71iXXT+B9v5+U8X5WB8HX788Bd3XW2UxM/X/w+uVqYlX3X65hNDOJ
fi+8DJod+znEbG9e579xf5Bmv5ifM8/Vw1wCOX1g/XMX/yPT9ofu6SfNxPtN
crWHbFz/vp6Zlvfl3+eez7m6ms6dlq0Hvb14f3HpVGZnL/1HZnyOtuNNr39u
cK9vm8VOgo1ba2tU+9h4/+qFL522pw0dfVkNM+YPnnv6iEkf49j6iXVkXoM8
xvD+pGMIxPuhGKQXKe/X0SLZYxvj+Ng+xzQ9J4H5Y30K3n9w90pt3h+uZZVo
bqTP1/e8t3lBxfvKyyl+V0yuNPz+dt96343S3zlHLufqwL76/gfH/nZd6PZD
eaEd6z842986Xk+Y3+Qf7PLvd/ZRm53jWjlwtarqXIvwfhs5L5N8JgeF5wJc
D/fnvJ/79BPev+h4X9d27B53kkza/XHnRdviffiePqHauvrd8r7Nte8bvM/v
N1Ldl2/ifcYD5ESnxqXqXWqM8LHy/s9PZsP7H8I8WROry/ttsPm4Gou2zOf9
SW1HMQWwIzkSQ7yPf3//fr02qG+yztj5aBSTOiHej7UBZh6lH4WuSWJVqREs
3h+lb9kcO1Zjq3g9u5zidfNYvl6Wa0n5ebSPrA/T/EDZczn0m+qiMZ6hn4r3
0fCE1uHnjrC6/e9u7zr/vuN9aZc77X5nH7sNeF/Xwqer+65GYNk9h/uD5vRG
vS/i//dZjmcD16l438/NqZheXuFBfT9u7fBZGu1WvYM21jcu7783eZBh/tDz
hvMGy8P9sXsw+1QWj+Hn7WddGO/F+39aGJzzlT+68YDGAhs3F/srg2fdNHKo
z8pmxfsfmxGzW8e/PQ7vW12JmwMYbE++0kn51sV/jGXE9npFG2FzmzSxpvWQ
sDLf/Si8X/Vd/P/F58O0/fuj8D7zqbH/bN1K5k9jvF/3eUi7kudn8pm+ydjM
/l81cbVe1fDlOWC1pyxjY3Ztrd/YOSGOQ4yPWd5nTPM2bRvxuXC/vw7pifxn
Crrj02t7/c+Wcl8mjOP4//oMWauzzmZthvfd56U977os3reLNbtHex6+fPUo
6LtVfs6Qjh+7mubwsbyPrn9a9+22jfoGbeh4MFh/XN73aymEn6m97Nj7On5q
cV3xxmkhE9/7Jva/cP+7/sWHf3av2g58ZHm/ymZ5XrWfo/jeZqXnOak26rzE
9u3L/UvnP3dcPKm2+Vpyy/zbxxtO2y9tdHvbTPocWhn6UlvHeJTjXMX75JmZ
RZ+ZNu+X6b1GOX7rq9+5OVH2gefoqPOgPu+Hz304Z6Z8/No/cvaL95M6a8lv
apvj+UF7bT1kjDz68D05kzBqIzj//uZlx/v4nf54+UaQ9zHx/p3jy86YTxLv
i+2pq+tq63b6/c4+dpOuDd4f2N3DHWf5PWdYp9/Unz5Ux33A++Tk9Jezcau+
4QNHywPrw/zk6ZSOsE4b5lGvwLHlHtUG74/LuKqdTG2Dqjb7vK+40JuFesjD
/vsY91f5/8X75BSB08qOgQz/l33v2yTPq+oodLw/eRvnuib//Oq1MxNrW8wX
gvbYMn9728v720ngfbhuFn1mXnPwNznuML98/G1sx/9O+VT1rLexuowTLO/z
mTlfO+4Isb34XmyPiff5D89yckIwbhDvv3l16Hjfj4OXtkv+QZ6j+z/tOlva
2u1/vXIv8e+LbzrW76yzxFKNm9P0DK6RG3vb2TUevj8cNp7brTLV1y7m6SnG
68L7Z77/2r2uH147cXk3fRPvt5FzclzffjKGOh+9/6u9Pq/b5UN6yjr+/ire
17MF5sevNfoxGub+mI0zTzAO71PvtOP9+jbPvB+2XnbPpD8/+3nH5bht2x+x
sXy2Vc3Q0bN22zdp/34ZK39IvA9Xl+Uw4x5UJ8eZ3Y64Xtr+pF7xQVZLN/R/
tDl3dy659sikzZGt3z2f8X5oHfD+wp2e0xQTn8t5gvepxbyw+TCLC1E+Jler
+cVxFre7+3itf3//fq7jSdmmi9PtrDNj1seffn7/VnXyhnPt2PvHuPpWNC1o
csT5vFoNPzG6vJKz8w9rB/0vzi/2z9659kHwfpvWBu9T1yw5x+FlOO+6t8Lh
tq5yLHZqXCMWIHsmpbw/yRydPu/7cwZsf5LzBfD+pGIpeTbu/njsYrB5PYk1
qNs0WIK4XdhzGtubZk3d/Z01F/syql6/0O7fymNlR7FZ63lOCu+HrlE4euPm
gmNon/f9ufcqn0OM36lnr2e9DP7nlWPn++3hfdq0vH7GaXKky7FzOC9f7QXn
47Wf6G/gfT4T24Fp/gLmdz77lZ20DlDSH7d6e1leCHz9lvdhGsc1NidnZ511
VhwHD95/eX0vmq/H3iPI0zNqrh7lA1M+Tp/1YH04X/bFzQcZ7/O7n0+g6t7J
fWLW9/BJ2fia9fLnAscPXrRcb3kf3b/1+8PpNm7X9/PrP7GcavzXzntY1p9G
vV2srF5V3TmC0PuybaLBmGTuFFmSX3X2/XbS9sarweSfTzT8ZRqxNm2avJ+d
Z/JejllLeBJ+lRde/v3g8Wow59G0L58E5o/59+FqnnuMl5KY3XrrU/0sq9Nx
58LVhOhl+Xi4x4v35aO3fnvxvtXlsIx4v7o/FWME0fDg08eSnHAJz7NexVnQ
lkyjs3LgxgUsJ95nHMH7gm+/0/B01lnYVIOO94yHB0YNrqH7dBofZP0G5Ods
ei/79XVvcJ0/zHSC6FrCPt6EE2F8WP/CP5LlxolT+hBt/Nw81c+e0xtJfk6d
G3Qr/Obr9pWjR4b+3uo9ZeJ9jPfSdD0P5LMQ77OuSdRzDD1bR61P6/8nFkPg
21+vfdW/dOGU05hYu7ny7cz714dk9vzgA5++pmd6Vpf3q3IvzDvzx3zhMWvC
+8c1/FmjxuRWmfWpyOBqXlVjt+58J/dg5db0n508z7U+X3vvtDir37mxMfNh
nDN87/b4JTXivy71v9n+lY89Et7/aq2X+faz9qbjCK2f54R4X1oE5gQYI8D7
p65tZTl4XKxuV1O3s87CNrh+/Hq7wXt0ytk2rh/eb/I8ID4AE+9j+BPWDDeS
fz/Jwf91zvuL1/vnLn/m9D5taN4/FJs062M8S8X71pcfshDbNzGfPWB9aqES
q808wfM0r8Q0jm2bGgaeScxpUVsY8/My2thln/fr5CQqG1dsXl+o3U4/Z8w8
xrq3dU5nyfuce+6lk/T7v/plr9b8RRXr//R8Am0bMPcseX8SOXpGuVbssedY
23WEeB/TPCE+/mdPqmN25bvnPa+W6+W3F+9zTmBt9Par62f7lxdPZbyPPuzm
0p/7F8793n0e7it70X38xZuXZd+IC/l68FwR79vfNdaw+5DVzLX+yYF9e6vn
YnVhfvddp9vvrLNyM3UpPlu63z+7Ocz84+a611wirO//FvPtS9vD58WNL129
rY+N9+VLD9/7p8f73FcfP3tUyvvjsrh93jE/wHwtOYzgfTHxtHh/XNa1cwTk
ZfGPla1bFstV1DR/U4z3Xzx9MNI+fMi6H+JlJ5mvSf0H/+m05yTJZ8UYkJiQ
qmXj9WmP+wdPJtM+mLsqR8+kxpqT4H2uE5/X65g/j1hVU4xjpnGSeN/eD20t
XMzGz1rtvbQ51uB68T5z7t9+928uF35oXMY64P5QHEZoH/zv4H0YH4aH9/37
jMaD/rbx5zteMby/sZfk5NHnrr5WZ51Vm83N+dnqw/71GnOeTWufxMYMMHxc
15PE8or3L9z9Q/DZOela9bOypG5hmNfG5X2/5oGvl1nbP8pMvt+Qj5+auGV1
d0exLF7s5X6B9zF0RIwHbI3IaVidPhZaxs1TDI7tOLw/KnvvbS+NHJf6IfM+
/YraW5Nav+X9Yv9I8qYwBmS+Cj5rp5Zv/t6x/pg5OWnXJHz7WB3en5S1zfua
X4D327heQvPlOrfwN+3nPccPXZR4XxxPXnrffw/D81/luyemVpzPf1lm4Zv/
64zluF/wPOY9tbBsXj4ZGkv8/033D+09en14H+6Qft9fjuuTOnGF79LYXscs
aSzupzYmt6un21lnlWZj2cX64v2y8XpbPhjVmw0xD/G65Nxf2f1zf3nttLPz
q5/N5FlhjfxCbdXHjZnyYNp6htbKeL8OQyhe+q973zj+9Hkfxuf5o/FViPXP
b13sr+xdcm2MtXOc/Xf3/VSX8K5g04mBtH28CZfZ/4n3bYzySeD9D92Y+0D3
Ms1t+rzfe4om8tD8Pup68/eT5H3Fu4xz7/+QeN8/NuMyf9m4wfI+vnXF04b8
9sp/Kbbnv2U+N62bZZn3QrvDd2h3iBt4+qQ4rw7vMz5YuXY6qs0a7iP5PRvG
F7tf3B6+l3Pf9+ffOC4s67gl1faI96mr9cniurNOu99ZZ3Gz+XngfTQ0D39c
d9fYcM2s0fPylD3LynhfeVvgze/XPy/49+HuMs1LG20LWRJzMDn9r+pgTUPP
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
DsqueL/p9qt4f6LGd0ver/usYBtnTAnj37111fnHdMn7xN1W5SfCrgTvX7j5
eeanOeyzbF9V1v/JL5JzpmOH96d9gkz9rPXDqRq7VjC/HT9YwfsTPJN8+JOS
who+HxMxu3pW7DMzfA/vw/r46/NePEMuTNoBGDUb24/bt7J2bsqX528+75/0
/Pin/XsmcsCvfzI4u/JRHidKmwM/1/W3Ke5TDnMep+1rsy5iDOx8hN2GbPzi
fevfb2u0zpv1Z8V7XfC+v691993eq+J9vnvz9umUv7T15SlbzyzV1n8/tN+L
lo+nrbDrN61BbDWPcRB59rdvNc9H3KZOlHK9VC83bYPpivcbnbNRbpku1lVW
i4Djfv12t5YNSrx/e+vSaB+7n1ugf/RrrUjU6/pu+Z8GX3799znvq24Ifb18
Ov1j4h4iPk28LxbArwd/ntCYRf48Esz/9MX0PnGf2Dk3e+5PbIxZJc8rnpSU
FBb5OIfPiWpukZvT5uPHJ4acPFre8r4k3rd2/diYXa2vzHdfn62NG39whD+R
eH/53leOkbVcl7xv6wM0nUMgRtfyPvb7yTYzyz2QxfWezOOPOT/wPj5EtLfz
5v1ZqQ/7fhvet+u48+MPg6OXT737ZPJ1EZTqbVULn3ls/H7Om+Ogu9srjWpr
yQe6q7FbWZvYJe/z7HWxz6o92+e1UVseMz+gnJbwLPGtCObvY7/gdmuvt2J/
v136z86XR36u4n3GAhsH1XEiGgMtryyNcn0WL6uYXRSyA5b9FzbBlyf350HJ
nycpqVTi/TyHrZ6ZIe8rJkb594vsOTZPVpGUw0fPMqyPxuOEoyD3Ky+Pz/va
Hn3H1ZU/OOHjo+V8nm7cN7y8HdxuXcH7Raxf1X5uHW7kvlO/Bd6fdy7Osr6G
32B9mN//fpFYH9Xh/UXb91lpUXi/yfmH91Fdn626+YqrVHccXcT7s7oHZ8H7
cH6I90PnSnG53Itd+u+EFOJ9V4dr2E6I9/mO/ubqKN8afWoV79vjov2G91HZ
vhAnjl8PEu9zD5BrM2Zc9/GayTOS/PeTkurL8P7prX333MufB1u/fb59X8fy
9m+yXbf2JXwCfdanzu+Y9yfz9PjczfvNjfF4gFyWZXaMGLFOfG7IyYOtPZRj
pk4/x7KMHTieOvlqyNXDuVg7WHPtceL9ptczfllYHgVzxxbwfii3TxP/4i5V
h/dVh2fe175vhZ5Z8uCT64Y8+PPev7rCFgzzxy7fxz3ZFe/P6lnBlt4378df
j8Oc9+exfTefvPTZ4Nvv/t758qzePDm6Fhnv48+PjR9Vxa7Z+CVYf+32ndLl
VWsX3sC/hzyb4n1+K8sbdevg8QTvJ3+epKR6kl+P+7z2KOd92iRs8Zb33/71
wP3WhqlpH+AM2pGQD09Rnh6YOavXdzS48/hmzvtLK59NLNumHcQfiG2wb/B+
F/ViUV3ev/borBtzzIP3i+JWe9/uHO37HB8sv3n01Cm0jH7nVXNe6ut0fngu
5sn7MCD+ATC/zeeu/O6IeF7E8r8V3i8SPvzXV8L1LhZFIa6uy/uLoHnb92N4
f5yjp//92b23Xrk/fUm8T3+5dOf3eX8O38P79LFrzsZWbqu315Dc/n+4dD3/
vHyneJwg3pew9VM/lxydCOb3r4Hy739sYw2TbT8pqZ5G/vzu/ZD3YXy4V6wL
7zP2djmbf747+OnFbiHvx9h8xPu8t7WspKUH3wS5X3nwT9++6nh/ZW/ZMf+9
7YuDP136r/lydeooBdvhEe/Pox2WxPu0y7OqsyXV9ansbLsteN/GjDeNobS8
Hzpmvn/0LHx+LO+Hau/OSuRopD7Ti2Hfi/3aZ33L+/qMP4Gkz3acYP/vf4/s
8vo/699BZt1RKvhP0fFqn7V9thsa3+i3kMhVuH71ZK91t/rQ6sqZiXzoiy54
P3QtZ+UTB+/bmN0mY/JQLtK6Ur7NS8sn53b9iMvFri/e5zvVkaeOFoL5r3q1
Ba18BhDvkz8HfXn+T4P7++N5Rhhf54/1U8/HcsiXG1muzjLeZ/15rhEvv3hS
UlKEhs+PjdfdeKq27dFUeyzeL7N7h/KjZPn3D/PnnWc9++2oIP9mOFcPrG/r
Be/8cNONTeB95eWfN6t3kbMDzlc+hd+CL4+73xrw/vsCNdm+5X24vsk1d3VU
O5oTaiKf9yX8eyRs2vazr1cFwl/cl/29T97XOv06tH3yfgz/z3NuhHpbz5+G
c640fgbf9pdzSP7zs8jREzoGeJ/7O8u32Xy9bXifeRnxPvWo+solXSbs9sTm
wvz0l9gnZKPgN/xZYXxs++J97ae1q8D7mt/MXg8d44v3V9eWnD67etcxPHl4
YP4v1ncHT55nDGDzcyovP6/YF1kvebSwd21tLA2+uHLLyTH/iFWSP09SUk15
vK+aVbA98aa2TYqxnQd9Zd88ydtZ2kvs+7xW5dsP+frA/Jd3Lrj9g/Xx70cX
L346WN04MVf7atHxt9Gs7fvzUl3eF2t1wfqS/HXsHFRw2wtqC+46N08d3n9V
MoboStpGaF+sytbx07Psd3LcSIwHbqx968ZK3IfPjm4tPO+/++ujwdb1+Drh
McdSN5637vFX8X6f55Nti/f5XLetaOunx3iDthyffd7Pgvef/3g7GAt8dvUj
pyyPxDgeF97HXkEfyntsTll92+n9HHP+pF8jcyjY+rXM8vqa43S4n7w68D4+
+Njzba4eVwNoyCIwP+MB1oFgftZ15f6hy8Upf54JP2SjvHZoUlLSlPJ8/EOp
bq6rkfpiy/m2dNEm8dzbXJnifWwExNnKP78s/75y9ugzvI/YP9ZDfk7aKcXs
YiPvsy2dlY4r79fOgxnJ+7P0sY3e9x7tonWEvbpJrsakJy5u996ti85uDkfP
q35trObJ+6qfWPQMFj0LVTk5/fWF7EtNnzP58yBrp9b4uO/nV7G5e7s3nOB9
zkWfzA/vE5O7vPJZ7ktFny7e92vGW97P8gyNa+gWXWdfmsd//eYw532XC2jI
7vj3YPsX71s215w9HPLx5W03PkCb36+7bTFWmIrVHfK+ne+3mjdXJSUtpDQv
xnO2uje4NmwXyWmveTw7//nee9ZZrknsrvoVrU+8Lx99W4Nr/fCmy1Wj3D0h
2z/7Ae9Texe/nrY1stqKsQ3H08W6jqM/j63DFivL+2X/Vb/CfUcM9JWHp5xu
HJxrXBezbV+/KLyPfb9Nbd3YY533cfYtbIr4+cxqe9Vj1/B9zbwE8dnzmG/C
xzqbt53+rZT376+32m5Mfcci7d1fGaytnHHsT7+Gf42dD+vbhjCPfDw5729f
cbV74Xz8eeg3fd6H9fkO7hfvN7k2OpfcH2//OpnHj/bjxNVNJxge/ofrrT8+
vA+bMCbgv4wTxPvoo8t3HLMkvk9Kqi8brwvzX9/L6uppPo/n2D7/vGInwI+m
Ce/77cj3j5enc/IMOf/64wcunqAof4/mBOB9xe6eOPEfByvbJ2fero7bucOc
9xl3tKnNfhxZX219neV/wbbq2faLGIZ1c889HN5/NsbkyiivRMy++ftn/e/t
OmI5alEYeBa8/1sQttAXP/UzPxhiqLLnhXtc93nI3s313rp2ppN6wdPbLs7X
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
ImLY/D4TG75YnzbO5cgY+Uhi4w/X0e2m3qZqlMD26vP5XjZ+8vFYHvn21lEW
p6u8/HyfeD8pqTPpWYL3z95+7J5NYmjbPOuheqihmin7z+6O7A0Zs2e+O9P1
di/vfT3hz8N7zUWOcxCcnKjni41/ZfkPM2/z26gv3o9hVphc57xpniHxdhUD
EMtGjGTb49L9Jd7Hx0c++qHl6XMs7zMWUTyA8+8J+BQV1R9dFN+exPv1rksV
73MPw/z4w68N2Y2atl0fx6x4f+f+2pCDl4b3x63ax1Hn/q5qX+Bg6pn1eW9g
Wye/ptufnni/ao5RPv5dbKvuvA+8Tzyuz/oSy9BO2t+L8vLUPXdVtRJhitWd
ca5NhD8PzG9t/HzOed/yycjvINXYSkpqp3zsPHymvtl85J5PeP/oxVZjpinK
z+N/Fu/D6VcC9nzs/Jmtf9KnJ5+nfLGV877ysWHLwD4N66uWep/9TJfq275f
5fNMf3a5Zj01+IhzznhBPvJwd1EOQUSe8y55n/1WXC/7X+SDI3ZnPxX/y32o
GIFgnvPRf4ryoM9bB7vXfzO8z7Ww+QC5/lwXzS3KL6SoXhPiGSh7Dsp4v2z+
qA7Dv69YVxvBujA+vtBFvN/XeEO5G6bO+ajeVfB8dzRuZv3Y+fs4LldHIBDn
4++74ne72CY5Rtle1bXSGIMcnDb/zrtR3VzL7taX0W8jYxi/aLwTrid36HLt
Z7V2M8H8cP6T59mrXycX3icvv2rtwibU1Q3l7kxKSqqnfOy8kuW6/Xh9f+rZ
bePPUDXun8x9chS07U++PznxHbyvurbEI5Gzh9yY8Jxy8u/O0B+3jkJ1MxeF
95XrtI7gF9VoKON9rjP2/Ta+POynH0vL9tgu9vsyOxz7afs91iO71yLyfJVg
098K78MMuoczf4FHhXnXtUyViv5D+wTz+/dO0bbq5Z8Z19PqQ+SW3Lp+dnB3
e8XFxfPKZ+XDsvsaOgdFc1pVasL7XanP9SuHnF+f1j93xO4q/2hbiffLloGp
8R+SD5H/O+2cjclVu+ev9/27ad4P55w7Krxv37+bZgX4nePY3Hs4Oo9ZXh58
9H1fHkRtXZeHc5QrELbPcwcuAC8lJR1rrYznzmB9bAIIbtazLh883sPX9dr/
en3FekmedV8sq1q2+p94X8swZ3Dij/+p136mK807VleCl4ty5ZTJ8n6oT7HX
uS3vc28SC+xvI4b3dYwh3q+q07uIgvcXOV6X9gNbM3a+ee+LlY3TkK+xPwaw
8ZZvIuKZFiFfa35c3tiEeJkba99OfR+KuYLJutofOHT//nrQftxFbAz5lFwO
/Z7HE2ovxLt+PRkXPz7cF5ufs43oy2LmWdnWg+1xXmMbdwXfKz5OrE99rar2
sViT94W9fjof+ObfOnjsWF+8z/0k2z6/i/eVi8cK5s/zhqhGUOL9pKT2srEw
w2frpxe7ebs20VeMcmjC+01svzG6/uia05Xdc3kNXcvt/mds+vIhsWMAf1wA
76+tnlj42N1F4X14QLnb6vwH/r7+r39yPjKozBbalvcR196fI7HjlLLtW97n
vfX/D827LKpg/cT7zURun5Ad2zK7eN+ODea931WyvG/3V/n5Yxi7K+b/X389
cPxblB+0C96/e+tqZdvexTisyuddvE9sMsKfvs32aJfwz6lic+KTxfvybeV/
tOG8t7zvz08UqU7sQFnebn6D7TMfnuH4Y3dvcOV+lssPvzx43/fhd+9H/gaJ
9ZOSOpTH+5/feDDB1Kpppbk6WKgqb2Jb+axPrK7vt299EMX7ZXMD5C24ePHT
wasXi+uvsbTymTtOjn9W2yyqkVWX98nJqrw+9CuhfPsTy4/ynbfZd+5FfDnw
wVHeCdn8sYuV8T6/sb/O/jVajnUxXjhuvL/IrC8tYp6jury/CLb7kCZ8c345
mmifp3g/8l6BxerWVgj6cI94v9freFR9TE3rQcLPtBHLDzKV8b4VvH/x3Ket
YsfE6bRn958Vb5NxBXHKzDuI97Gp03fD/dZ3kfe+z9U0oz+qbRsLPdv+NsT7
3FvY8LHv09aK9yf880f+PCkvT1JSh1Leq5FPD7zv58jRs2vz6HYpvx2++/Ty
iO/HNv0y3pcPCTHGZf4/XfL+jzVq/cS1l49crIF43+ZPg6W7PueFfcwohz1+
LVXMbpXVs7/g7OPYyav/e+T8ibve97LPvuTvr3ycvCbeL5ZfJ++4yWe+GP6z
/jyLyvuxwoe/yb3Sps2/PRxjlNW2bSPmB6lxVcT7sfVgymRZGd7ns++/XjSW
EO8TT9v0GMX8PxfEFZGT6Muv/34qD6d4X/XDc9vGcF3i/T7jR8rOt3gf2z45
9xF5OMX6rg7XyJ/H2iLnzkpJSR+Chqyfz5uNdPb25kROL2xGtA9N47jqtgvY
ZycZP1SDK8vJydwj9ugy3lfs7r3ti07waB2etYL1++J9HRfsfG00H2t5f9pn
9JG3nvb7It6v+z/L++W58DPW75r36wre13yEeL/vPrBrkZvnONj3e72Or+KY
1PrpFy3jj2na1ktaFHGPUI9kVmMWuBIex6++j/XDufgE9n0clpVVn8Rfpoj3
4fwrF75oxfs6l1W8v+bNbWt59pf/h/xzYtq6N28Pnf2jy3aR8QbPGbx/8OOR
y9WJTz/Ppnx/sPlPMH/i/aSkbiTeV87b4bMVYua6vB/Tt5QtA+9fcbn3TwVZ
f+Ng7O8u3re+/CGdXfnI+fOL91HducuYc9DEJoY/jx3XiPftMYfa7FBd2LaC
f5uOh9gfeL/MB9TPe9JUdY6d/bH7JN5HjC8vj859qG9jHqlvP7YmynLz3Jr7
fsxTsbyP/Nreod8t7+MbPe/j60KuBtXPe73WEJs8j+O8MW3Wo/yWvl9MWa3e
Oirvo46cjXx3VCN8bZQboui+CX3Pfl9a+qz1ftp7UutcHvYXsP53y//kxP4h
WJ/9wZcHe1gR78fEAvfB+zoe2F6871+PnPexPypmd96clJT0oUi+cqPcnEv3
NnLGpL2DdVBZXuuu21t4M5STX3W31kfzk+TjJIaYWGJUxvuK38Xez/umTFul
uudI8cTqW0LimENzyWXjFeYG0MNn03mpy859G953x1/hS9OVbR/e576M2Vf6
PPnsII6R+QjV3HLXYWQnYwxg/ztr3o+1wx533oe968TxFtXrrvP/3yLvz/JY
VPMEf5Y2vK+88uTUx2/H/sZn/zsrxYuEar7U2QdbvyrGbz90f3IM2PmRrTFc
py+ljVfMs87v0p3fD86ufuRicLWf4v2urqVyIsTwfqzdTL7B9jxYX2HZ+T9e
289jdX+3dHP+jJSU9AEp5/1RHv7Mpyfj/ffvuq8NU9X2Yq+3PjpXvNz74n37
Hz/Wtyh2F9+ZC9u/74X3m4yHNjfOTvC+f6yW92HR96M8yIx1imIJ4Vs4tolt
Btt3k5yc+Tmo4P0q9qiqmcT65YNzxfV3F9zxwu5F+dhZxo1ZR/vGe+US0jx9
Ee/zH77z8/Nn9SK7vX9ing1p0Xl/dv4j5b+hJvGndfx5Ftm/n/sE369ZbQ8e
bWvbt7Vq8dHHPwhRW4AxwN5u/fF33fiNvO0dtjExvO/7W1oRxwDzc0xZzs74
vgJfLCS7PvZ88T5z29jxsdfT9tk+sY94m6axz0XX4dd3ilN4kl/rs1s7gy/W
x3W3HO+rTtACsFJS0rHWyL5v81+J91+/be4v0qRdsOP/Knb3eT2G960/f1/2
/bqC923bh02e8Qy5iTSnQRyzYplhT8YGB883CnmfY2tT14f+o25N91hZ3g9t
Q3HD/neMQcTc8sfSZ9XJ9Xmfz4x7YHnes4zlft8nV/fIQ5ObilfmElz9muH/
tc26vF9W5ykk5YQv+n3Ref/Rs274oOgc+/loiv7bNNfAh8L7976/5HJitTn/
de7zJr488Lu12d9z8cXj9llxuYwDXr9p1i7Ze7HsvuSeuvpw7Edap954mTTv
cfbUfynMUVpkJ4fx2aeXL++7Np12i/ZQvB86VvG+/OPnfR8WnZNnj2+5eAwk
3j+zdnMil8iEz3FSUlI7WT+5UdwunPnkxTRP9N12qG+p8m/h9eD55sR/i3L5
FMXvzru9Q/ju6zzDlZt7FyZ4/8pQsP67UZ1HJN4vWqd4v81+9cX7lqPgZ9dn
DV81p2B5n1c/Z47vh88r/dtDzY+M+uorD6djP3zet+I3u+x7b5s+7ze5rwt9
fQMx4FXPGbz/9KBp7Zzjoza831Sc+80b1fGmMJV8khYx7yiCo/Cha+q/j39F
Xd73ebYqN6X8dojxxR7gtHVpin+74P2Qr48V/NwX79OGk0OzKG/R5o2z7ncY
mDyb6zdPO7u+eJ82Ev8dhJ9hzHbF+33k2KozzuX4Xw3vRQm25ztqEivf0vrW
n51OXN10uXs+WdnJ7JGX7yTeT0rqUJb3P1nfGVy4/93Ecy3/1ja2LP4fF/N6
OIq/nfZr0XtYH9n5etrmGBs/sbtodWP+tbjYD/mQi/fxZcKvhzkLfst8qo7y
/fd9TvpQlV9O3eUka9+H5cXh4n3VeeC4YXaEbT6rQRM+bn5jHYpbC7F+1bmT
3458YX3ex6bGb7H9rC/u+7p+Jagwt91vhPdVs6uLey9WtCmx9n1yDOraPvwh
E/nGNRbgtzdvn+ZzceT+n6W9VbyPuGdi/mPvubq8D59a3ofl1lbOTHCdfodp
5aMj5oeFy/zz+9RVr92Aq9veR8gd9/D4Le+7OOrhedC5YCwj3j+39onz18Fv
x8YQiPfrxKhzv9W9hl2I47ES7xNvzfnAN+nSxpfuvCD7X/Lz57w/svOnuN2k
pA5ln6kh88P7cKf8920cVN3+Sv1HLO+zTWzais8dv06yG8sSz6//xfK+fPnn
zfrMM7Af4n32R7WfsOFn9U+eTPF+KF/PvFTkM1/EqZajxPvwuexoHLOfY87n
fWzs8L188LWc8uwU8T7/Kcqx7/O+/Y190zqb16M32yqKTQj4mhedxyf7G78J
3m8reIf5E9+2WWW3qOPPA9ezHW0L3rfXlDZPNb4YH9w5asb8TccJ+PP4vF+n
7Yu1C+/fXx/cWPnG+efs3L8+gOct77t1DfnW8r3P9vPifZcH2rQbXTznMDq2
ec6DvmP8deWPnzvB/MyHUKuA8wYL39i/kPP+1VGNELWHiiNYNP8cy/VvXz3M
3/MMUf+X17tbS+5eEO/zv1COPGwrD5/czZj/2v6kT0/y409K6k7ymRvy/hfX
xvOmsu3Lp7htrp6qvjZj/Wpm/+vbpxPrUo3BWN6nDtebl7PJUxeSeH9p84vB
3oPVYV93IxcsJ94f9x9rztfn+6P+fJH69Emg3bccBWPD6FdcTNxansffv1b6
jn4P/x/1f8r3L86/HMzpNBb/K5ufp4/XnIL6e/yEbJ/bJpbZaipGoWZs6XHg
fcVPzHMfmsbs1uV9Mb/P+1bifZZpYm9t0+ZyvxG3C/fDn33YOuB94lLxy3G5
ZJ7dc/Z7G18r3uc9y7z8qfucwnVFm2DrU3XB+5zfEO/b8wD7ivezfAxLE3mB
xPtqd+STxL0cO88ec52D9ZEL+nj227fdS3A8fE/9dN6L9/19COfaytpDeB8f
pK2DfWfjn2D8lJ8zKak7mRgZnq2v/rybP5+0Meqjuq4xr3Vp/TBCE97HH2bd
sw2XiTw95Oicly8/uThh+3+5c2FwbfvbnPnhuJC27pybCe/3xfzYs/x8T4rF
vTyqNVbmi+O0N35veb+K9RUnUMb7V0z/qrkExQuoz63L+65/fr0zFU/R1hcF
dlvkeF2pCzvpPBTL+5bB9NwU1QVoy/td6M3Pey5uFCar8quvm5sN3of1q+rq
qs2u4v2+7Nh+/xWcCwzEwcb0e/AwPjmnzv2d81lBZTUDxMLi/Y2D87l9Ad63
cw42l03s+QrxfllsFvelfP7R/f37Tvjbc63E+1xnfO15ZT5GOZTg+7LjrBLn
l+0j6m9RjzfPzwn3W0ZJSkpqrIk4+OHzBe/bmhh9t8Pyg8UuSDyq779/ZeTX
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
uZCYbdXdP8v76p9gfPE+7H915+7g4ZO7bj9CvP/J2m7O+7kf/7yZKSnpOMuf
Kxs+X1f+cjTxrNtcBLSj8gmvao+L+kh4Hz8VmF68DxvB+wfPN2utS2I9RX78
bCvUpr4b1Z1RjnzaRMYbRXYW9gGu//ybr5z2d2/kvP/5uaV8roDvNzbXottG
MV+hH9Kwz5BCvI9+7cEvs67q5jsJcb/GBHeHzLG2fWpw/uYnWc7R4Xfi/e2d
i+49YhzAd8u3vnLLorV7pwfPf7g77GOLc2L2EcNGf8Y1kTTWVJ7OsrGbn1dI
eZRmde3mXaM3RnVrwVUd02+R9xEsC8crlyMsD+frd+J0fN5Xew8fqkZf8blq
3xaxjdhzHopRsm0qz55lf/xJ/HVwvBfOfOR8dzg/stfrPPi2DLtN7ef70Xa1
Tfmu8Bu8zzreT/z/0LFw2zrcIdb3eT+rsTjelnh/Hvc1dn14f+n+tqvvSx5O
n0vI5YN9fyJuN9XeSkpqJ/n0jN7jz2N5n/Ydjqmyldt2r47ej/L0wPvj9qt+
G2jjijNN+r1rfZn9aZz3DNZXbVutp8rOe3P9jGN6+B6t/8uwbznaHpw8/7Wz
+4v3n77YcceVsVxxH6jYAcZB07mGTk5xf6zNatZqW79I95vyHDH/Y3lfEutb
MT5Y2TgxOLPyuwner6s2++7myV/vTLC+eB8V1RZAzAHY2JHku1/vvMfG9nd9
v85DMbaWMsGz8Cccj1Yvfzv45c20jQNbiGzdlvd530dNdv8Ym45BaeP9PPfw
vnzpl1c+y23zynMj3o/dN/87xj/ifV5pu9b2lpz9+saNU24cId6XX09T36eY
fjbkz6+5BN+eVba+qjF2nT6fZcnByfwHtn3xfhGbuPjdkU1/wu84KSmpmZSH
n/fGf9+2ubDx2P58srKdKsvRFcoj4Of7bMr7d59ezv0BJbX5xB0zn6DaWjZG
gFw95OxROxjD+6HvxftLy2fcuvCDurgz8uMcbnd8Xg/zfGzy32HfxPu8UgOB
uQ7L/0V2/sy+300/20Zd8JOYQryvOaWq/8H64v2lYX++df1scFwgHexec2oy
JkDKU+Tf26olEIqlqLLx29qfiffj1Yb3jyPzt+V95PM+dVer/uNiLo8e57yP
+K6PuaEY3s/iTsfsquupONmzqx85wfe8ivcnt3M4Ubeq7X6JjxXbS30z5kgm
79Vxzvom45r33r7Ez4NkvL//48PRPhTPxdh1dzUHIN4nD+fGo8yn38/JI2Hf
n+L9ebNSUtIHIMv7pzb2J555nlFyZCJxSZ92iV9HbaWt+dVEPvcrlw3tnRia
V2yqfHdwsB4dL5WNDybj1+g/+Q47P+I7/KA0fwHvsw+Zz9LG4NbRxZxjbawC
4wDbBlfVFrgSGX82CxWxUx02YVndJ1yXEO+H7iPl7bFMHcq95/M+77McpOPP
ZfJ5f3ocYHMTqZ5B9tn6HKE/3fj0N8n7XfOhX/eizv3alPdtXaTjKvwq8OVZ
vfR1FO8jeB9bNsLnpi3vs31igck3j2x9qYy/x22h9Zkn1mB1bckJXyT7G7wv
+36Z7UZ+75Lvhy9xjKpZVdaH0d6QWwgfHljf8j51PTJf2Ok+Zpa+dByHeJ/P
rwPzOl1qnK/nKPfTh/eLWER+PPjuO/99+eyn/DxJSa01MW4ePlunb4Xao0OT
A+ekE34KdWzw9eK1sn3ouk9VLjb6Anz9OQZ4mnkBeJ/au8TwannGAqGxzd6D
Vaeq7Yn3YXsxHdtbd36dF6Ls1qjMLty0vlTX6sNWSt4bfGBieB9pDkr+80W5
dpRPhzxAD01dnJCKuJ8xgqtdbOoWhKSYBFg/xPv2M/EKbtzww13nw4R8vyTG
D6HPGl/M+z44bmp6z3adf3WegpeP/jX+3oEZse0zzoLhipazuSatxPaqLSXe
5/3Bw2su/6dqSxXFyGrMkdW4m+xfrD9Plle3/Fg0p6hxo9he6xXvV50X/Co1
n4Bcrv2RXUi8H8rl2YT3m44RyCvrx17UyQtUV+J9tnHr4HElj4j3J75Xjd3E
/ElJrZT7xQ315Y39IO+jUM7LSd4/qpXbuLgdO3Q1Snnv836bWprj9v2RY33s
7fLtgfd5xT4D89MnKXdiiPfxz4/hfZ2XrLbY6Tx2WLxfZ7/F9iHmb1Mjviv1
5Rfh875sbNwLfm4JrhljI7F+iPdV+4Hzr3EU5xWfqK4YLsT7sDs+RkhjBcYN
+/fXguOJne0rLlfItA/S9VLeJ9YyNu+pYoKDv5mcSbaOgl9PQesYz2N8H1T+
n1DNthr7XCjW4a3HrwFh9539RjfWvm10jT8U3qe9xaeHc1fnf/f37+d1d8lR
rxyTss/7jM8yRTWlYHu9F+8XbVf+JfC3eF/faxn6DdpE7C1FvC+fKLG8eF+/
x8xfaF+yfGpLE7yvulosR20p9gXRj846b7LdXxuDYe+Bvu8x8X4oNhfJpq96
QGKTPH9gYv2kpNayvjzwftlz69d+EruqTpZ4H/8U2It2rcr2HGqLxfu+uuD9
X99lzAfrs8/Wzx8GpF0S718a5RCy/4X1pTrb0zY4Z/QL+OjX2ec2vN9lDoYi
O1cXtYR9Kd7Vt+/TV9l7QfeYeD88Hs2ug83fLxtgU953tqvI/8C4h3vx90wZ
72fvr5t6yNcK6yKL2x3fGobn88TvXjx0KHfqceP9UN4nPzfs1rVwLM5vReL9
uvm9xPv43OheRaoHa2vH5u9HzN/HcfhtXFUMmFhfNbqm8vu8qN7m9u5FFw/g
/HbunHbvYXzGO+J91azHz2fNqyfZ5/EXLVOV57TPfD34gpXxvns/sj3C9xO5
wpOSklrL8v7y3aPStsDWxY1RDO/PQxyH2jV86bG78J14/+7WksvLj6+9z5r4
+9TNrW95HykeIvb/7IPNxy/u5xVb9izt+0X3Rx/2feWlV7/Ncea+Oh7vKwdO
qN6uBN/7vK/8SU364Dq8jw2+Du/3rSa8P45zmKyzZhk6VGdBY5EQf2sd9tX+
h+2F6jnfu7dhxjvXp+ZTiraXeH8sWB27fBPef/x01/nO+7zf6/52WPOsvJ+b
5H35LtllePbF+8QLXF79cvDy5f3c5v9+Yn2P3JiAfqZoDBIbGyv7vF1OuUff
ubno6usYw/v4H2m/Qvb/Jv06vO/zR+6/s+LF5qb8m0lJ3Uq1qhUTM3z9eD1s
W5edQr4wdbi/rHbWrAU3w/hwnmJhxfu0mcQJo4sXPx2srZ4I2JYPB2sr9fNf
qt2M9dn3ZccLlvth33nE7Cpv6Tivab95TtZG/lbiffJX6je4vii2QX5TNj+f
5f2+zxP9u7u3qCG2QLzfl9r6uch3elb7exzz87SRq2m6nfnLE6er+lpl/7m9
cX4iDz3CJgLvd3rvFFx33RNd8n7sPWZjFX4d5ZKD3c+tfeJYHzu+5f1s3eP8
O6o7Jd7Xtm0NGxszUJWvR/vjnwvxflf2NfF+l2Ie5dTWkZNqa+U59sX2I7v+
3NkoKelDk3JxGt84eP/Hn7N2hdycG49ujdqZR4P9Z3fztszPb1+mWXBVrFzd
xeB45eTE97C+bbfH/UQz3rfbb/I/31fF1yzOHfM1sonD3rCs8l/MgvdDPI9t
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
70/WLRvn3xLvv3mxO6DWMXr2+NZAdY/F+zt3r7rxgH/OY64L89F1/BbF+/S7
vJZth2NE4v1bB48HJzbGubttvdycK+S/A+un2lpJSfORHYOP5tfg/S9WH0z4
8sD7f1i9mdn89b15lpWzc+nO3Zz1kWwiNi/3wfNNl5ezmMlOBmOjfh2ts4t+
inb77tPLbhsuj+PITkI7rhgD6xu592DV5enpqn+zNcDYvo7v59cP3DbL+KCI
fRlDhPxa+hTjoFlsp+hegcXxtbn/bGXw54NxLPWlvW54XzYy/ec48760KLyP
3R3fnCqGYTssV2SvbSrmOULXJsYXg3bj4chfosgPQvfOLHm/6PfbW5dcnk7s
x2Vx8mMf+HH8atHYYFF5X7G5RcuI9+WjTz79u09uuuvE9aIPEO/zmef93cjG
j5R7RrxPW35z+5wbM1w485F7taw/WY8tiweH9cX7dt+Yf0FcJ/H+mxflfjZ2
boD18SrerzOuUw7NsrkJnWOdA85lzvuG83P7vfXPh/mHrC/NnX2Skn6rUs7N
OsvbZ9nw/vbhsB17seNer+/dm+J9qYr3EVx+6+hi/rkL3kfM04r3aeNoj1VD
BYn31a/xemvjwuDeveudbJ9t2thhOD3zjyzmffoebPvifRiU72TjDtn3+/St
lY9Tn/139b0ymZvz19F1LFu+znbF+nXnBKQ69Qlmpa7899va22PvzViutOvz
fRtCasP73A9q05xvw5v93G9H84O0MX3kF64j528+5EXsxlsbSxE57I8mmJ92
quicLFr+Vq6nYkZD94vs9OjqqM2A92F1rhnX9MEPq7n/O4wv3udc4FfP+hkX
sBzjAu4B8X7I914x5qHzHlMbjjkB8T7878YA99czP6CRLOtLLEceprrzOByP
xjX+/ZCf59HYB58oOB/917WHjgHIt5Ny7iQlLbiGz6dq7eY1d/ne88Xz/5PP
C9hYHM3rDV/h/f1n4T5PrC0/yszHZdJXpSyfTht/f/rhoxdbU7a5qv6wK95H
tg6YeN/nWGz/nBvei/flh+77p8/an6eI9W1sa5310a/yX/Q/302OD4nX9eMW
9Jvq6fI/raec9ydr0vSpRWN9tKjxul1eD5cXc2SvLFuuqT+az/u80nbMm++n
z+kk78f972jwy992B8/f3Jrg/UWLy7VyvuVD3of1M1/7yd9lj0f48cD5yrnp
877L4/vkkpfPfsz7tDdo7/6KmzNBtzfOT/B+nbrQRRLvO1//EesjbPch2bkC
+fTcdjX9zgdrhMX5Bk2zPq8aE3yxPvLXJxbw8p0x78+bZ5KSkqJkmf+jy3dz
Wb+fIunZz7mfHD7r+5V1WcT7T366ldvH+H7M++NxgGp3wfuhHGl96ub6GVdn
t+16Nrx8Mxq7PHlxayo2VbxfxrCoSe6ZNgrxPpweY0unb+V3lkdi+SLeL5PP
+/BK6PyM/aZmw/po0Xjf+d0uaP79Lq+J8i7afIxdXR/lVfK/X0TexxccPT0q
H/fIf4e29/Xb+862DetrXiumnt48lc2xZLb0In87mF82/curXzrOh+9lw+d4
xfu8Is6F6sooTlW8D98/2L4cvG/9/P6T90ncHDXrkN8PdRXwMULkjIDlY88N
/9+8cdatw79f65xj/zjvHD3OeD+U9yMpKelYyvG+eN7M000846PY+wlbv8nH
1bQOI/4t3x9ddBLz21q9V2rmW2kralfi19N2PZb3Fadsf69ieytr8y/aHnPv
MfPvyg8Zk59t2jZ65OzwNncm74vWoxw6srs19bFHluXRi5+yuRKNBez4o6/a
8iEtGu+jsX0/zK2zUh3eqMsmsbzPeZDtc1b1D2Z57uC8S0ufRS2rXPL/690j
x7/Y9/vOK9RW8rWzvA/X+34s2OvVBoj3Hz7bHvlyHuU59sX5LM8rNXU5h3rl
XDJ+Yq5EvF91XZqOk8T7VcvJt6hsLovxG3b+2HFCaF223aQ//9jE56bcmklJ
x1yW24v88YaMn/v/WPu/5gRG/8O3v6qvKbON0Z6HWLfPGlNF6oL3J/2WTk4d
R1HOTcvR4uQL97/Lmd/n3rp9jXKmKq902bJFvB/a3/++d8rFHdjlbc5MjRP4
/qWri9SevTg3Id6fpbqIb+Aaxo7XYhTi/a7iYmKPp2qZLsdjyqkYWm8V7yv/
oHKRHDfhaxLKue/n6BHr+7zfZa2mWCm3jl8HN3RtbK5T4r/xpxHva99ZbvnB
uD11tu6X93PeP3h4zYmcOE63Lw1u3DjlGN/yPu0drM8+sa3QnEcTti/6j82p
XybxvsY+Retz+SiGx5bFbBevD7t9lR+cy9E3svUl235S0gcgO08n2735Tb9P
+P+M5gAc/5vx/xfXMpb/MVArh/YYP5Yq3oeJVS+3jPer2qo2Wlo5P3jzcs+p
zXpoe20NgtBx2JydsfJ5v66Y24bLm/C++pmifbO8b8czdXPix0rb0BxCk3mD
tuqC97ueixDvq1YwvtqhuLx5qivfEeLeFQODTz9xtfYe4DwoB39oHqor3lcN
5ez9bHxjuPeKeH/qnhi2vbSb8j/nePk8D97HB7+K9XVOdR41n1O03Lm1T5wc
u1/6eiLeVbyP8HtC2MHxf8n9aX7azXmfdap2r7+PxfUmi38rH9MU/6b6Vxqn
uZi0kvbNXkuO25+bsOff367tC9jfnPeLYvuSkpKOjXLfHdn1bY4tUzcj18hf
X7Z9+f67Wr0r9519H8H7obYc3id+tqidU1ulOpm+vRZWkV+M8zsdrquPuein
R9vOh5/8nG3XxTFbHl73csgj/WZjYKtUL+/y5Gfxvvi4bF2W9+16dN6L6gTw
m+X9JnM0rDtmnODn51dth67viyJ14c/ThPer8tLAufBCno/9Fz8ubzbnp2z/
m/CRL+qlcX9RL9e1O6Oc+Pq9KAd/1+J8sn3swnAitWn78inj+q5fPZnn33wX
2R749v55sD4S75flf5Jvie4RjtPyu+X5Czc/n+B9G+N6f/++Ux7zOuJ91qna
ypw/OJ+8OHYf8Gmpyl0Zo7Jntay+s65R07yoxPfShlddZ9kFdN4Pfjya4ILE
+klJx1uF/niW+wPPuXg/HwOMvne8v/rAsT+iRpdto2hHsHfD69jgJtollxP4
gVtGvI9/5WSbOeZ9y5ZFbIctpE1/Flv/sEzifThf++3OxYi9fBs47BrKyyMt
PRjXNOC/vv9MlVS7V342jDHKfJqrWLaM961ieZ9YU9mgY3kfqZYa56MJ79Of
lvW7ZVpE/33x/vsSf54+eb8sfuL9uzHH9cX7E+safp5FTlmf9/s8v4xhzpz6
h8Hqyplabdy8+D5GYnfmKuBu2l/lqdermL8of40vO54I3VM883xv8+PY69mE
9+v696vdmewrx2OxNtcM3if2l7FMWZyAzYnB+fju+4djW2Dy3U9KOvYqe4Zz
pg/59Jf5+pt4AOubqPZOvuPwflnOA9ofMTLzzkWsH+J9m9+zLe934ccv3tKx
u+McMYm+82Nzq3L1yK+/Lu+r9pg9b0W8H5NXnv9yDD73Nz1XlvfrrMvyvt7X
8esp4/335veQPXJW9YdrXedI3n8e8L2rc85izmEd/tHzX4eVq+a6yni/ad70
KvVdm9jy/rzusbqC4clv6XLLm/fu1djqYXu4m+fK5ptHIaavug6l98bfxryP
aO8sFyvXfxfHX3RPcZ80HR/aMXPR+l8ZnyW4nzq/MfvnmJ++PNn3k5KOvfwY
HGzyE8tYPx77/ejzxysFbcCo5t4n6zuD1Z3HebzV+1G9csWvYs8vasfEbG5s
YPxqYVTy3vi5LvVdKJc/YwTq/dZpR395/cj1N7vG3lPUV8SuU8culhdv+zGv
KManB8YW98tvo7LPGbIPUm66smWb2K3bxstm8wBj+778nGL++6OLAc7e18n1
GSPft8CqS97vyv8jNv9+p7Vse+Jb1vvwh2xs0rT+l3+NZIvoi/f71qvnD5wv
D9e5r23UuZ7iZdnI8RtX3aic5w3nu9yTP94P8ju+Npb3Z3VO2UfxvuZ2OQfy
da+ar6paf1V/ERu7q236923VPnBc+C0R2xCK5/1k2J8j8m9e3bk7+Hhtf8wJ
PgMkJSUdHykWV3456xnvn7iykS8z4ctvvnP/Wc94n+WJ63GxPVq3rbE9fMXP
x9oWLfPb9ubx8+yVHPM2P731BcFe77O+7x/vf8f2UHE7nM0B0BbC9wj//TLb
UV3fD8Vb+TZ6/7uYHPxFy/nxVsH5kxHrx8Q9NOH9uvMNRX0ZrzYPUNt1dqEi
/xP/PLVh6Fnw/qxyrOsZUf3RLs6Hv57YY9E10nNRlQeJfWeMsWj1Za2ur3wz
uDvi0j6uKedac3yqsw3T6739bHmfuFflk1dMbO5fM+J8y/v+9Xb668FUbe9Z
3LeMNbCBi/fXVs4M1rf+PHHftdmPUPyvr8yXp3pdVfshnyByMek78f7trUvu
uM5uZXyPxPvqt9WHJ95PSvow5Nv4qZtlf7N5+bWsYnS1/Mbm2uD0lbXxerXM
aL3wvurvijXF+9YmqzZ1shbVScf3mguwNWP8Or3Syt63uQ83/F/G+lonsb9w
vo3RrVPvJEZ2zsLyvh+nK5aPZX/fx4dz2kWtTMux87B3Lhrvx5ynpuqyXgCs
vwj1dReR9+teD3zx4X60SDb/w0dbgzVy0OyW510MydZxLdOl5ZMTvJ/ZRY6c
1A7Dj0j+IspzI96vs18h+3ZRvoCia9/VmIDc+7C+eP+PF89F7X8X287yaHWz
rqKYbPF+cP7eys/Zl5SUdGyV876JzZn6TcubXD2y8aMp3vf/S/6ekW8PbY1l
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
/t1fx9fQ3y+/hlh95j8a9qnT/bv8jxclhvdD4X1iGHUv2mvMdXR+6QFflVi/
Z+Up6fu4Y3lfdmMtT1vDmDuLMzhyx4t2nuzkfjrWljCPPPzy3a/iffnDi5XZ
7za8b/PjhI6bcxZ6xtser83FzzHs3gvn6fGveWhMWuUD1OZ+e/ZvOy43/8Mn
d526vu7Of2jnKM/rD+/XjY0m337eB1f10UlJSUmSmD/0W1n+HlOri3UwNzBu
0yZ5X7Zo8f4Vw77k5rTL0/bhz8M26vj03Nsu9+Hx4wU2Dpr7s2suYrJfejTR
ZuMHbHnf7z+LxgBNeF/btXZ+P6f/udWPc74X74eYXusM/WavZRdjFLudrvvV
puqa97uwRWIHxUet6f9l34eB531+i0RO3ztHcfn9JXxCOK4q3kf7/7bpeP/6
X/7itvP0xXz9ylZXzji9L6h1JcH6fp78q+bZjalFYkWe4rKYAc4ZNn37fHcx
Fvfz8cP6sXl6dH37HpexfsbJCBt6TA3eptvBd5U8nl9vHk3k+qw6RvqVT1Z2
nFw/nPx5kpKSamgiR79i/S3Ph/5nbPvK0eO3TfD9zcOrI77OfPaxs6/sfVvI
+1n7PrZpxbah5N6E+YvaSJ9R2/I+x+Ln7WA7fMcroi+GhUO28SJ7P31r7Py5
JM4JsXiI98ukvj1kQwzlBuE4uuB9xSKjJvUWutKi8j7xnXv3Vno/fvFY3dz1
MeeA+Z3Xb3c7yXfDOuyclRXtDvcQ22Js69QR77e9ntTR3bp+1om8+1XnWLxv
mZ/jYX5UPpF1tl/lN//e1cSb5P0+/GcWlfdtPS32j/PVdX0wf5uwPzq1dVR5
jOzb5t7Dsf9Omb0uKSkpKaQQ78csv575/of4gH5CvK/6WwhePni+kfcn+Pv4
fVwof3OZ3rzcC/K+6vg29zuf7nsQTOH/Jt7nPcyuWsM//nx3avtLD74dnLu7
PLhw/7sg78PRdbmXfSqaNzh98R8rWd/yPvuQnaNJNsPX3o4r2vI+srW4xGd9
9utl6jOPURtu+uXN4eBg93owDoN77tnR99PfN+Cj48L7bs6jpo/T+9G50rnR
+ZmlPw+8L+Zvek9Y3o+93tpOzP1Nm2XnEOw+4oNSZ59D9SiYQ6Btix1baw7E
P76ur5t8bCzvk8+IZ46Yhz5zb8L7J7eqn7mc9wP9cFJSUlItXd2Ji/0xdgV4
X3zu1xe95fLtj3kS3of10fqI8/C1ic3pXSR4f3trui+zcwld8H5dYdsX74vD
eYX3xf1Ftn7rXxMr34+nDu8X5QK1Eu8rD7v+68f71pXGKbO4JmVaRP99NCve
j1Vdn2Pig6kdyzhyXrw/tY63Y7abxTXkGqGL5z518zV81yVDlh2Hfou5v619
5ML9s3l9KdWVbcr7rh7ssM1nLME87+2N852e36Lj9+M14td3mPP+zfXvnPqy
9VfFxKhmBDW2Pl7bn+yv580MSUlJH7bE+6McPzD/6s7jqfw82KJ83idO1ubg
x6e/De/v795wWltV/NuYJ7rg/bp9sl3e+vKE2L6M9+vk2ZN8n53lBxnrl/E+
/4nxA5YdntdQXF/bPm8ReL8v+35XXAfzyx8EDtlcPT3YunZmsH71pHutm8+9
7n7asXwd+79Yhnua8W/b89CG99nvNozf5FpeufCF43z0okb+F3zJQ7Wr6sjO
ZcTe38wVMjaj/YYzq/I5hc6JnytTvE9bwbq5f9G7mj5Jda9LU94f/z+rUybm
72Jfy/Y9dBxfbhwNTmzsTdS9iZqHT0pKSmop5QFTHV7ei/fVRr1989BpzIQn
nd87v8H4sD+vqAnbWm3dOefs+5mNf8z7IZ92+Ym37U+wg+GLhJhzlt+9XQ5b
Jt8rdrdKsDe5RDrj/ftfRdn2Y+YS/P0kJtLm+emjH5y1Fp33Eaz74oe7Tnx+
NRzj8t2TR5sTcb2x28Q3vAm7NxE+b9SubXzso/18/XKncd2otrwPO/rzmGXL
k1+J/JsI7q8zJqvD+7QzGov71wvB1UV5eX2J92Pvh9A58Bkbm4LlfTeeeLA2
YTNvm1+n6LeqPP0xWrt6ojfeLxP5fHLep/+1efVK8mUnJSUldSLF65IfYMT7
n3/z1eDzz/6fwUf/9H/m2ty74LS0+YWzv6OLFz/Neb/LdhHW1zb0XRHvN+1P
fn79IP9Mv2r99VEZo5fxNvsEc4v3m54Df72xvB/jj1PE+y9/vuvU9vpx/KG4
iFlqnONxfvtQpTJWxU+EMcv3G+cHB7vXota3iLxftA3q2vEbY5wy3hfjku8n
5PcNR9fJBVSlkJ+6BO+L+evyPrGzsbVDWHbrcJrntV/i/Vjm7+N+2Dg4PzEf
GOL994H3/vbqjgtianNVH+fhYHX4fN273X0tF+xFzH9oLkHHz7P52fXdcW4M
+t5AHu2kpKSk3kTbI1//UczQydVVFzP79GBrgvk/+ejfu3EAEu+fOPEf8++0
3EQf+XLPrWfvwarLqR/bblJry362vL87ytHnxwe36cfy+L8In+RXr//iVMb7
bec5Qjl42vI+XM9Yxv9PW98RK+pwsc4/H3Tr01vnmvIbOVPU13a53Vn5aTfh
ffatin3tNsuOpStf+BjeJ19RTHxjn3GW/j5rv7VfbFsxuuTbp02rs07xccw4
GN7H/6YoZ49qEsLYszgfvmQTwX9fMbjsz979cd6p2Hq4Zb47oe9ZHuavG3/g
6+nhlrPz9+XHr3tIdcvg/Zzr/ZwaifeTkpJmIXH+6PPH1zKJ91Xf1ra/X/7h
PzjB+me/+yfH/ciODewYgVfxvsYJ/O/0yb936wj1Z9+bGDD52mCTR9gW67a9
fbTpNh+N5W3Uhvf9Glp17PtI+dlV/+rdu333XRHvd+lvr/3um/erJH+erhmx
iU2yiaiZhq8L9mR4+MbKt86vXz7/PB+M0/QeW+/1lW/cf+oeT+h71Vhtcn6s
/0dRfiD4x8UuRvL+LBW6xowfEX77TfyPfn694zj+54g5P+zCZbyPyDMDs87r
HNGObJhnnH0u86Er8pkq8h8q4/2uck7x/Lj4kduXWsXwFrUHOo7v//Uoi80d
cX1eSzdxflJS0qzl8X4TPobh8cO5t70yePb0X4btaNZXWfZnDkDjBFhfvK/5
AcYGfLey/Adn95tXXxYSPqu+7d/GvSpfqBi7Tj5tv78I2fYVrxsbO4DdTfsG
79t4h9A4pavzpH0/eP7nuV4vyx5lPhp1NSveD27b3H+vnj9wnP9kf8N9dux/
jZrUt90YYfy/o4Gfi9VK+eD9Y8JnQrV96+Zx2dh/PPG5bPnnP9wd7N9fm+u9
UnQc/nf37m0M7m43q51Qh/djhC29qqZv1+cCHyOkNmPDG9PbnEF+zamqGAn7
fVVMbpc5ZiXy9zCW47WrdVJz97Ord6e4Puf9eff7SUlJvz15uX+J1+27D4Hr
L5z758GlS1/mrM9cAlo03leu/pCvD4wfyoljeT82V4rUJe/rsx/v4G+jq3Ml
vyt8mpQXhPezrr1VlK8wpvblvFW0f5ZxFo33NQ+hbTE/wdwDtvDJ/ZkU+/vo
weLWC9bxoza837VmyftIPjxjv8Xp2AGeOb/mYuhc+ue1zn4ol2gXcbu+8O9p
GxNha+zmvK9+NuXiSUpKmrcCtT6oDz6rvkR2ffkOLaqa5Bunf4Kb6tijQr48
dfx5irRm4qr74n3kb3cevB/yLRBbfAi8H7zXXu4MHty+7GJJ+Yw/nvMBGsnm
uIXBYXLew7CKd1BNaWrY2lqwVWrK++zj4d786rLFinOH3/7FC591UnegnbKa
xF3G3VTljUfi/bWC/Azwfgzz+9vV+3k/l/D+hTMfFe5fzDG8/evofvlpd/D1
2p28bj19avLhSUpKmrtMjh59Nwvel8+neH+ebX3dvqlPFfnud8n78jsq679r
9ZUBHyFfs6y3G7LvH3fej9EvQ7Ym1lf5W/j8y4jF9R0czjLMB/D88bq6csbp
/LU/Op049cXg7s6kfzicu7N9xc0rMH4gZyhSbPHtrUuj9Z7J9wGev7H2baFv
96LzPmMopJz7bWuDtb0vsrjlo6h6W3X9sMLbzPLM2Oe7rL1g3qGLGNg3Nf11
umib8eWB91Edvx7FFHBtxPtTXJ9ic5OSkhZBXsyu1Ka2SUg/mtwhR8M+Xryv
3D68EgfQV86EWagLllS8rvpY8X7Iz6eu+tpvn/dVB8B+97d33dkjyyQ747zv
hbJzXXa+YQfy17TZRihuF5s79nbVh4XbmQuQrf8vD+84Wz96enQ7iw0ejgV+
enbX/Y/lmT+A0ck1++zolhP/h3OK2gvGCbomxBTzf80t8J56A3Z5+InjR7Hz
Ym3u36rrId6nrerSpt5kP3WOY/xO6tqmi3TVtDu+z74vlzfo/nrr2ljuvHfc
/8Tq7Kn/Es37yhvlcvG8OXR1cz9ZyZTnuZYPT0y9+6SkpKS+FeD9x8/7a1Ph
fYnP+PIod8+i8n4bpiBfT2y9AHL2qb6XGF+8b/Xf9+rzfx/Hhuw22H+kzz+8
utOq7nJdzYr1+5rvCeXRr+3n3BPvsx5YP1RbN4bN4Xu4Ge6nlrCNQZCUjwve
j82t3+ecDYzP3Me8ed8qhvfxce/ivOg5Jt64+jpkNhzu4b54v+95Vp4J8h9N
H9tkntb378a8/+2to4zx/X5VvD/v/j0pKSlppN8t35z4TJ6eurxva1iV6e3P
Dwe7Q37w66/D+19/9f/leTzJ2bnbsPZmH6rbdz74Yc1xEX4sSLGzsf/3eV95
Nif6ppo2/9B2iC9QbGbtc+LVKQtt80PlfdQHe3TB+zHCN8f60ijW0G4LvsUf
B94ntpbvuuB9xhcwP3ZzfH/wk3E+QsNX9gnp3ppXPiSJHEIud0tJHMKsVVU/
Wuesbu5iX3bcXpf3532OmoqxLsx/Y3h/Bn8fPZ/EDfPMnL195Hgf5X3oyH8n
+fAkJSUtnGiTvLycy3fjffhp5+vwPvW0fN6367r8568Gn379f8+F97uq7ePs
P293nR+L+sw6vC8R63ryj38X5PUueL/LvhkOjJ1TaKui8VcXvD9vxvT3Rfnq
57nvXeY2qsP7qls0r/PPGOXC6Y8GZ079Qz7m6UPk9IoZF9Nubm2U2/e7vAfI
IaocZTHLr64tdZMfv2AdfT+b4n1y8itGZeL3F+NnAd05euw0wfXJfycpKWmR
FbBDELdblfsMPsdfpU6NKepvFfE+Eu8rdz95+qnXRV5/5fbvU131KeJ9/Nmx
9yPlq4mptenO75B7bl7/b85+Hvo9JlYWdVlXq0jwPno51Cxt+vZ6LbLvfn5N
e87jX4fL583T+7sbjvlhLOIDENdQNWznvX8u5nj9rPM/6nM7Nrc9PvPMCYbu
EVej7H7dvKCzyynEWOT1m27nQuy806zG4vA+snn52TZ5NsX6N/cfO32xvpv3
mclfPykpaaGl/DyBWrt95DqG978/upjXY7c6eL7hpL7v7MpHOfvPgvW7lFhc
tjGYG8nPPWYdVbyPGD+08d8/7rIM0DaHduX16NDO7ecjLFtvHc7pk/fr1JJr
ch4QPv3i/brH07WIRZ4F79MewPno+qOzwbYRiffjmP9oUFWDoWvh+6X9K2P0
mPu5Tm7PPuTX4SJvEP3h8r0jJ+z68H7ejwZyWyclJSUtnLy2Srzfddwu8bho
afMLF8Pqt/v4Bfmcam395PGhJhf93ixrzpTpZUHdTPnbyLYOK/k2d+UqKezz
fjmaYlibC5v3Id73fX3w/w/FAHShJn5Kfek42PeD17lD3o/hd5bBNwF75bx5
H+FHR3wugvV93p+Xj5U7T0e3HfcxF9HXdhTnXrXc08Mtp1BMaUg2v05X9X1D
0vWB9xG28arly66pcoHOm/mZdyLWhfdvRn77Ev3jlB/PvPvxpKSkpCoF2qqz
t7urtQuTwvcr2ycd6xfxPu17kX36/M1PByf++J8G//zJ/1XK+swPzLJPgPdh
dz8Hj7jc8j7+PPaYbhycK+7zhqyvfIb2e3ynLO9rXfoe+6A/DgixftscGi9H
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
V5THG4j38Q/uqj6vbNv2u2c/T9fDwR+fvqzINsvcgOpvzZr3dX0s77M/XbCx
rTfQN/P3ZfvsMi9PjGL5vGodRd/b395H+ITVYdqYc8exheID6vA+/myz8qd5
/XJncOH0R67d4DNzeTHsGjo3ir3BRlE3jwA57Q8eXpvZfdhG74iluHqiEe/P
usZCmW4dPHaS776z7SfeT0pK+hDk8T6s3yXvW4b3ed//3rK+xgJZfv2TtXM9
wPeIPvsLY+u/eOGzVscln319hvV93lduojLeFQfAX2L9Mt7v004Nd4XGLE1l
/fz72ueqWM426pr3/WtXOtdTst1YJtK8gF0fr/68XdP5j+k62c3OF/c+tnRq
btl1h/ivC96PzbdkeZ/3seeEOZrdp5Ntp18HL2a8JYn3sZt3dS/2JeYiLi2f
dMeoeF3Nb5T9T/fOovA++uz6bh7blnx5kpKSPggF7Puwfmzbq3xvoe/Ju4lC
PC/eL2N+afuwmxox+PKL958d3ar1X+UXvT7KHWp5X3lzELn4YXe4BOYt4n2+
l48A/WOXtv0mNnV4v8v83Jb3/foFXalP3kf4oXTFIHXWcxx5319Pk/z7IRZ/
X7D+WYi40/NnPonmfRTKRUpeyqa8L9Y/Dry/urbkfI9cXNCoX4idz9A86LyP
Qcp5X3498+6nk5KSktpIrB9oz2K4YuPgTxO1s3xtHW6Ucrx8+Iv08fr+4Oz2
I6cu2nB4n3yXJ0/8p9zWjw3v0YPqXD7i/BDvw7bYsOjnFAMr3i/KW8M5s7zP
8vduXezkOOvyvnyJuq7Hc8PkWeIYu47rDeUln1fN3CoW7dN2WVYrzH4ui/mN
YenQMty31GvoivcZY9l1aT34As2a92kvsA2s3TwzePX6L4V5tapEzKr1SYT/
fy6oaefrwfZlp9j6uv71ir0OXMe251e8P8tr1LUYDy/f2Zuop5t4Pykp6YOQ
2jOvTaPeblXM7pUhz+JrU2TDoX6Un5vHsjya+u7a5P7B+uTsQF1yHH03uXDK
eD/zR8r8Ua57NcEy3p/s/+kzy8Y/kpax62NsMCv7/pQvxoj3u4zZlfxz1uWY
Ypa8X7XOLli06X7P2hei7rFadg9dnzLeR8oJ1PY8NRFtxPL5rxqzPiL3fZt6
FbQLTeoHznrsiy/PrLbVp1ydrVGfSE3duffRSUlJSV3Jq7klwd4394v9+JUr
p4r3xfYoX7c+F2zbF+OPrzePnJbvts9BL94/c+ofBh//879ztn7s/mdWfucE
m4r3ic1lDh6/FHFrKAcn64yph4XPTyh/fSzvE5Pw9Oi2U5Nj93nt+dPbg407
3zlhn2P8s3dvZbB/fy1X0/NsayyL94nnjRkXVcnn/S78UgrvlxbxqzG/+/tU
l9Vg4qLxeZ0cQXqPH3oRn9c9z9a3KCTxftH+zJP3aR/q+POEZHmf55x41qs1
6nc1tQPMep4L3p/X/FqXcryPL8/KXmE+i6SkpKRjKbVpgdpbVbxPH/bkRbEv
/J2jx1M2+wl52yyTWB91URPMamfItKfP/Gfn5yOWVx+NbZ9l4Bz5qGgZ+N7G
uVKvqsoWqPw12PQR44imvD8huMn/HOAoxhs27hE/ZfIOwv1OP9yd4n1f/M64
APFZ7/25Esv74p2M89uP2WJ998v4tIpdre97V/7FMXMFx4H3Q/V6i3L+l+Wp
Ct2n8uVnnOD/bxZ+3ge711w+zj55P/b/xyX//vLKktPjp93EW81K1NjSeJR7
6/Nr++N+KfF+UlLSh6aC2CQYu6idVB1cXsu4CTYv3Xakjd9XF3Z+yfL+P/zn
/23w0ef/r9PJP/7dYPn+V7mPzI1A7V+YHfv/u3f7Lm9fiPdzn4bhb5o3EOsj
5hBWNk5E7atyDZXJ8r4v8qHoPXwO19xY+TZnffRiJOU4Qv5vGh/4vG/FHMq5
1Y+deF+0XJNr1gXvI2t7rspx34X6WGeI9cu42LK8X9sN4S9PDnu/BpdVXd4v
GjMd7t1wqnvd+vTnJ5bm4rlPndquy9XRe3q1cW7akN/aogrePy7jE0m8v3zv
aHBiY29s16efSf77SUlJH6q8tg3bfKiNxC8DHTzfnAvvd+XXExI8fPbMP+Xs
bHmf98jm2JPE+1V+KuJ92diVz//0xX+M8m+H96+vfDP1fdUYICTL+3XsmJb3
JzT6fm371OD8zU9yMbbQeIHfi7g/RhpffL9xfu6sUKbj4tcQenb5Dh8apFhZ
y+uqD+bH6IbGAIjxCAqdkyLeL4pLUFy8zQEVqlcde6yh7TL+JzdPX/W56+i2
uc/xkZz3/pQJO8Nx5H3msXPepw8c9kkfXb6T/PeTkpI+XBnel798UTsJ66Mq
RoURKrdbk/nL9qsrydYviZH1nlef+bHfy8ZvVbQN2AJ/IeYRUIxPr+qHNT0m
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
PZ7l5L086lxf+q6zsPpDxp9L2q55X3LlwPOojPf9Nrj9dZkS/20dn77r5XKs
Gv9bRZIfXnLIhPzg6BtCPij+uYnV2vJMZ+Huxc7d+a+cbt875/iYWr4xPB8j
tpXXZndMxPY+Wkzje5kPQK+PNzO8XzbmEF8n8ctfeHil8+3N/+izvujy/3bb
Y+5Bt0vuB/xOyQPh8kuoHPzOp8d432QyNSwY9tTifkZjbUOgjrjwfijnQdEY
ANXm/chzNam8j2L9nXnfi12q7TYXCTYT/9cY3h9bu7x7YBwcjm2/LXv9MCrj
wiI/Gs3mVc9xLO8Lux4fbrg8PaHnm+eKZ4b5I+z7xGZKzn3J21PkQ+/zPqzf
qzdxmNkHzC9+LsPW8sprC+MSP2dkiPfhYTg4b9v9msgH7niE230/G5HwPhrV
vUZ7Jf+N9vnZfjCX9nfw/qP9R+56U6sL3udYsb8zxhG7fcyYQxgeO0voXSW8
T/8VuieE97m3Tyl7k/G+yWQahU7ff5rK5/6xsX8gXvfCWrgPzZNmfvyB2EZl
7o/oY7HFjOp9NaykPmnRMjAL9krefcfP153abneehPelNsDznaXW2yTv6nHv
c1p5HxXZg0M1uJrW7sue3wQ8LfLblsf7oXbTx0i/w7MEn/Pc5R2jPn6x7fd5
v3kfwd+6bfkt0A/4+YREzEn4OYDE7l22L837w7Y75PtURbRXmF+3j3Mutnik
eb/aPsLXK4/3GTNwbkK8f+/pYXrfC++fXdzpvw8D70STyWSqK836eRpLWwK+
NF+t4M96qRLzZ2wrG2v1eL+E+dlm3fqj45DP+zp+UeJ6kfB+2+2NEb7Okq+T
v223J0+TPPfTpsaV+zPPb599r+y/SOqL9ZgN1iIX5MaLWz3bendMAO9vPe0/
E3k5b8Wu4Nfa+l3tL+++YL3lxRmX97+ZY+2ply/0wCnE+37t15D08rG8f//2
JWfHRuO8p+o+a9S5GsW96J/LMrvL858OXVvkfkEp71ueHpPJ1LBCfP/l8pO+
vX+pho28jsSnx/t+7LwvbSlZZpJ534/D0zlCNO/DB9s/3nLMPwn1Kct07qs/
Oomtf1rGKkWaFn/8Mokve9vjHZ0b3xdtI2fO06OnqY7fPHe+ObLM0csdZ4+V
5yHvOZd4V+3XH8v7zK8trF51sbo6XjdW1L4jNlT7yvAc8x3Cd+XWjTMZGzfS
vC85OCVmFun6ugjez7N/6+NhOfG5G2d+nDr3GvMbwuGjZv4Y3ve/m1l/ank5
TSbTSOSz/pWNu52L62sZ3h9be6TOrrKvs/+eH3897r/8oOL8BKwfwfvT5Fch
bRV7oPj8MAdNvS1qbcELbbczRsL6TfN+25w6akkumVFtG9s4avM8wt9VeJ/P
ofYSJ4LevNxKx2N3khyS+NTD9Tq/Dd9JrvWY3P8ufnP+amd9acZJ+5mL37v+
3/8txPv9/Rz02hvI/0h7Jc++5n3tD6mXl1jWsuMRvXrxoDN79W8jq9Ml8RH9
MfJhFLNjQ0dbR6sp75flJqoj2kIsBGI/RfWl83LGLuzsZeJ22+YDk8l0cqRZ
H84XtcL7yON9kYvfrcH7t5/Odr7drFifvIT5JWdyW1xTVX0f0R7nC7vIO0/s
/G23M0bar0c0LW0/qRJ2GWauomyc0OQ4gjgIFMP78p3Y8Xlu8P/p14XtzSnw
HXMBPX+hknOV8L4wv873MqyE95mjKFuW9gufhngfX56d7UWnzHjl41FmHkM+
w/vs3/dVL/PJj/XXD9XBk+PNOxdybL5Gwfsxx1Q2PmFccmphv/8uRJaL32Qy
NSCf92cffZuN3x0376OC/JxV7fzC+5Xt/AV+/NTymvY6qTCK5n2YQ+cGnAbB
ZML85Otsuz0nTTG2U54BxpOjfh70toUxNXc2qYVbF5zIByvf+bwvzF/WVl/j
8N8iLqeI96l5hf0Z/x0kfaU/L6J5X3//5f3DzjcP8o49y/vkn0FwbGhO1B8L
3Nw+dMuHzmGI9/W4K3uen+Xyvu+3NMp7Nib2WyvlfXn/WNyuyWRqQCG//Yng
fZTjzw/3zz29Uon5RTe2V+KPpyRmd5J5X3gkz39UfB60jYvc0zF28kmrQ2W8
PzqdRN6XeYiiumXUmkY6ngUff56XMp9s3dYQ2/vf1TlnZcdclisH3kd+/4h/
j16OPgGRv1J/Tx8K84e2Lflo9Hfwe4jjJeaDuVLqTZGvRpYLnTu57oMM3W8L
xyA1vfKOs5dHaXx1E3Ud5rLrzbIXV/achPnNr8dkMg2rUKzu+dWN8cfqhiS8
H+DuuryPmuJ93knjel9UEUwC6/s5BzPv8fdPB/J2fny34xinrO7WsPnyRiHq
78L8+PS33ZaTIjhM18xqW8J5ItpH3n4dix4jXdM09PuHd3tOTdR6yK0p4Nfe
qmjzL+N9yTePQstj3w6xcCjugRgActLL/7C58H6I+Vke3n/7807K55rjOW5y
0Hyx0NX8Uyf+F8ad39pN89HLeeGv+FBy3YpyJUht4iLR79EmJGORUfpn6jrM
5X5rvfxKNx5t9t6Bxvsmk6kBxfB+220M1eFCF9Z2nb2+MvM/WXDrR+27wG9y
UutuSd3MqnU5Y3l/UjX7/f9xzH/18p9bb8tJEPbve08nc0yLhGGZW+jn2YxX
Hd6v44sTYvNheb9M8D75eVC41mw/Zp9+QuzhId5/+/aRqz0l/8PI9H+X1w+d
/OXXV250FuavpjGy2m5P7pnzSzt93l/YyfarSV6avyd56NHNh3sZ3i86V3I8
Rf0/x8o9g4T3hatpX9X7KFZVa2PvvtpM62853jcffpPJNIRO398vzLs/EbyP
CvwX69j4mR84t9yvIybzGAPHW9LHXlgb35xwrDTvi99OKB/5wLvy/X7nYC+c
12QaRPux7xvvNyOxoZct438H3xb5yjQt5iAudp9DcgNVXTfE4pLT8tXhjwO/
NcXlPu/Xze0baj/fSU2pfN7PijkSbOrkryFXqM49BO+fubvVObfSY2P89nUf
CM/r8yO8j/BDd77okv+gZM7Uca3M6cqy3b9sA+73/Xz88+bnG9LzFvzGfAbH
ipibSNslbVP/M9fQZM5l2n30uid97fJsRvC+n5vT7Pwmk2kYTQXv5/jyI+Jw
h+X9Xl2vCy6udyCXTwHzTzLvi8jFcyfJrV3E/dj3ifMjR2fM+GDSJLz/xak/
tN6Wk6Bp4f3//q0/F5EXuxnb/qNnaynvl61bJ47l99+ysQdNHHsRNxJvuzz/
dXA9cr/D+Njdv1za76nLwGt7u+478XHZOdrN5X3x68FOjm8VTH7u+vdueZTh
/WSeVrg1T/5yab/f3QZtFD8c2ubfn9j3pZYAgu9Xnl/P8L4cW8r7bFvGFpr/
u2IuoolrpH3O8uoz9K7hQeZzyvvJ+TY7v8lkaloTx/sokJtfBPNX8+m/5EQ9
LtaXOr7BvJ0l9XZvbk+WzwO++Rwj3A+7i4p4nxz8aH7lolt3GnkfnT/3R8vP
2ZBi/A/y7MvDxnRX9X1oivclLw/+PGXr1uV9+Zx3fFXPX88//oXzaQrlv7k5
f6az/2Sh/3/Cuz7vix35VKIMAyc5If15UPfZY+SB/lLs5orjc/tTlY9G8366
jiixvzPG0OdR4pHo68jLI9/97vyX+rmCOOaUm9n+7Yf9/cn3Ce9XidPKu27w
vozxQjmGROxLfy+5etL8nFaDy2QyfS7K4X00TM4e4X3+D/r2l8xDk8d7GL5p
WpJHRPP+r5+eO4WWJ++g5n3ifds+hrqSfD1vpzQOoQ1JHTb/ezhafE/q5tdv
KsZF5huK5hyKWDnPj17/H8v7TYxphrXvw/bk1GR87/M+tm/5/GD7+8697jHx
GX6UONvUluNxtLC+5IR0f7v97qkA06djA60cO36aRz7Cr0f3u+n6Oj8lv3W3
Q6wvtn7/3Ajvy70r9vwBHx55pyTbG/Cbmd/L8H7ZfJd/T9DvUtsMCe/3+uWD
zs0nV9LaB7vHvZpmmve1rd/l6lHtiz5/JpPJNM0K1B8hdhdVZX5YH7ENbPsw
P3MF8H9mbqNkDnVSeT92eXj/++XTTuIDNGl5N2P16vCB8f4IpPNYIs2r47hX
ZP91/PTz5PO+1LAtu3eaON4y/+28dRD9Df0ONYKZX5R+6NTSoZPP+1e/u5Dx
s9GM7+zH9HWa+33eX/R+9//3bPipTb6pPl9zuMfnMDzzFML2OqeUfJfxK5K2
J+0NtdO38zfhz89YCzu/5v3ZRzNOfGbbukYBvC99OMcnx50Z+7T9LjaZTKZR
K+DLL/PM1epxXcrMT/diAS4N8j7KYX7er+P2V25ax8/XO1fm/uJifFGZr/8k
S3jf4nab1UnnfeI/pK5u3vLa/37YfYfq08auA+9j07+2cZjbR4pf/bv3Twd4
X/zuM+uUMaRie8feygdG+92PvB6sZvSE98Wnn3MjzCw5gdL5DBVHkGlvYB9y
fJlluuuG/KWq3L9yvzHPKu8gYX7a6G9feJ/rnubj13b+tt/DJpPJNErp94r3
m9joq9j4tc++8D7fV6nHS34Q+usm8zmMU8eHG473r69+4TTNvI+I27Vc/M1K
x5nCJaOqbZsnsdU2xft+3SbxaVpfmsnU1fX3P6ocvFW4v4z3yZOJbzuxt1cX
VjO+N2LPH+D9pE919v/kf5/pM0p+a+MdkNq4VUyB8P5M0p+ndhzfhyhm7oEx
TcL7emwBcw/D/CLJhcp7Ruz8XI/DN+E+N8P76jis7q7JZDrx0r6i6nvYHZ+e
qrG7ehvY9lk/yPue/QvbPqw/7bxPXh7hfXyC0TjrTzYtq701HmGnrJNrZthx
QlP29Tzef328kVlWxjdN58kfVnm8Tz+0uP6D828/lTDx7A/3nf7vrfvuO7Hz
Z9b1eL8oXqpV6bYlYxlijsnXr3k/w8diE694TJr3Zdwgcb/DXDvmUeF8eQ/R
bngfcf38caXUH0ht/FKHaxKvj8lkMjWtQF8ndp3bT2ejed+P0XXxu08WBvdV
wPt1c4BPguB9/BiWn19LuWea7fvG+4Nqyg8lb9vj3GYTx+LzvqgO71cZB+h9
1q1frH3/aZvklMfuz1+f98WP5/2HAzeXd+r2Zp/r/f6z+5v7PEW8PxBzzByG
ij0eyL1TQQMxA2peYRhbv8/72PnR8v5skPflPnM5OqUdOo9R29fEZDKZRiWd
r8F7J8H68bzfy8kD48v6Qd5HOq9DV8L3vGeF+UfBU6MW+caJUSRPNb48bbdn
WEmOnrbb8blo3LwvEiaq62OjGV7GEHPXTrt4Fr0PnT89bzux+9Ntpf+o2vZe
vpli27Lzezra6szcvRfkfWfjF65XYll+43Pqv952P5/T92fy9hT4eGaYuGZc
QShOWHyimOOqc//R12re14L58+516nUxjhs4tkm9ViaTyVRHef21FyMm9bNi
Nb930/0NbbsoT4/u569tNMf64/KLJkbRxSkuXU1zkpDfL4axJlXPd5ac2rDx
z82eaWxbsfMr+F1N6lwM7RqlX9iwvI+wpcLdj3cfOi0vzrjctPzGOJ7Y5Lyx
vI5lqOPrw7ohG3HROMDnfdk3bT1+u5H6V3Fcn7p8v7a15vRo/5HL88LfPN53
8wFJfzcVviLaR6coD2gTx+HHI3f/at6nHhmKvReJK+Z66fcQfpS/fNgJ3tP6
f+KQT6l3UaPHaTKZTG1I2274v8g+4/0mNbhifPmF93WuHnRqcd/VHRvYT2Lf
0f76U8n7XR5A8HEM7+f5QEyiYH2Yn/HMuPYJ76OZq/8xVD5QGGL9YDa3XkL2
mkwu749DMfb3IgnvC/Mf/3zgGJ9t8pfvJc+lzsPFethaee5l/ar7FtaXuQV5
tiQHUt7x6trHPu/LNmi/q6f1cM/p4t01p0xOTq8PTXm/6Xyao5aK58qwfpP7
8PNhevXHELxP3PDvyf1R1FfKdWM+FWHv17zP+uKn5a9749Fm5/zalpO896Zi
fGYymUwhefmcC/O95cznVs3Hjw8Q67j+u8v6wvsZG3+3T726suWkeR/738qQ
MVyjzgEy8M5JWB/FLD8tvC/5ecbB+69fbjnGP3vmX9N9iuS7L079wf3FVwQt
3r3kagEzLtC+I6IqvD9qhWpcDTsebTqu/fhNT/73Ze2Ue1mO8dy176J5n23z
P8+8qMjO/+bnnc79x487M4trnRc/D9bz8nk/bwyj67PyWfZN/8N2fd5H+Hxj
08+z6w/I/MJzlebqFP958hR15Xxs7j5NeV9frzxffMkjKmzvPyMybvjwsXd/
S04seB99t72Uqadg18tkMk2TxL5UGC8W8lXMydlzZ+daJeZP7fwJ6zveX9zP
bBPWzzDfu6P0N/LkTQMTOwbpsiqxurHL17VjhiS+DKPIeSJ+SsL9o7J/a77n
86WLf0p/g+nh/VN//5eU+4X1y3i/DeXFwE4D7/s2b8QzKVwdOrbf1XrX5mad
5lbWumx1nHIV28N3RgSz6/V93ufZh7vF34Z43Gur204X7vU4Gy6E+dHC6g/B
81LE+6Hzx76x77Nfnk+eK/xFvnlw6FSJ9/GRuf2wtJ/+bJUwft57qZenrV8b
l7yb1EDw61XIvQfvk+uH692rY/0sU5OXa836jP2po0gdLsR6wvtfLOz034uj
rn9gMplMTcpj9ptbh50La4f93/JikwK/EYtb1c4vuTjh/K9WHjllmL/bn55d
2nfvd6RrXE4T7+O37+ciKRIsMewchmjUOQ6XF75xEuaHxav62OAfsfHi1kAM
s9jp4fztH28F5xBCvO/b/2WcMAn+OHkM//tvgz7mk1Z7uYz385aX/Db35q86
PXuy6JgfFofPv5zfcn/l89nFp+4zyxD3qrfF5zzeh+tPJXyYxlp2dXF+1Yk6
ueJ3j8idXzQmkt9k3/gVwfv4FsH3+HdL/kbs+/jxDOTeDEn84a1+a75Ubn7/
3EluIM6/XBuf97nf9PiTay28zxhNrrHM7WHXF97fOLrlRL/EdV3YX+nc213o
837iZ2R2fpPJNDXy+lJYP+V9seOHbBjaB0h9X8evR9bVvj38z/jBtUXtX/M+
asK3ZxyCb57v3K/MVm23u4pg8StX/70W7+NTI/fEk5cLvfd1dxua3fN4P0bU
dZJtsZ3//m3Ql/tzVN3xBNyLDR4Wh8/h9tByPu8jltcsXib4HfaXOF+5B5wf
/Zv+caA83k/7iy7zsw3X9je9sUroHOg8nPo+0bx/YXmvc35px9XZQvjuk5tT
6m4VHpexYrV3lPg9wf/C+13B+4jrA6vTf8jzHIrP5jvGcPA+6o8V+suwHQTv
4+vP8gs7e87Gz/yNy9NpvG8ymaZNCa+LTQq+xnbm/567rmefurG9UtmnR3Ly
04aL62ud0/f3nWLaH6qNPok66bwvfj3wflVbutQg+PBxL5f3z331x6HbiD+V
zh86Tt7390Hsb0/tXrdeXp96x4MNHnZ3/UaXx/1lfk/ui62n6248wLKiMt7/
262N3NyHrMv+ri+vd37YWOscPFvvrG6uOcn8wI2Fe47r2a9v59e8Xxa3wXLb
R2tO93aX3fLYHOh3hPeF+alBxffzW7tpvK74nGdsJond2vz2a76vkpz4kvd/
ZkNs/Aedn95tub/+dZR6dRL7jXjX+XFcUo/37dtHaWwv67jYjM2HPam8/Hb9
TCbTVEhy8iz2WFvmpV1tQVkmj/cD+fjZRlX7vuZ9vZ2B/RX4SU4D7x/trzjm
b7sd4xC8LswvtvRCdlS8L3Z+3rnME7ANGUsM2y7N+z+/2kz95cdRq1n28+nX
nc7uq8XSOmujHAeE/Lqq7g+7OHG1PJfwNHZ1fG8QrP38v7bcZxkPBIV9FK73
BQcX8H6s2Dd873+PfyDjAtoc4n3s9+JPhx3/9P0dp4uJLUT899m+qzfVlfM7
9Hj/8vphZ3lry0ly9mTaUpTL3hSWPl+JrUl4X66f88FJ/PJhf+5t4X2ZY5LY
XD5r3pdxgwje53uJx2YuIX3n2bUzmUzTpKS/grnxbZzZ6Mn/fUBqrIDOLe87
1eF9tHmwkx1nhPaXM0cOd0x6vV1s1VXidadZ8Oz11S9S23xebn54l7EBtYbR
nd3L6f1ATcxR1PIiv49sl/GExEWP2s5eh/dH0aa8OI5heB//GZj/7Nyy0+nb
G6lPje4rMnna5f8u16c1TBMfCV1bNc1XGVuDNjI3Om2nzYxJhAEPX79I43E1
7yNnT8avaHnPfQ/Xsy/N+2m7F3vzjvC+MD+sL/n4M3MbZiOu/L76643+GI55
khkvP3MvV+pB6pOzfnCj28/c83j/IK3p4PqiX7UO0mf27c87qe8P80Ga9y3W
2mQyTY3yaqXrZfxcnXpdtRw2+dnHt2rz/qt3m50Xr49y24p9LY2VCmjS6+3i
P/7jyvWJiBcdtagr4PO+SOpk8e7VPvu+Ln33b47J2Q583GT7mCugHdIeNI7r
0gS/D7uN2HGEy2leck7g3lMJB8fyvub4SrlNvBpPA3nF9HZj4l+xCxMr3OV3
hL1eYnB1LiDdL2red/b85Hhdnka1bc4FbZSxAOxPjhfj/QbUPV/wfsr8iQ+/
f2/6vL/y/Lqz8aMPH/u8L8+CjINheonl9esu9Oqv9ePJxCfLcvSYTKaJl8/w
Pvdrhd6valvC+3VZP5r3C97lbTJujD4n3pdrC69/9c3/GsiTA8/Pbp6N5n18
fVCT7Rw374fUVE3c2HFALO/HLAcDMc6G7+HeUP8ywOd1ed+XskP4NV6jGKzb
Dp0TCDs/LA/TS43fL+/tOPl+Rs62X8D7A+3s/r24sufmT13+nsTvXNphvF9d
6TnrnkfmhfPuUeF9/a7Rz4v8xZ8f1id3j+Qz8+9/+J99ufkc3Q7jfZPJNOny
3rkw+5fLTzI5cjLMr+esPeb/dvOhy7VTl/dlnjXkuy/+s1+tbGfthp54R68d
Ho8s7+QwwpcH7T9aaL0t4xB+r7d3LmWu85df/08nzf6h++Hq/F/T3/0xgcTy
NiHyeMq8A7k8Y2INRqk241AG44nDy+gaVPi9ODae9/LRCMO2lZ882X9I2r4R
4n3xT8rNTdb9n+OV9WLagj2fMcGAbV/6YPMBryZdk1jxvsTa6nhdYm7v7l52
ov/I3s/95YT3hfW1D78sIz55jN30O9HGayaTaeIVeB+TF4cc+DMPbxavq5j/
0r17ncuL/9m5MX+9c2vlXE8VeZ/+lNz/qLTdJQwxmTl7Dp3G6cOf5p9pyXbN
u1f77IR4H7bXnC+sL7Z37dMvohZOU20k/wqSvP1tzr9MG++f/+FpMB532Djb
xpQzT5n6FYWWL+P9kL+QN9fgx5QK7/vrWX6eekprcDkfq/20rwnxPvl6EO8Y
/Pr7fVP2fsaHh3hc4X36GLR9fNeNGXTdCZmrSf34zcZvMpmmQYH3l/A++vrH
JZcjE2H7l2Ww/59f3XDit+vbSW1d4X1PN9byfTeE9zN5QIs0lbzfy8k5rhw9
kmdxknhfC7u95v6/ffk/Mv4+kr8f3yB/nqBJ3nftVDWC4f4mcgFVuU69c9X+
/ekzPn7sehwgzIPPA7b9qeH9QP+RZ/NHzgaflztH+kvhe51HSGy9aj22ldr0
/bZMwjmaNklN4mRM9u2Pu6mvH747kpNT7llYHb3/0PcFFH98kTC+rsGFhPf5
6z8bqzq2w2z8JpNpWhTIq/n1P5YysbewvhZjgSsbd9P/U94PKeF90b2Vi6nm
Ny911h9ec31oNO+jEua/tjF5fvKwflO5JWM4Ep+aUeV5iRXMz/uWfDuwO/yv
xwDipy+cj7Y25wt5H5s/222sjS3y/iTL93EWPnK+7S4X5bNsH6Lt2233aTF9
R8JrLkdQnTZr3vfOQ+n2zI+nnlT+feH9o9eHjsnluX3/cafzm7L30//wV+Jv
8dsRCe9LDh7xK2UuQFg/xPvUc079etT40ez8JpNpohWw8Ysvf5EfDozPMjee
fO10y+OyPN3cPu+keR/Nb8714wbKFFGHftLq7vI+wke8bT/xNsU4ZOPFLacQ
78P6SK/D+9q/h/huFNcntmbAtCkUf1h6rby6o/cfP3bK+KCHfFimST7v383a
9nUtgGAsQMjfx48Z9uYTpmJMNKnS9baWeu8pzfu9+nkHjtURn91vCe9rpv+Q
+PQI68tv5Pdc3p/trD1by51LZD/Y+E+p6z/K6zpw/8TkoDKZTKaQvPe18D42
/CLex5dH/H5Q0fI+789ufpURtv8vFuPz6U0i7xf5zvBuIUfPKPYreeTxtWib
LcvOj+b9K3N/cblKy9aT5UV6zr5JiY2/7fPUtJrifc36J4k9gnk+dVxoUc7i
QL/k834mz8EEHO/UKsD79Hky/hfez7ufhevlf5n/5Du2g4T3/fUZLzAn0N9P
z8av7fyN874Xey73U3C8GVujwmQymQJzkdjb4fkifofxYX/+xvB+kVLeD8lv
X0m/Rk0d6Z/HJXgWX5Tf/vnMSb7Dl2dzfbazvjQzEn968bXAJ6pttow5R2hh
9Wq0LR072zh4X/Lyj2pc1pbIP1L1Gun8p493H2Z90RdPFu+n/YmO01X1s6JY
39+Wzkfqb89UT9qfp/uZHM1wN3UTivJy5sWfY8/HN0fq5/I93+0erwSXZ5ls
Ld5ejs40J3/DfvyZe0e+l8+BXLQD823mX2QymULKqVcD88fwfqEPf6SYLwi2
zX8X67oABccE82Pn7+VSG32O/uPn653l+W+6XH811db6jc7znfsj5X0E608D
73OOOA8odh2f95vOxS86qbwvvstVxH0K51OXyq+fZT4pplbkzb/A+9g5qIOF
rZ+6ZqiI/UXiuw/vo9hnxM9lpXk/On4jUtE5nHQMuSwf8i0zmUwmkfQbOi//
Yj9H57A8XyZihNlXKA9/UJH9qvC+9O2j4qrjw41MDh5YX3gf/9LPod5WkY72
Vzp3Zs+6ORCJyY0R9jkYX+LnRtnGSxf/5PLxt32uqqgovw/33KcPBwOc4q8j
9kry8sD5Lr98IPek8YOpNWm7NTWSNw4zvE9utnMrPebv3ePPCm0Dcs8zD1xn
TIxYN533SuxRjdj5A9uKfi/KuUq242oBSz1g2Xbb19JkMk2Gcnx7mrDhl4nY
3+h+LZQjOyDs/OTsubn9Iq2fyWfyCsb06bHvAnK5x+bcJH8OapsVx6m6vD9O
Mf9A/PA0xe2OmvctVtA0EfJ4/8ulfedjw/2NhPd79/JBri+/SPz3/Xz8VSR+
/AP5OYd9TnQsSM4yUe9Jz8ffxusmkymjwJwkfcu4eJ/YX2rqRrc3sv+C+/kL
6wvvx/TxVXh/+8Fc1LKwvviyt82L49L6/ZnOm5cPW29HmbDx49fz+nij9baU
SXiFz/69zL1FPdiF1R8cx+PbhmaX7nduLNxzvzMnRSzu2S47IWer9HJtGu+b
JkZ6/rn7F8YXPx6+w5df835PxfHqEv9U9xlkfgFl/Pgb4H33zFFvIDCPncf6
nA+Z68g7f6G6cK1fV5PJ1J6UL7/kQhiHT4+IvOtXN+dTRm9C/rb4n7w2RX05
nBQ7D4Cw78NQZcuRW35Y1pNaMW0zZ4zwZyKGQXNqm7UBijRtvC/nMTR2nVtZ
65y+vdE5O7fs8uYjmJ7/GQvwF5Fb8FTIFih8ZTZB0yRI27y5Z5f67Ktt+0ev
953KbPyub/rYr2/d8/2s9gzC+uT4od5vYzW4atj2hfN95e6jqN60yWT6fOTF
7ko93dlH346N+aN5vwaPSF9Yxsv4Z1at1/t06+5Y7PbTxPvEwH541/elnTTe
9+fz8en54tQfRr5fzgH5c5qKKxFbJbkF3TF178PVzbVMLVyeKeH/0HOfcr5x
gGkClclbkzA/35MTH+6u6pcjuXr4/OxVj9+rPncp7ysbfxXmT33sEz/7v95Y
rRT3K+dAMz//X1g7TOMbgutafWCTyRSaQ1zcHxnvU3f1lw87A99H+/VUZH58
+IWPyt4FVfv+cfH+NAgbOXq6eSfz/SSxfkiLdy855h/1fiaW99vuf0ymPOk5
pyQXP3wrvK+fharPTRXe9/MH/OeTo3BO/IjjEdaX+NqqOX7y7Pjw/uX1Qxfb
LN8NsH+F/J2VYoZNJtPkS+fyUjY+eB9h528iZw+ML5wvf5HUR2SZ//fjRqZt
sIoo0+aK9WyE98tUlffx50EHe8PF4tYZZ0yi8nh/0kUdMHx6iDkY9b6GudZ5
cYazmzuO8901eLnlfPYlhz7+PZnnRueKN7u+adLl5b3knoZnYf06/jgibPyy
jdDvxAb7c71PXt5LcwD9+ul5z8av2unYPfZYJCdP2TqeCv31uxLeZxzDZ8YA
QeYP5elYGlTr199kMjWrnBz3+pk/fb84N3+ZFvevpIzv962Sv4ZxQKX2RrIK
/eOoOBE92bjd2Vj5vhUGnCTBy2ja5jvGyfuj0PXl9R4HLfZs+9jzgzWzbm30
Gd843zQNEtu+rrfb5WyYVu7/uvOHeayP7Z/4AN4bMqZ49/5phvfRnUcHTvJM
xfB+2XxaHmeT+//H/+rVG3DxwiXrswzxzMxh8Dez3eRcGt+bTJ+pSuqHwPvY
+MmbX5f3C1kxsf8XxhxpVWD+Xl6H0danGob3T4LIbTlNeS19zVz9D8f8Mmcz
7v1Xjc2AQYgvR9jzeQ4kHtd/TqxmlmnalfrxJ7wvfuujehbhffYr+YD2f9p1
Nv33H7I5/pkD0Llsy44hhvfZJj56uqaY8L4sg6SNoW1wboT3GRtppnfxAioW
wmQyfYbybSne766/SGpyVfHtF/+dmL5W8uY3Hbs7qneDCB+WabNrN6Xf/vms
s3DrgvMlabstdcW1k1w9Vy//2Wlc+66TI1Dsjsb7ps9COtd90u+LH39jfcCv
vfiaS+tHmX3Dy+J3evjzeibfP2x+djGJO4vwjfd537era95nvzLPEHueZHus
I7EJbEf79FvMjslkSlXSZ1Xl/aK6hyGRNzOa9yOPKSY/T11pv57Pk/kPp573
RcQfwPxobvbMWPbJux2V5YbCb4F8sdSTw2cf4cMjnK/9d+Q5tpo7phOjgC9/
Hu/X8ZHEZ99nfSS8v/NqsbOwf8Vp4+hW8kweDvJ+wdhas7bMUQjT42vP8dAO
pBldj3Pku5A/jha8L3YB53fEepajx2Qy+Srpt4jjFZ6nbhbSjP/1P5Y6T14u
OFXpc2F9hJ2/KeaXmN9R+/Tsbc877m+bWcevw87ctdOdN8b7tSRxuDH1IeCC
a6vbaX79a3Oz2dw7fjxu2/2IydSg/FhzWFuzvfbJr8r8ebyPLw1cL7wvef97
+zjonCGvnI6BK3ruAr8L78PneXn08cHRCvnc6/WE9+H8zPaE961vMJlMWoEY
XhF+PRfX17psf8mxPvZ+sflTm5e6uT++uFmLf6Q2aHQ7K/j1NMH8ofcIrP+5
8j659u/Mnj0R9n1EHAIiR+e4mD9GMibQNv0L9zbTZ4B4XBeTa/G4phOstBZt
8ln823lGhuF9xByb88lfzPrE+M+h8D5zbhdX9pwq8b4Xu6t53zF8krvH53w5
5tg6vKldP1kv3Y7xvslk0pL+K4elhfdhe+J5EXZ/vh+G94kxQtH1div4K8D7
w+Q/pyYX8nMjwvnErKK2ubANEa9MLYK229GkiOGF+SfFR8t432Q6yObCSeJ3
Efk1xQ8G/s/LXxsj/GpCvI9vKnl6JB7t9+S5zPj0lL2PFO8Lew/kyZE4usD6
mTkOtUwM71uNXZPJVKiCOCQY3+9nUt4/nIuqcR5SMO9+WRsjl2W7xAQzhwD/
V7H5Yz+S94h+l2DbJg//sLn4p1XYw6ed9xmrHT1b61/rJE/nOGN3RcSaYGeU
HDyPdx929ndW0npamdhci8k1fW6Sd5KMbed7NnZ4X+J40TC1/ujr/Zian95t
JTkobqRxu5r38+JlQv71Yr/3ffBi/PFkbiCP39m+zHu475LzZL77JpMpShF2
dGJ5EXZ+8ndW9d8XiQ8/urZRwc5fMTZReD/WDsQ7gBwOqM9mz1yN1rc/PWqd
WdsSvD/tOUknifcR9xi++oh3tdTPOnftu8w9bDG5ps9RGXt1wvvC0sL7TT+T
wvtI19yV2lu0R+YbovLbJ/70fu6hyudgMbsP4X3GP+nyxvsmkylW2s5fkP9e
+h2YH5/+Ov0qdhVs8FIbd1THJHG8w/j1775a7Nx8dP6z5v1P7/entl4V2n4w
5+YnyLHEHA3Hg2B9mP/8uT+6WN42ziu6OL/aOdV97rDpn9I8EFHDx2Q6kfL9
4PHtUWwN6w5j38eO439HPk6dl4JlsBUxFpfc9i6eVtfeDSjokyO8X3TMXlxw
Xk5/8UXK8P7iYC5O5hicb5TZC0wmU0jiW1jiJyy8Ty6zqn0tfaiwPsLOH9W2
Gr6JelwRI/p8/Dglz6jwfq/e1GT4erehH1eut96GOiKvkPZF4vP60lUnbP7M
3eDHj079/V+cP/+4fPrLeN9Y3/S5K30GVM1YfPiH4X3y8cDyCN8d+Z7PkpNT
eJ+4gb9XeSZ9n50qY3bN+8l72PF6zrtYanZJuxiLCONnZHOEJpMpJOH9PKll
8e/Hl3//VbXcLcL7K2pOFht8VPsqxiti46/SNuF93e8jcrkgYUXUNsuOS+To
mZb6uvjDa/8t8ir5tnv+R8xZfOoeG3y/vPCNY35qDaBxtvnNzzuO9dPcm8m8
v/G+6XOXX3sXwfv48+jnnM+x/C++OvC98D5/tW2f9wDfV+J9HXegvouKo9U+
+DqeLvJ9p+ODfcn4w+J5TSZTlHJykZG78/KD6nkq6Z+Zl5R6RNE5Oiv2V/B+
lVpc1Atefn7N/UVSexFhC8YfRDP/Sed+WH9aeJ97inEjdavkO+IOfHv9pPC+
1N69sXAvUzvX3s0mU0+a9/kf3pc6Vrw3YHzJo/O7eq6Kn7uebZ8+Hc6nvlYe
77uYWOV3n+YOymtr3veRzO7b4YNxAaF1lT1/4D2txhLWt5hMpihpX5/kO+F9
nRu5qirl5K+Rj9D33+c9kdfeXz89d+8C31akef/jux0nWH9a/VxiJfWFYWB8
T9puT5F83of1Q7wvfjT8trk+68YzfI8v/9kz/+o06nYSs869hpxt/158HU+T
6bORnm9e7PM+OXPwq0f4tPBcxfI+oj9nHvf+s5lg3Xhy87A9/ORRaisfhvdL
3lvOPp/wvtTmiuX90PYZE2WW8Wz9Nn9oMplKFWCRM/cPKuXC8QWjoaj9F8QT
50n78Rfxfp6wB+t8nMTvoq31G85nZFLyuI9KxLpOQ/2BV4cPXHyuqxmwecep
aPmj/ZX0uOB88vKjUbSNZ2Pt8Ngx/tzKmsvBiZxtX2xw5Nhv+/k2mSZI2iZN
fMuZu1sp7/P7Fws7uf48x283Ur8dLeH9u7uXM5y/8vy6+014H+E/5I87BpQT
XxvKpZ8nzfuiUD3eGDFOgPelvm/md5mvEF8jsy2YTKY8FfRfdXlf/HpGUYcL
Ce8jsZ3g613KaEn8JrZ8/Kz93z8H3hf/l0nnfcYkXIsq8xAcl1w/7PuiUVxP
432TqaYkniXQ78P72G+EzzX3C+/79nu4nnlceF8zP749sn6G98vq6xbUz4o+
xpzY3mgbv5KwPm0X3pf5gnR7gdji1q+zyWSaPOXk8cHOD1Pjr1CVh8jTMyre
D4n+j3q6RW169mQx5d28Y4IXsRO3zbujkhw/dvO225InWL/ONRgn71P7+f7j
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
ZzXvp8vP9/x0NNuLzq/1vnfPorZlNVkbQ9etTb6DofGVkfz7mvfF3s93KTsP
ea7qrKNrA6S/MQ6S85t81mMZlk3bbDG7JtP0ynt2JTZX6+Fhfe5irDAynx4l
YiU174+C+TXvkwcG+ctITp4POTl1JkmSu7+NfJz40iNihaXG1tDXR82fN837
/vy8SPL8zyyuOQbI1N2y2lsmU67y2H5g2cRHPsP7COb3WF94P7VhqfF2o/Vl
A9wLFz94/sJp5/iF8w/9XfUf+MFj38f238S5a/yaiO1eeD+nBoHZ9k2mKVRB
vn0kcbrD8D7rolEfi8vL/I87nYW9OTe+gO1QKMZyWMGni3cvOUmcq/juUBd3
WnifOltoVH70sYLHmzhfefHWjCmwwVOfLRSDwvjt3Fd/TH18YH9ifPke9nd+
Qd3r7Mc06/093n3o5pnSmF2zg5lMw0k4X3zkfb/T5H+pgSG8LzWw9Ppl+TRr
tS3JHaTjdBHvTNj+4Kcjx/1iK+A7fmuS9xvnfh1/7NUn82sjmEymKdIYeB++
8rdZqX0Vjsfx1uLTztml/XRuQttzmxA1sIgH1fVu4X7N+3OzZ5za5vkyiX0/
JqfnKNUU7+cJ3ue6EEMNs4svEf8z1vn5VS+2V+YctM1fjwG0mAdgDoE6Xujp
0dPOtYXFbI4e8Ydt+zk3maZR+v0ktno/X3zynEkOHufDo5+5Udqj9XhEtUl4
H/aH94X5+Su830RO/ibz9hRuR9subL4yqP8Prpknvw==
           "], {{0, 404}, {764, 
           0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
          Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {764, 404}, PlotRange -> {{0, 764}, {0, 404}}], 
        TraditionalForm]], PolygonBox[CompressedData["
1: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
32MR8/enyf8L+3/2kOYDNGH5IILyg4D/Hzt1WN0=
       "],
       VertexTextureCoordinates->CompressedData["
1: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
F3zF8wELE3ch+P8BbVlnaQ==
        "]]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.2664410226638264, -0.11444239757192644`}, {
         0.4440683711063771, -0.11444239757192644`}, {
         0.4440683711063771, -0.2084505721277011}, {
         0.2664410226638264, -0.2084505721277011}, {
         0.2664410226638264, -0.11444239757192644`}}]},
       "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
       "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {Opacity[0.6], EdgeForm[None], 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.20985961630783911`, 0.07006272861048715}, {
          0.20231994234971012`, 0.08312182697847051}, {0.18724059443345215`, 
          0.08312182697847051}, {0.17970092047532316`, 0.07006272861048715}, {
          0.18724059443345215`, 0.057003630242503794`}, {0.20231994234971012`,
           0.057003630242503794`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.11938352881029118`, 0.12229912208242058`}, {
          0.1118438548521622, 0.13535822045040394`}, {0.09676450693590422, 
          0.13535822045040394`}, {0.08922483297777523, 
          0.12229912208242058`}, {0.09676450693590422, 
          0.10924002371443722`}, {0.1118438548521622, 0.10924002371443722`}}],
         
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.08418766805919167, 
          0.030885433506537052`}, {-0.09172734201732066, 
          0.04394453187452041}, {-0.10680668993357864`, 
          0.04394453187452041}, {-0.11434636389170763`, 
          0.030885433506537052`}, {-0.10680668993357864`, 
          0.017826335138553695`}, {-0.09172734201732066, 
          0.017826335138553695`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.42, 0.], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.2777166819310001, -0.021350959965396377`}, {
          0.2701770079728711, -0.00829186159741302}, {
          0.2550976600566131, -0.00829186159741302}, {
          0.24755798609848412`, -0.021350959965396377`}, {
          0.2550976600566131, -0.034410058333379734`}, {
          0.2701770079728711, -0.034410058333379734`}}],
         "2.`"],
        Annotation[#, 2., "Tooltip"]& ]}, 
      {RGBColor[0.7, 0.21, 0.], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.3229547256797741, 0.08312182697847048}, {
          0.31541505172164513`, 0.09618092534645384}, {0.30033570380538716`, 
          0.09618092534645384}, {0.29279602984725817`, 0.08312182697847048}, {
          0.30033570380538716`, 0.07006272861048712}, {0.31541505172164513`, 
          0.07006272861048712}}],
         "3.`"],
        Annotation[#, 3., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.26513984305428756`, 
          0.21371281065830408`}, {-0.27267951701241655`, 
          0.22677190902628744`}, {-0.28775886492867453`, 
          0.22677190902628744`}, {-0.2952985388868035, 
          0.21371281065830408`}, {-0.28775886492867453`, 
          0.20065371229032072`}, {-0.27267951701241655`, 
          0.20065371229032072`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.028907441312743254`, -0.03441005833337975}, {
          0.021367767354614264`, -0.02135095996539639}, {
          0.006288419438356285, -0.02135095996539639}, \
{-0.0012512545197727043`, -0.03441005833337975}, {
          0.006288419438356285, -0.047469156701363105`}, {
          0.021367767354614264`, -0.047469156701363105`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.42, 0.], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.23247863818222614`, -0.047469156701363105`}, {
          0.22493896422409715`, -0.03441005833337975}, {
          0.20985961630783917`, -0.03441005833337975}, {
          0.20231994234971018`, -0.047469156701363105`}, {
          0.20985961630783917`, -0.06052825506934646}, {
          0.22493896422409715`, -0.06052825506934646}}],
         "2.`"],
        Annotation[#, 2., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.16462157255906518`, -0.06052825506934646}, {
          0.1570818986009362, -0.047469156701363105`}, {
          0.1420025506846782, -0.047469156701363105`}, {
          0.13446287672654922`, -0.06052825506934646}, {
          0.1420025506846782, -0.07358735343732982}, {
          0.1570818986009362, -0.07358735343732982}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.34557374755416104`, 0.12229912208242058`}, {
          0.33803407359603205`, 0.13535822045040394`}, {0.32295472567977407`, 
          0.13535822045040394`}, {0.3154150517216451, 0.12229912208242058`}, {
          0.32295472567977407`, 0.10924002371443722`}, {0.33803407359603205`, 
          0.10924002371443722`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.11938352881029118`, -0.13888284527724662`}, {
          0.1118438548521622, -0.12582374690926326`}, {
          0.09676450693590422, -0.12582374690926326`}, {
          0.08922483297777523, -0.13888284527724662`}, {
          0.09676450693590422, -0.15194194364522998`}, {
          0.1118438548521622, -0.15194194364522998`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.21990179930551362`, 
          0.18759461392233737`}, {-0.2274414732636426, 
          0.20065371229032072`}, {-0.2425208211799006, 
          0.20065371229032072`}, {-0.2500604951380296, 
          0.18759461392233737`}, {-0.2425208211799006, 
          0.174535515554354}, {-0.2274414732636426, 0.174535515554354}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.23247863818222614`, 0.0047672367705703655`}, {
          0.22493896422409715`, 0.017826335138553723`}, {0.20985961630783917`,
           0.017826335138553723`}, {0.20231994234971018`, 
          0.0047672367705703655`}, {
          0.20985961630783917`, -0.008291861597412992}, {
          0.22493896422409715`, -0.008291861597412992}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.15204473368235263`, -0.00829186159741302}, \
{-0.15958440764048162`, 0.004767236770570338}, {-0.1746637555567396, 
          0.004767236770570338}, {-0.1822034295148686, -0.00829186159741302}, \
{-0.1746637555567396, -0.021350959965396377`}, {-0.15958440764048162`, \
-0.021350959965396377`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.18724059443345215`, 0.030885433506537052`}, {
          0.17970092047532316`, 0.04394453187452041}, {0.16462157255906518`, 
          0.04394453187452041}, {0.1570818986009362, 0.030885433506537052`}, {
          0.16462157255906518`, 0.017826335138553695`}, {0.17970092047532316`,
           0.017826335138553695`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.23247863818222614`, -0.021350959965396377`}, {
          0.22493896422409715`, -0.00829186159741302}, {
          0.20985961630783917`, -0.00829186159741302}, {
          0.20231994234971018`, -0.021350959965396377`}, {
          0.20985961630783917`, -0.034410058333379734`}, {
          0.22493896422409715`, -0.034410058333379734`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.25509766005661316`, -0.11276464854127989`}, {
          0.24755798609848417`, -0.09970555017329653}, {
          0.2324786381822262, -0.09970555017329653}, {
          0.2249389642240972, -0.11276464854127989`}, {
          0.2324786381822262, -0.12582374690926323`}, {
          0.24755798609848417`, -0.12582374690926323`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.3003357038053871, 0.04394453187452041}, {
          0.2927960298472581, 0.05700363024250377}, {0.27771668193100013`, 
          0.05700363024250377}, {0.27017700797287114`, 0.04394453187452041}, {
          0.27771668193100013`, 0.030885433506537052`}, {0.2927960298472581, 
          0.030885433506537052`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.23247863818222614`, -0.15194194364522998`}, {
          0.22493896422409715`, -0.13888284527724662`}, {
          0.20985961630783917`, -0.13888284527724662`}, {
          0.20231994234971018`, -0.15194194364522998`}, {
          0.20985961630783917`, -0.16500104201321333`}, {
          0.22493896422409715`, -0.16500104201321333`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.11938352881029118`, 0.04394453187452041}, {
          0.1118438548521622, 0.05700363024250377}, {0.09676450693590422, 
          0.05700363024250377}, {0.08922483297777523, 0.04394453187452041}, {
          0.09676450693590422, 0.030885433506537052`}, {0.1118438548521622, 
          0.030885433506537052`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.2877588649286746, -0.03441005833337975}, \
{-0.2952985388868036, -0.02135095996539639}, {-0.31037788680306155`, \
-0.02135095996539639}, {-0.31791756076119054`, -0.03441005833337975}, \
{-0.31037788680306155`, -0.047469156701363105`}, {-0.2952985388868036, \
-0.047469156701363105`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.25509766005661316`, 0.017826335138553695`}, {
          0.24755798609848417`, 0.030885433506537052`}, {0.2324786381822262, 
          0.030885433506537052`}, {0.2249389642240972, 
          0.017826335138553695`}, {0.2324786381822262, 
          0.004767236770570338}, {0.24755798609848417`, 
          0.004767236770570338}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.20985961630783911`, -0.11276464854127989`}, {
          0.20231994234971012`, -0.09970555017329653}, {
          0.18724059443345215`, -0.09970555017329653}, {
          0.17970092047532316`, -0.11276464854127989`}, {
          0.18724059443345215`, -0.12582374690926323`}, {
          0.20231994234971012`, -0.12582374690926323`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.2777166819310001, 0.10924002371443722`}, {
          0.2701770079728711, 0.12229912208242058`}, {0.2550976600566131, 
          0.12229912208242058`}, {0.24755798609848412`, 
          0.10924002371443722`}, {0.2550976600566131, 0.09618092534645387}, {
          0.2701770079728711, 0.09618092534645387}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{-0.31037788680306155`, 
          0.13535822045040394`}, {-0.31791756076119054`, 
          0.1484173188183873}, {-0.3329969086774485, 
          0.1484173188183873}, {-0.3405365826355775, 
          0.13535822045040394`}, {-0.3329969086774485, 
          0.12229912208242058`}, {-0.31791756076119054`, 
          0.12229912208242058`}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}, 
      {RGBColor[1., 0.92, 0.5], 
       TagBox[
        TooltipBox[
         PolygonBox[{{0.1420025506846782, 0.08312182697847048}, {
          0.13446287672654922`, 0.09618092534645384}, {0.11938352881029124`, 
          0.09618092534645384}, {0.11184385485216225`, 0.08312182697847048}, {
          0.11938352881029124`, 0.07006272861048712}, {0.13446287672654922`, 
          0.07006272861048712}}],
         "1.`"],
        Annotation[#, 1., "Tooltip"]& ]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.97714824999999, -97.2276012}], 
       "LongitudeDetermination" -> -97.2276012}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.97714824999999, -97.2276012}], 
       "LongitudeDetermination" -> -97.2276012}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->{398., Automatic},
  LabelStyle->Automatic,
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Opacity[0.6], 
         EdgeForm[], {{
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.20985961630783911`, 0.07006272861048715}, {
              0.20231994234971012`, 0.08312182697847051}, {
              0.18724059443345215`, 0.08312182697847051}, {
              0.17970092047532316`, 0.07006272861048715}, {
              0.18724059443345215`, 0.057003630242503794`}, {
              0.20231994234971012`, 0.057003630242503794`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.11938352881029118`, 0.12229912208242058`}, {
              0.1118438548521622, 0.13535822045040394`}, {0.09676450693590422,
               0.13535822045040394`}, {0.08922483297777523, 
              0.12229912208242058`}, {0.09676450693590422, 
              0.10924002371443722`}, {0.1118438548521622, 
              0.10924002371443722`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.08418766805919167, 
              0.030885433506537052`}, {-0.09172734201732066, 
              0.04394453187452041}, {-0.10680668993357864`, 
              0.04394453187452041}, {-0.11434636389170763`, 
              0.030885433506537052`}, {-0.10680668993357864`, 
              0.017826335138553695`}, {-0.09172734201732066, 
              0.017826335138553695`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.42, 0.], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.2777166819310001, -0.021350959965396377`}, {
              0.2701770079728711, -0.00829186159741302}, {
              0.2550976600566131, -0.00829186159741302}, {
              0.24755798609848412`, -0.021350959965396377`}, {
              0.2550976600566131, -0.034410058333379734`}, {
              0.2701770079728711, -0.034410058333379734`}}, Automatic]], 
            2.]}, {
           RGBColor[0.7, 0.21, 0.], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.3229547256797741, 0.08312182697847048}, {
              0.31541505172164513`, 0.09618092534645384}, {
              0.30033570380538716`, 0.09618092534645384}, {
              0.29279602984725817`, 0.08312182697847048}, {
              0.30033570380538716`, 0.07006272861048712}, {
              0.31541505172164513`, 0.07006272861048712}}, Automatic]], 3.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.26513984305428756`, 
              0.21371281065830408`}, {-0.27267951701241655`, 
              0.22677190902628744`}, {-0.28775886492867453`, 
              0.22677190902628744`}, {-0.2952985388868035, 
              0.21371281065830408`}, {-0.28775886492867453`, 
              0.20065371229032072`}, {-0.27267951701241655`, 
              0.20065371229032072`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.028907441312743254`, -0.03441005833337975}, {
              0.021367767354614264`, -0.02135095996539639}, {
              0.006288419438356285, -0.02135095996539639}, \
{-0.0012512545197727043`, -0.03441005833337975}, {
              0.006288419438356285, -0.047469156701363105`}, {
              0.021367767354614264`, -0.047469156701363105`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.42, 0.], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{
              0.23247863818222614`, -0.047469156701363105`}, {
              0.22493896422409715`, -0.03441005833337975}, {
              0.20985961630783917`, -0.03441005833337975}, {
              0.20231994234971018`, -0.047469156701363105`}, {
              0.20985961630783917`, -0.06052825506934646}, {
              0.22493896422409715`, -0.06052825506934646}}, Automatic]], 
            2.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.16462157255906518`, -0.06052825506934646}, {
              0.1570818986009362, -0.047469156701363105`}, {
              0.1420025506846782, -0.047469156701363105`}, {
              0.13446287672654922`, -0.06052825506934646}, {
              0.1420025506846782, -0.07358735343732982}, {
              0.1570818986009362, -0.07358735343732982}}, Automatic]], 1.]}, {
          
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.34557374755416104`, 0.12229912208242058`}, {
              0.33803407359603205`, 0.13535822045040394`}, {
              0.32295472567977407`, 0.13535822045040394`}, {
              0.3154150517216451, 0.12229912208242058`}, {
              0.32295472567977407`, 0.10924002371443722`}, {
              0.33803407359603205`, 0.10924002371443722`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.11938352881029118`, -0.13888284527724662`}, {
              0.1118438548521622, -0.12582374690926326`}, {
              0.09676450693590422, -0.12582374690926326`}, {
              0.08922483297777523, -0.13888284527724662`}, {
              0.09676450693590422, -0.15194194364522998`}, {
              0.1118438548521622, -0.15194194364522998`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.21990179930551362`, 
              0.18759461392233737`}, {-0.2274414732636426, 
              0.20065371229032072`}, {-0.2425208211799006, 
              0.20065371229032072`}, {-0.2500604951380296, 
              0.18759461392233737`}, {-0.2425208211799006, 
              0.174535515554354}, {-0.2274414732636426, 0.174535515554354}}, 
              Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.23247863818222614`, 
              0.0047672367705703655`}, {0.22493896422409715`, 
              0.017826335138553723`}, {0.20985961630783917`, 
              0.017826335138553723`}, {0.20231994234971018`, 
              0.0047672367705703655`}, {
              0.20985961630783917`, -0.008291861597412992}, {
              0.22493896422409715`, -0.008291861597412992}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.15204473368235263`, -0.00829186159741302}, \
{-0.15958440764048162`, 0.004767236770570338}, {-0.1746637555567396, 
              0.004767236770570338}, {-0.1822034295148686, \
-0.00829186159741302}, {-0.1746637555567396, -0.021350959965396377`}, \
{-0.15958440764048162`, -0.021350959965396377`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.18724059443345215`, 0.030885433506537052`}, {
              0.17970092047532316`, 0.04394453187452041}, {
              0.16462157255906518`, 0.04394453187452041}, {0.1570818986009362,
               0.030885433506537052`}, {0.16462157255906518`, 
              0.017826335138553695`}, {0.17970092047532316`, 
              0.017826335138553695`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{
              0.23247863818222614`, -0.021350959965396377`}, {
              0.22493896422409715`, -0.00829186159741302}, {
              0.20985961630783917`, -0.00829186159741302}, {
              0.20231994234971018`, -0.021350959965396377`}, {
              0.20985961630783917`, -0.034410058333379734`}, {
              0.22493896422409715`, -0.034410058333379734`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.25509766005661316`, -0.11276464854127989`}, {
              0.24755798609848417`, -0.09970555017329653}, {
              0.2324786381822262, -0.09970555017329653}, {
              0.2249389642240972, -0.11276464854127989`}, {
              0.2324786381822262, -0.12582374690926323`}, {
              0.24755798609848417`, -0.12582374690926323`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.3003357038053871, 0.04394453187452041}, {
              0.2927960298472581, 0.05700363024250377}, {0.27771668193100013`,
               0.05700363024250377}, {0.27017700797287114`, 
              0.04394453187452041}, {0.27771668193100013`, 
              0.030885433506537052`}, {0.2927960298472581, 
              0.030885433506537052`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.23247863818222614`, -0.15194194364522998`}, {
              0.22493896422409715`, -0.13888284527724662`}, {
              0.20985961630783917`, -0.13888284527724662`}, {
              0.20231994234971018`, -0.15194194364522998`}, {
              0.20985961630783917`, -0.16500104201321333`}, {
              0.22493896422409715`, -0.16500104201321333`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.11938352881029118`, 0.04394453187452041}, {
              0.1118438548521622, 0.05700363024250377}, {0.09676450693590422, 
              0.05700363024250377}, {0.08922483297777523, 
              0.04394453187452041}, {0.09676450693590422, 
              0.030885433506537052`}, {0.1118438548521622, 
              0.030885433506537052`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.2877588649286746, -0.03441005833337975}, \
{-0.2952985388868036, -0.02135095996539639}, {-0.31037788680306155`, \
-0.02135095996539639}, {-0.31791756076119054`, -0.03441005833337975}, \
{-0.31037788680306155`, -0.047469156701363105`}, {-0.2952985388868036, \
-0.047469156701363105`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.25509766005661316`, 0.017826335138553695`}, {
              0.24755798609848417`, 0.030885433506537052`}, {
              0.2324786381822262, 0.030885433506537052`}, {0.2249389642240972,
               0.017826335138553695`}, {0.2324786381822262, 
              0.004767236770570338}, {0.24755798609848417`, 
              0.004767236770570338}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.20985961630783911`, -0.11276464854127989`}, {
              0.20231994234971012`, -0.09970555017329653}, {
              0.18724059443345215`, -0.09970555017329653}, {
              0.17970092047532316`, -0.11276464854127989`}, {
              0.18724059443345215`, -0.12582374690926323`}, {
              0.20231994234971012`, -0.12582374690926323`}}, Automatic]], 
            1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.2777166819310001, 0.10924002371443722`}, {
              0.2701770079728711, 0.12229912208242058`}, {0.2550976600566131, 
              0.12229912208242058`}, {0.24755798609848412`, 
              0.10924002371443722`}, {0.2550976600566131, 
              0.09618092534645387}, {0.2701770079728711, 
              0.09618092534645387}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{-0.31037788680306155`, 
              0.13535822045040394`}, {-0.31791756076119054`, 
              0.1484173188183873}, {-0.3329969086774485, 
              0.1484173188183873}, {-0.3405365826355775, 
              0.13535822045040394`}, {-0.3329969086774485, 
              0.12229912208242058`}, {-0.31791756076119054`, 
              0.12229912208242058`}}, Automatic]], 1.]}, {
           RGBColor[1., 0.92, 0.5], 
           Tooltip[
            Polygon[
             
             GeoGridPosition[{{0.1420025506846782, 0.08312182697847048}, {
              0.13446287672654922`, 0.09618092534645384}, {
              0.11938352881029124`, 0.09618092534645384}, {
              0.11184385485216225`, 0.08312182697847048}, {
              0.11938352881029124`, 0.07006272861048712}, {
              0.13446287672654922`, 0.07006272861048712}}, Automatic]], 
            1.]}}}}, 
       Sequence[
       CoordinatesToolOptions -> {
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{37.97714824999999, -97.2276012}], 
             "LongitudeDetermination" -> -97.2276012}, "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{37.97714824999999, -97.2276012}], 
             "LongitudeDetermination" -> -97.2276012}, "ITRF00"]& )}, 
        GeoBackground -> 
        GeoStyling[
         "StreetMapNoLabels", 
          GeoServer -> {
           "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}], 
        GeoCenter -> GeoPosition[{37.73300864905194, -97.2276012}], 
        GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
        GeoModel -> "ITRF00", 
        GeoProjection -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{37.97714824999999, -97.2276012}]}, 
        GeoRange -> {{26.011697637499992`, 
         49.94259886249999}, {-125.94468266999999`, -68.51051973}}, 
        GeoRangePadding -> Full, 
        GeoServer -> {
         "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}, 
        GeoZoomLevel -> 4, LabelStyle -> Automatic, 
        MetaInformation -> {
         "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
          "TileSources" -> 
          "Wolfram Knowledgebase with data from OpenStreetMap"}, 
        Method -> {"OriginalInput" -> HoldForm[
            GeoGraphics[{
              Annotation[
               Point[
                GeoPosition[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAzspR2+HFREBl5fJ6C2ZUwLmFCf4S
G0ZAVESXgZQdVsBQMt77wOZDQKx6VFeZRVrAMlx4ueP0QUBWSs/0ksNTwOti
ib0GXURANcC7S5hoUsB2w2y4ftNHQAU4GEXqk17A7KzMSkmsQUAjeI2nr9pT
wMcXSKu1E0JAVVInoIn/V8Dt0/GYgepAQLR+6aNCc1TAlCdaA6XCQEB9VwT/
W7NVwOV90j93KkVAAn6NJMHHUcATWFsMefM9QORGNvyThFbAQeobPSPPR0Bi
9rLtNGldwGZ4/ZMJS0JAE4/V9yuLVMDW1wRiIzlCQEoUEEljLlvALPkzFxN5
Q0BM+RBUjStVwEyR194CGUFAB1hQvVqKVMBoCTICKl5EQNjaVg4Ii1LA0SEm
l7UMQkB4yg8BLH9UwNFCXf8JVT5AvaWcL/ZpVMChfrz8829DQM70t6mmP1PA
AamoVU9NPEB1J47ygqdUwI1snW6P60NA7O3gcRs9VsBDbcCMzlZEQKSwQRVt
fFLAfdLkvcW7QEDpZRTLrWxdwI8XdyivokJAaKVaVUD8U8ApZnOLr2Y+QHrN
Ya2QFVXAgNtu3SiGRUB5KMBmbwlTwFtBiYUQpUVA4MWx5GDVXsBu0+mKY3FF
QJm/nZ8991XAG8Xl7g==
                 "]]], "GeoHistogramPlaceholder"]}, 
             GeoBackground -> GeoStyling["GeoPlotMap"], GeoProjection -> 
             Automatic, {LabelStyle -> Automatic}]], 
          "BasicGeoRange" -> {{28.3019918, 
           47.65230469999999}, {-123.3340389, -71.1211635}}}, 
        PlotRangeClipping -> True, PlotRangePadding -> None]]], 
    "BasicGeoRange" -> {{28.3019918, 
     47.65230469999999}, {-123.3340389, -71.1211635}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "StreetMapNoLabels", 
        GeoServer -> {
         "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}], 
      GeoCenter -> GeoPosition[{37.73300864905194, -97.2276012}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{37.97714824999999, -97.2276012}]}, 
      GeoRange -> {{26.011697637499992`, 
       49.94259886249999}, {-125.94468266999999`, -68.51051973}}, 
      GeoRangePadding -> Full, 
      GeoServer -> {
       "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}, 
      GeoZoomLevel -> 4, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-0.44406837110637676`, 
   0.4440683711063771}, {-0.2084505721277011, 0.2615903006511722}},
  PlotRangeClipping->True,
  PlotRangePadding->None], "\[IndentingNewLine]"}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
   3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
   3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
   3.740269536547988*^9, 3.740269538878209*^9}, {3.74026974445977*^9, 
   3.740269761425275*^9}, {3.7402751155091887`*^9, 3.740275128104851*^9}, 
   3.740285629296575*^9},ExpressionUUID->"d74431ef-2986-4bf8-b0cc-\
60f1fea45d61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running the whole Function:", "TemplateEditableHeader",
 CellChangeTimes->{{3.740269778619135*^9, 3.740269783662751*^9}, {
  3.740285113899111*^9, 
  3.7402851225974092`*^9}},ExpressionUUID->"35911f69-db5c-44da-8d6b-\
0345e1f58443"],

Cell[BoxData[{
 RowBox[{"MainFunction", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Guinea Pig Tooth Growth\>\"", 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$75283$75418 = False, DynamicChart`click$75287$75418 = 
        True}, {{
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.5]}], {{{}, {{
             RGBColor[0., 0.24239, 0.0232242], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]}, 
                   ImageSizeCache -> {{19.210786437626922`, 
                    188.24264992057138`}, {-87.7892135623731, 
                    6.914213562373092}}], StatusArea[#, 4]& , TagBoxNote -> 
                  "4"], 
                 StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$75283$75418, 
                   FEPrivate`Not[DynamicChart`click$75283$75418]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$75283$75418, {{{1., 0}, {
                  0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$75283$75418}]]}, {
             RGBColor[0.244327, 0.0512856, 0.24126], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    0.6283185307179586}]}, 
                   ImageSizeCache -> {{19.210786437626922`, 
                    205.78921356237308`}, {-49.91698361674409, 
                    98.78921356237308}}], StatusArea[#, 6]& , TagBoxNote -> 
                  "6"], 
                 StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$75287$75418, 
                   FEPrivate`Not[DynamicChart`click$75287$75418]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$75287$75418, {{{1., 0}, {0, 1.}}, {
                 0.06180339887498949, -0.1902113032590307}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$75287$75418}]]}}}, {}}, {}}, {{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
               StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
               Style[4, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$75283$75418, 
                 FEPrivate`Not[DynamicChart`click$75283$75418]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$75283$75418, {{{1., 0}, {
                0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$75283$75418}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
               StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
               Style[6, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$75287$75418, 
                 FEPrivate`Not[DynamicChart`click$75287$75418]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$75287$75418, {{{1., 0}, {0, 1.}}, {
               0.06180339887498949, -0.1902113032590307}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$75287$75418}]]}, {}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
     ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {226., Automatic}, PlotLabel -> 
     FormBox["\"Supplement\"", TraditionalForm], 
     PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
     Scaled[0.09166666666666669]],FormBox[
     FormBox[
      TemplateBox[{"\"OrangeJuice\"", "\"VitaminC\""}, "SwatchLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0., 0.24239, 0.0232242]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.244327, 0.0512856, 0.24126]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.24239, 0.0232242], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.16159333333333334`, 0.015482800000000001`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.24239`", ",", "0.0232242`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.24239, 0.0232242]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.24239, 0.0232242], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.244327, 0.0512856, 0.24126], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.16288466666666668`, 0.0341904, 0.16084], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.244327`", ",", "0.0512856`", ",", "0.24126`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.244327, 0.0512856, 0.24126]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.244327, 0.0512856, 0.24126], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {
     {RGBColor[1, 0.5, 0.5], AbsolutePointSize[6], AbsoluteThickness[1.6], 
      Dashing[{}], CapForm["Butt"], GeometricTransformationBox[InsetBox[
        GraphicsBox[
         {RGBColor[1, 0.5, 0.5], AbsolutePointSize[6], AbsoluteThickness[1.6],
           Dashing[{}], CapForm["Butt"], 
          DiskBox[{0, 0}, Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], {{{
       0.13761295116534167`, 0.12216944435630522`}}, {{0.4279427139897821, 
       0.4886777774252209}}, {{0.2550874216723407, 0.24433888871261045`}}, {{
       0.3775965123439254, 0.24433888871261045`}}, {{0.27690410905221197`, 
       0.12216944435630522`}}, {{0.2433399746216408, 
       0.24433888871261045`}}, {{0.1879591528111984, 
       0.12216944435630522`}}, {{0.39102216611615387`, 
       0.4886777774252209}}, {{0.39605678628073954`, 0.4886777774252209}}, {{
       0.33060672414112574`, 0.24433888871261045`}}}]}, {}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Length\"", TraditionalForm], 
     FormBox["\"Dose\"", TraditionalForm]},
   AxesOrigin->{0.1330765486212098, 0},
   AxesStyle->GrayLevel[0],
   BaseStyle->GrayLevel[0],
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->GrayLevel[0],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[1], 
     AbsoluteDashing[{1, 2}]],
   ImagePadding->All,
   ImageSize->{399., Automatic},
   LabelStyle->{FontFamily -> "Helvetica", 
     GrayLevel[0]},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0.13761295116534167`, 0.4279427139897821}, {
     0, 0.4886777774252209}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[
    0]]}], "\[IndentingNewLine]"}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
  3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
  3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
  3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
  3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
  3.740269536547988*^9, 3.740269538878209*^9}, {3.74026974445977*^9, 
  3.740269761425275*^9}},ExpressionUUID->"15145ec9-cd4f-400e-ab72-\
479c8b4d3552"],

Cell[BoxData[{
 RowBox[{"MainFunction", "[", 
  RowBox[{
   RowBox[{"ResourceObject", "[", "\"\<Mass Shootings in America\>\"", "]"}], 
   ",", "60"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$546116$727111 = False, 
        DynamicChart`click$546120$727111 = True, 
        DynamicChart`click$546124$727111 = False, 
        DynamicChart`click$546128$727111 = False}, {{
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.5]}], {{{}, {{
             RGBColor[0.450385, 0.157961, 0.217975], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}, 
                   ImageSizeCache -> {{16.277453104293585`, 
                    176.7225468957064}, {-74.7225468957064, 
                    6.914213562373121}}], StatusArea[#, 30]& , TagBoxNote -> 
                  "30"], 
                 StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
                 Style[30, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$546116$727111, 
                   FEPrivate`Not[DynamicChart`click$546116$727111]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$546116$727111, {{{1., 0}, {0, 1.}}, {
                 1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$546116$727111}]]}, {
             RGBColor[0.8306899999999999, 0.667645, 0.5463493333333334], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-2.7227136331111543`, 0.}]}, 
                   ImageSizeCache -> {{23.090791496576273`, 
                    176.72254689570644`}, {4.085786437626908, 
                    85.72254689570643}}], StatusArea[#, 26]& , TagBoxNote -> 
                  "26"], 
                 StyleBox["26", {}, StripOnInput -> False]], Annotation[#, 
                 Style[26, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$546120$727111, 
                   FEPrivate`Not[DynamicChart`click$546120$727111]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$546120$727111, {{{1., 0}, {0, 1.}}, {
                 0.04158233816355185, -0.19562952014676116`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$546120$727111}]]}, {
             RGBColor[
             0.6704476666666667, 0.8034856666666667, 0.8246450000000001], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0368728984701328`, -2.7227136331111543`}]}, 
                   ImageSizeCache -> {{16.7091734001456, 97.9142135623731}, {
                    4.085786437626908, 38.96845050877177}}], 
                  StatusArea[#, 3]& , TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$546124$727111, 
                   FEPrivate`Not[DynamicChart`click$546124$727111]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$546124$727111, {{{1., 0}, {
                  0, 1.}}, {-0.19318516525781365`, -0.0517638090205042}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$546124$727111}]]}, {
             RGBColor[0.139681, 0.311666, 0.550652], 
             EdgeForm[{
               GrayLevel[0], 
               Opacity[0.5]}], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.0368728984701328`}]}, 
                   ImageSizeCache -> {{16.277453104293595`, 
                    97.91421356237309}, {4.085786437626915, 
                    15.151927538391483`}}], StatusArea[#, 1]& , TagBoxNote -> 
                  "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ], 
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$546128$727111, 
                   FEPrivate`Not[DynamicChart`click$546128$727111]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               If[
               DynamicChart`click$546128$727111, {{{1., 0}, {
                  0, 1.}}, {-0.19972590695091477`, -0.010467191248588852`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$546128$727111}]]}}}, {}}, {}}, {{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 30]& , TagBoxNote -> "30"], 
               StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
               Style[30, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$546116$727111, 
                 FEPrivate`Not[DynamicChart`click$546116$727111]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$546116$727111, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
               1}}], TrackedSymbols :> {DynamicChart`click$546116$727111}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 26]& , TagBoxNote -> "26"], 
               StyleBox["26", {}, StripOnInput -> False]], Annotation[#, 
               Style[26, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$546120$727111, 
                 FEPrivate`Not[DynamicChart`click$546120$727111]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$546120$727111, {{{1., 0}, {0, 1.}}, {
               0.04158233816355185, -0.19562952014676116`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$546120$727111}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
               Style[3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$546124$727111, 
                 FEPrivate`Not[DynamicChart`click$546124$727111]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$546124$727111, {{{1., 0}, {
                0, 1.}}, {-0.19318516525781365`, -0.0517638090205042}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$546124$727111}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
               Style[1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$546128$727111, 
                 FEPrivate`Not[DynamicChart`click$546128$727111]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$546128$727111, {{{1., 0}, {
                0, 1.}}, {-0.19972590695091477`, -0.010467191248588852`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$546128$727111}]]}, {}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
     ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {194., Automatic}, PlotLabel -> 
     FormBox["\"Fate of Shooter at the scene\"", TraditionalForm], 
     PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
     Scaled[0.09166666666666669]],FormBox[
     FormBox[
      TemplateBox[{
       "\"Deceased\"", "\"Arrested\"", "\"Escaped\"", "\"Arrested/Escaped\""},
        "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.450385, 0.157961, 0.217975]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.8306899999999999, 0.667645, 0.5463493333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6704476666666667, 0.8034856666666667, 
                    0.8246450000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.139681, 0.311666, 0.550652]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.450385, 0.157961, 0.217975], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30025666666666667`, 0.10530733333333334`, 
                    0.14531666666666668`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.450385`", ",", "0.157961`", ",", "0.217975`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.450385, 0.157961, 0.217975]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.450385, 0.157961, 0.217975], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8306899999999999, 0.667645, 0.5463493333333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5537933333333334, 0.4450966666666667, 
                    0.36423288888888894`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8306899999999999`", ",", "0.667645`", ",", 
                    "0.5463493333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8306899999999999, 0.667645, 0.5463493333333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8306899999999999, 0.667645, 0.5463493333333334], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6704476666666667, 0.8034856666666667, 
                    0.8246450000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.44696511111111115`, 0.5356571111111111, 
                    0.5497633333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6704476666666667`", ",", "0.8034856666666667`", ",", 
                    "0.8246450000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6704476666666667, 0.8034856666666667, 
                    0.8246450000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6704476666666667, 0.8034856666666667, 
                    0.8246450000000001], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.139681, 0.311666, 0.550652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09312066666666667, 0.20777733333333334`, 
                    0.3671013333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.139681`", ",", "0.311666`", ",", "0.550652`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.139681, 0.311666, 0.550652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.139681, 0.311666, 0.550652], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                  "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$543915$727144 = False, 
        DynamicChart`click$543919$727144 = False, 
        DynamicChart`click$543923$727144 = False, 
        DynamicChart`click$543927$727144 = False, 
        DynamicChart`click$543931$727144 = False, 
        DynamicChart`click$543935$727144 = False, 
        DynamicChart`click$543939$727144 = False}, {{
         Directive[
          RGBColor[0.5, 0.5, 1.], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.5]]]], {{{{{{}, {{
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.405188, 0.204349, 0.343389]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                    3.141592653589793}]}], StatusArea[#, 12]& , TagBoxNote -> 
                    "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543915$727144, 
                    FEPrivate`Not[DynamicChart`click$543915$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543915$727144, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, 
                    0.11755705045849466`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                   1}}], TrackedSymbols :> {
                   DynamicChart`click$543915$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[
                 0.6333770000000001, 0.23392566666666667`, 
                  0.37273666666666666`]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.7330382858376185, 
                    1.8849555921538759`}]}], StatusArea[#, 11]& , TagBoxNote -> 
                    "11"], 
                    StyleBox["11", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543919$727144, 
                    FEPrivate`Not[DynamicChart`click$543919$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543919$727144, {{{1., 0}, {0, 1.}}, {
                    0.05176380902050415, 0.19318516525781368`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$543919$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[
                 0.7996756666666667, 0.3505163333333333, 
                  0.48605733333333334`]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.2094395102393194, 
                    0.7330382858376185}]}], StatusArea[#, 9]& , TagBoxNote -> 
                    "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543923$727144, 
                    FEPrivate`Not[DynamicChart`click$543923$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543923$727144, {{{1., 0}, {0, 1.}}, {
                    0.19318516525781365`, 0.05176380902050418}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$543923$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.831283, 0.533131, 0.662656]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1519173063162578`, -0.2094395102393194}]}], 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543927$727144, 
                    FEPrivate`Not[DynamicChart`click$543927$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543927$727144, {{{1., 0}, {0, 1.}}, {
                    0.15542919229139418`, -0.1258640782099675}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$543927$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333]], 
                
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.0943951023931957`, -1.1519173063162578`}]}], 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543931$727144, 
                    FEPrivate`Not[DynamicChart`click$543931$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543931$727144, {{{1., 0}, {
                    0, 1.}}, {-0.010467191248588813`, \
-0.19972590695091477`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$543931$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333]], 
                
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.9321531433504733`, -2.0943951023931957`}]}], 
                    StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                    Style[8, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543935$727144, 
                    FEPrivate`Not[DynamicChart`click$543935$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543935$727144, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$543935$727144}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.659388, 0.872053, 0.882048]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.9321531433504733`}]}], 
                    StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$543939$727144, 
                    FEPrivate`Not[DynamicChart`click$543939$727144]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$543939$727144, {{{1., 0}, {
                    0, 1.}}, {-0.19890437907365466`, \
-0.020905692653530747`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$543939$727144}]]}}}}}, {}}, {{}}}}, {{{{
           
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
                StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
                Style[12, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543915$727144, 
                  FEPrivate`Not[DynamicChart`click$543915$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543915$727144, {{{1., 0}, {
                 0, 1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543915$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
                StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                Style[11, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543919$727144, 
                  FEPrivate`Not[DynamicChart`click$543919$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543919$727144, {{{1., 0}, {0, 1.}}, {
                0.05176380902050415, 0.19318516525781368`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543919$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                Style[9, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543923$727144, 
                  FEPrivate`Not[DynamicChart`click$543923$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543923$727144, {{{1., 0}, {0, 1.}}, {
                0.19318516525781365`, 0.05176380902050418}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543923$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                Style[9, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543927$727144, 
                  FEPrivate`Not[DynamicChart`click$543927$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543927$727144, {{{1., 0}, {0, 1.}}, {
                0.15542919229139418`, -0.1258640782099675}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543927$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                Style[9, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543931$727144, 
                  FEPrivate`Not[DynamicChart`click$543931$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543931$727144, {{{1., 0}, {
                 0, 1.}}, {-0.010467191248588813`, -0.19972590695091477`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543931$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 8]& , TagBoxNote -> "8"], 
                StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                Style[8, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543935$727144, 
                  FEPrivate`Not[DynamicChart`click$543935$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543935$727144, {{{1., 0}, {
                 0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$543935$727144}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ], 
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$543939$727144, 
                  FEPrivate`Not[DynamicChart`click$543939$727144]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$543939$727144, {{{1., 0}, {
                 0, 1.}}, {-0.19890437907365466`, -0.020905692653530747`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$543939$727144}]]}, {}}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
     DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], PlotLabel -> 
      FormBox["\"Day of Week\"", TraditionalForm], 
      PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
      Scaled[0.09166666666666669]}],FormBox[
     FormBox[
      TemplateBox[{
       "\"Sunday\"", "\"Friday\"", "\"Thursday\"", "\"Monday\"", 
        "\"Tuesday\"", "\"Wednesday\"", "\"Saturday\""}, "SwatchLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.405188, 0.204349, 0.343389]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6333770000000001, 0.23392566666666667`, 
                    0.37273666666666666`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.7996756666666667, 0.3505163333333333, 
                    0.48605733333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.831283, 0.533131, 0.662656]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.742797, 0.6702466666666667, 0.8056613333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.680889, 0.7972306666666666, 0.8930633333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.659388, 0.872053, 0.882048]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.405188, 0.204349, 0.343389], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.27012533333333333`, 0.13623266666666667`, 
                    0.22892600000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.405188`", ",", "0.204349`", ",", "0.343389`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.405188, 0.204349, 0.343389]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.405188, 0.204349, 0.343389], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6333770000000001, 0.23392566666666667`, 
                    0.37273666666666666`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4222513333333334, 0.15595044444444445`, 
                    0.2484911111111111], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6333770000000001`", ",", "0.23392566666666667`", ",", 
                    "0.37273666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6333770000000001, 0.23392566666666667`, 
                    0.37273666666666666`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6333770000000001, 0.23392566666666667`, 
                    0.37273666666666666`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7996756666666667, 0.3505163333333333, 
                    0.48605733333333334`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5331171111111112, 0.23367755555555556`, 
                    0.3240382222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7996756666666667`", ",", "0.3505163333333333`", ",", 
                    "0.48605733333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7996756666666667, 0.3505163333333333, 
                    0.48605733333333334`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7996756666666667, 0.3505163333333333, 
                    0.48605733333333334`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.831283, 0.533131, 0.662656], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5541886666666667, 0.3554206666666667, 
                    0.4417706666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.831283`", ",", "0.533131`", ",", "0.662656`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.831283, 0.533131, 0.662656]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.831283, 0.533131, 0.662656], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.742797, 0.6702466666666667, 0.8056613333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.495198, 0.4468311111111111, 0.5371075555555556], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.742797`", ",", "0.6702466666666667`", ",", 
                    "0.8056613333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.742797, 0.6702466666666667, 0.8056613333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.742797, 0.6702466666666667, 0.8056613333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.680889, 0.7972306666666666, 0.8930633333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.453926, 0.5314871111111111, 0.5953755555555555], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.680889`", ",", "0.7972306666666666`", ",", 
                    "0.8930633333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.680889, 0.7972306666666666, 0.8930633333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.680889, 0.7972306666666666, 0.8930633333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.659388, 0.872053, 0.882048], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.439592, 0.5813686666666666, 0.5880320000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.659388`", ",", "0.872053`", ",", "0.882048`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.659388, 0.872053, 0.882048]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.659388, 0.872053, 0.882048], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                ",", #7}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                     ",", "None", ",", "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$544616$727165 = False, 
        DynamicChart`click$544620$727165 = False, 
        DynamicChart`click$544624$727165 = False}, {{
         Directive[
          RGBColor[0.5, 0.5, 1.], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.5]]]], {{{{{{}, {{
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.720287, 0.923781, 0.297597]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.7227136331111543`, 
                    3.141592653589793}]}], StatusArea[#, 56]& , TagBoxNote -> 
                    "56"], 
                    StyleBox["56", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[56, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$544616$727165, 
                    FEPrivate`Not[DynamicChart`click$544616$727165]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$544616$727165, {{{1., 0}, {0, 1.}}, {
                    0.19562952014676116`, 0.041582338163551835`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$544616$727165}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.841533, 0.316539, 0.26249]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0368728984701328`, -2.7227136331111543`}]}], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$544620$727165, 
                    FEPrivate`Not[DynamicChart`click$544620$727165]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$544620$727165, {{{1., 0}, {
                    0, 1.}}, {-0.19318516525781365`, -0.0517638090205042}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$544620$727165}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.805814, 0.208576, 0.769757]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.0368728984701328`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$544624$727165, 
                    FEPrivate`Not[DynamicChart`click$544624$727165]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$544624$727165, {{{1., 0}, {
                    0, 1.}}, {-0.19972590695091477`, \
-0.010467191248588852`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$544624$727165}]]}}}}}, {}}, {{}}}}, {{{{
           
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 56]& , TagBoxNote -> "56"], 
                StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                Style[56, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$544616$727165, 
                  FEPrivate`Not[DynamicChart`click$544616$727165]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$544616$727165, {{{1., 0}, {0, 1.}}, {
                0.19562952014676116`, 0.041582338163551835`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$544616$727165}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                Style[3, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$544620$727165, 
                  FEPrivate`Not[DynamicChart`click$544620$727165]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$544620$727165, {{{1., 0}, {
                 0, 1.}}, {-0.19318516525781365`, -0.0517638090205042}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$544620$727165}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$544624$727165, 
                  FEPrivate`Not[DynamicChart`click$544624$727165]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$544624$727165, {{{1., 0}, {
                 0, 1.}}, {-0.19972590695091477`, -0.010467191248588852`}}, {{
               1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$544624$727165}]]}, {}}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
     DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], PlotLabel -> 
      FormBox["\"Shooter Sex\"", TraditionalForm], 
      PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
      Scaled[0.09166666666666669]}],FormBox[
     FormBox[
      TemplateBox[{"\"Male\"", "\"Female\"", "\"Male/Female\""}, 
       "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.720287, 0.923781, 0.297597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.841533, 0.316539, 0.26249]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.805814, 0.208576, 0.769757]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.720287, 0.923781, 0.297597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.48019133333333336`, 0.615854, 0.19839800000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.720287`", ",", "0.923781`", ",", "0.297597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.720287, 0.923781, 0.297597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.720287, 0.923781, 0.297597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.841533, 0.316539, 0.26249], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.561022, 0.21102600000000002`, 0.17499333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.841533`", ",", "0.316539`", ",", "0.26249`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.841533, 0.316539, 0.26249]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.841533, 0.316539, 0.26249], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.805814, 0.208576, 0.769757], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5372093333333334, 0.13905066666666668`, 
                    0.5131713333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.805814`", ",", "0.208576`", ",", "0.769757`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.805814, 0.208576, 0.769757]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.805814, 0.208576, 0.769757], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"None", ",", "None", ",", "None"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
  GraphicsBox[
   StyleBox[{InsetBox[
      StyleBox["\<\"shooting\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.14535599901453558`],
       FontColor->RGBColor[
        0.9659284545454545, 0.8967308181818181, 0.32213890909090903`]], {0, 0},
       Center, Automatic], InsetBox[
      StyleBox["\<\"killing\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.15028332101502834`],
       FontColor->RGBColor[
        0.9512597272727273, 0.8444680909090909, 0.27964063636363634`]], {0., 42.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"shot\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.1897018970189702],
       FontColor->RGBColor[0.817319, 0.134127, 0.164218]], {4., -46.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"wounded\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.10593742301059375`],
       FontColor->RGBColor[
        0.9753750909090909, 0.9811553636363637, 0.9265677272727271]], {4., 79.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"killed\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.13550135501355012`],
       FontColor->RGBColor[
        0.992503, 0.9863729999999999, 0.4253759999999998]], {0., -92.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"police\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.12071938901207194`],
       FontColor->RGBColor[
        0.9942738181818181, 0.9919000909090909, 0.7445611818181818]], {-29., 103.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"shooter\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.11579206701157921`],
       FontColor->RGBColor[
        0.9902410909090908, 0.9902324545454546, 0.8113939090909089]], {-20., -124.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"people\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.10593742301059375`],
       FontColor->RGBColor[
        0.9753750909090909, 0.9811553636363637, 0.9265677272727271]], {93., 111.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"man\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.16506528701650652`],
       FontColor->RGBColor[
        0.8958957272727273, 0.6201686363636364, 0.23484518181818181`]], {100., -122.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"School\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09115545700911554],
       FontColor->RGBColor[
        0.9041403636363636, 0.9264009999999999, 0.9907189090909091]], {-104., -33.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"opened\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08622813500862281],
       FontColor->RGBColor[
        0.8620621818181818, 0.892849, 0.9867054545454546]], {105., -46.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"entered\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08130081300813008],
       FontColor->RGBColor[
        0.8199840000000002, 0.8592970000000001, 0.982692]], {-101., -60.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"arrested\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07637349100763735],
       FontColor->RGBColor[
        0.7553930909090911, 0.8088380909090911, 0.9762541818181818]], {104., -76.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"fire\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.12071938901207194`],
       FontColor->RGBColor[
        0.9942738181818181, 0.9919000909090909, 0.7445611818181818]], {104., 26.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"began\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08130081300813008],
       FontColor->RGBColor[
        0.8199840000000002, 0.8592970000000001, 0.982692]], {-112., 21.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"2015\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08622813500862281],
       FontColor->RGBColor[
        0.8620621818181818, 0.892849, 0.9867054545454546]], {-104., 38.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"committing\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051736881005173686`],
       FontColor->RGBColor[
        0.4270321818181818, 0.5442955454545455, 0.948431090909091]], {-3., 131.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"home\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08130081300813008],
       FontColor->RGBColor[
        0.8199840000000002, 0.8592970000000001, 0.982692]], {-92., -85.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"former\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07144616900714462],
       FontColor->RGBColor[
        0.6908021818181818, 0.7583791818181818, 0.9698163636363636]], {-112., 64.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"suicide\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.0665188470066519],
       FontColor->RGBColor[
        0.6251734545454546, 0.7065830000000001, 0.9636350909090908]], {113., 54.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"injuring\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05666420300566642],
       FontColor->RGBColor[
        0.487689090909091, 0.594967, 0.9528118181818181]], {-86., 125.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"students\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05666420300566642],
       FontColor->RGBColor[
        0.487689090909091, 0.594967, 0.9528118181818181]], {115., 73.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"student\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06159152500615915],
       FontColor->RGBColor[
        0.5564312727272728, 0.650775, 0.9582234545454545]], {95., -98.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"later\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08130081300813008],
       FontColor->RGBColor[
        0.8199840000000002, 0.8592970000000001, 0.982692]], {-122., -6.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"employee\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {-108., -106.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"injured\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05666420300566642],
       FontColor->RGBColor[
        0.487689090909091, 0.594967, 0.9528118181818181]], {-116., 91.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"house\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.0665188470066519],
       FontColor->RGBColor[
        0.6251734545454546, 0.7065830000000001, 0.9636350909090908]], {76., 129.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"California\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {-39., 142.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"University\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {89., 141.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"arrived\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05666420300566642],
       FontColor->RGBColor[
        0.487689090909091, 0.594967, 0.9528118181818181]], {-117., -128.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"wounding\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {-115., 141.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"apartment\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {-118., -144.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"morning\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {126., -2.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"January\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051736881005173686`],
       FontColor->RGBColor[
        0.4270321818181818, 0.5442955454545455, 0.948431090909091]], {131., -18.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Restaurant\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {0., -147.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"February\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {71., -150.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"April\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05666420300566642],
       FontColor->RGBColor[
        0.487689090909091, 0.594967, 0.9528118181818181]], {138., -151.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"employees\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {22., 155.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"December\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {88., 155.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"including\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {0., -162.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Elementary\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-121., 106.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"found\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {-36., 157.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"fatally\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {139., 88.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"supervisor\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-59., -157.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"workplace\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {59., -163.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"attempted\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-86., 156.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"officer\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {-148., -82.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"escaped\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-148., 121.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"neighbors\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-115., -158.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"March\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {150., 127.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"coworkers\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {14., -24.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"teacher\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-137., 151.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"August\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {150., 141.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"41-year-old\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {16., 167.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"19-year-old\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {79., 167.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"children\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {143., 153.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"family\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {152., -94.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"incident\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-130., 165.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"wife\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051736881005173686`],
       FontColor->RGBColor[
        0.4270321818181818, 0.5442955454545455, 0.948431090909091]], {151., 32.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"hostage\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {143., 166.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"campus\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-15., 19.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Sunday\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {155., 12.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"went\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051736881005173686`],
       FontColor->RGBColor[
        0.4270321818181818, 0.5442955454545455, 0.948431090909091]], {-159., 43.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"returned\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-3., -175.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"inside\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-32., 172.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"college\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-50., -169.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"shooters\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {47., -175.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"fired\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {-165., 13.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"five\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {-164., -3.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"hours\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-166., -49.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"victims\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-72., 171.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"party\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {167., 49.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"gun\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {-166., -15.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"old\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051736881005173686`],
       FontColor->RGBColor[
        0.4270321818181818, 0.5442955454545455, 0.948431090909091]], {166., -34.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"office\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-163., -96.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"worker\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {74., 177.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"early\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-166., 60.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"dead\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {14., 175.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"building\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-91., -170.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"victim\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {89., -175.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"club\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-167., -34.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"six\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {-160., -65.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Arizona\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {33., 58.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"seven\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {108., -31.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"scene\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {-55., -143.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"left\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03695491500369549],
       FontColor->RGBColor[
        0.2733408181818182, 0.4046289090909091, 0.9388777272727273]], {171., -5.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"26\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04188223700418822],
       FontColor->RGBColor[
        0.3218889090909091, 0.4532257272727273, 0.9417314545454546]], {163., -51.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"New\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-165., 27.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"away\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-41., -21.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"car\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04680955900468096],
       FontColor->RGBColor[
        0.37446054545454555`, 0.49876063636363643`, 0.9450812727272727]], {165., 61.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"bus\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {19., -73.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"2012\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {96., -63.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"1988\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {163., -64.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"1993\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-160., 77.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"boy\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-46., 16.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"24\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {85., 86.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"29\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {161., -77.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"18\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03202759300320276],
       FontColor->RGBColor[
        0.2261339090909091, 0.3550114545454546, 0.9361893636363636]], {-39., -75.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"21\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {-49., 57.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"22\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02710027100271003],
       FontColor->RGBColor[0.178927, 0.305394, 0.933501]], {59., 58.}, Center,
       Automatic]},
    StripOnInput->False,
    FontFamily->"STIX"],
   DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
   ImageSize->{239., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
   PlotRange->{{-184.5, 184.5}, {-180.5, 184.5}}], ",", 
  GraphicsBox[
   StyleBox[{InsetBox[
      StyleBox["\<\"California\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.20710059171597633`],
       FontColor->RGBColor[0.72987, 0.239399, 0.230961]], {0, 0}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"New\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.1849112426035503],
       FontColor->RGBColor[
        0.75060425, 0.30922274999999977`, 0.24908549999999993`]], {0., -52.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Florida\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.11834319526627218`],
       FontColor->RGBColor[0.624866, 0.673302, 0.264296]], {0., 45.}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"Alabama\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09615384615384615],
       FontColor->RGBColor[0.38516275, 0.53580125, 0.24921775000000002`]], {0., 74.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Carolina\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09615384615384615],
       FontColor->RGBColor[0.38516275, 0.53580125, 0.24921775000000002`]], {0., -91.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Georgia\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07396449704142012],
       FontColor->RGBColor[0.277947, 0.45009699999999997`, 0.3281555]], {0., 98.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Texas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09615384615384615],
       FontColor->RGBColor[0.38516275, 0.53580125, 0.24921775000000002`]], {0., -119.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Washington\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {0., 117.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Kentucky\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-101., 35.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"York\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09615384615384615],
       FontColor->RGBColor[0.38516275, 0.53580125, 0.24921775000000002`]], {96., -42.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Illinois\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07396449704142012],
       FontColor->RGBColor[0.277947, 0.45009699999999997`, 0.3281555]], {-99., -39.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Wisconsin\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {104., -70.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"City\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07396449704142012],
       FontColor->RGBColor[0.277947, 0.45009699999999997`, 0.3281555]], {85., 43.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Cleveland\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-104., -59.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"North\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07396449704142012],
       FontColor->RGBColor[0.277947, 0.45009699999999997`, 0.3281555]], {-98., 54.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Ohio\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07396449704142012],
       FontColor->RGBColor[0.277947, 0.45009699999999997`, 0.3281555]], {95., 65.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Nevada\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {79., 89.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Arizona\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-96., -77.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Killeen\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-75., 95.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Birmingham\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {27., 20.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"Fayetteville\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-95., 73.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"South\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {89., -88.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Sunnyvale\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {77., 102.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"LaGrange\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-89., -92.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Iowa\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-69., -110.}, \
Center, Automatic], InsetBox[
      StyleBox["\<\"Wyoming\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-5., 130.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Syracuse\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {71., -111.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Memphis\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-73., 108.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Cottonwood\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {9., -33.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"Brooklyn\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {73., 112.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Greenwood\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {48., 129.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Daytona\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-52., 129.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Conyers\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-62., -125.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Tennessee\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {76., -125.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Henderson\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-101., 118.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Jonesboro\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-118., -104.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Escondido\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {121., -103.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Birchwood\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {104., 122.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Virginia\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {126., 26.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Orange\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {128., 38.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Opelika\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-124., 83.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"San\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.051775147928994084`],
       FontColor->RGBColor[
        0.25634450000000003`, 0.36442575000000005`, 0.5148382499999999]], {-115., 1.},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Corpus\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {77., 21.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"Chapel\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-122., 95.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Nebraska\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-99., 128.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Louisiana\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-116., -116.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Tyrone\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {129., 91.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Tampa\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {121., 103.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Richey\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {114., -115.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Winnetka\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {102., 132.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Arkansas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-108., -128.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Jersey\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-124., 105.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Colorado\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {0., -139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Vegas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-3., 140.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Sheridan\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {37., 139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Roanoke\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-46., -139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Stockton\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {46., -139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Wickliffe\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-43., 140.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Oakland\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {136., -85.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Missouri\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-86., 139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Diego\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {138., 48.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Orleans\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-135., -90.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Melrose\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {89., -137.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Newark\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {81., 142.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Geneva\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-90., -140.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Morven\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {124., -127.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Hialeah\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {121., 142.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Federal\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-128., 138.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Tucson\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {139., 75.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Omaha\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {130., -139.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Mexico\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-130., -140.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Dakota\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {9., 149.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"Carson\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {0., -151.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Seattle\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-28., 150.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Covina\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {142., 58.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Aurora\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {149., -33.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Goleta\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-147., 47.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Ysidro\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {146., -45.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Forest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-36., -151.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Dallas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {36., -151.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Christi\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-147., 57.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Beach\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-152., -37.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Way\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-153., 26.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Water\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {44., 149.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Creek\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-146., 67.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Union\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-62., 150.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Rome\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-144., -72.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Platte\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {153., -57.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Mesa\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {68., -151.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Bay\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-153., -25.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"River\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-67., -152.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Palm\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {74., 152.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Park\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-91., 149.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Little\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {96., -149.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Oak\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {156., 12.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Port\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {-155., 77.}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Las\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {157., 0.}, Center,
       Automatic], InsetBox[
      StyleBox["\<\"Hill\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.029585798816568046`],
       FontColor->RGBColor[0.237736, 0.340215, 0.575113]], {48., -33.}, 
      Center, Automatic]},
    StripOnInput->False,
    FontFamily->"Loma"],
   DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
   ImageSize->{253., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
   PlotRange->{{-169.5, 168.5}, {-158.5, 157.5}}], ",", 
  GraphicsBox[
   StyleBox[{InsetBox[
      StyleBox["\<\"American\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.20833333333333331`],
       FontColor->RGBColor[0., 0., 0.]], {0, 0}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"European\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07828674948240165],
       FontColor->RGBColor[0., 0., 0.]], {0., 21.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"White\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07828674948240165],
       FontColor->RGBColor[0., 0., 0.]], {0., 40.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"African\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05111283643892339],
       FontColor->RGBColor[0., 0., 0.]], {76., 32.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"Black\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05111283643892339],
       FontColor->RGBColor[0., 0., 0.]], {-68., 37.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"Unknown\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02976190476190476],
       FontColor->RGBColor[0., 0., 0.]], {-29., -4.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"Asian\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02976190476190476],
       FontColor->RGBColor[0., 0., 0.]], {0., 51.}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"race\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03170289855072464],
       FontColor->RGBColor[0., 0., 0.]], {50., -3.}, Center, Automatic]},
    StripOnInput->False,
    FontFamily->"STIXSizeTwoSym"],
   DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
   ImageSize->{229., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
   PlotRange->{{-171.5, 164.5}, {-62.5, 51.5}}], ",", 
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$548123$727392 = False, 
        DynamicChart`click$548127$727392 = False, 
        DynamicChart`click$548131$727392 = False}, {{
         Directive[
          RGBColor[0.5, 0.5, 1.], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.5]]]], {{{{{{}, {{
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0., 0.24239, 0.0232242]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {1.9896753472735358`, 
                    3.141592653589793}]}], StatusArea[#, 11]& , TagBoxNote -> 
                    "11"], 
                    StyleBox["11", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$548123$727392, 
                    FEPrivate`Not[DynamicChart`click$548123$727392]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$548123$727392, {{{1., 0}, {
                    0, 1.}}, {-0.16773411358908485`, 0.1089278070030054}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$548123$727392}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.92378, 0.9005160000000001, 0.922777]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1519173063162578`, 
                    1.9896753472735358`}]}], StatusArea[#, 30]& , TagBoxNote -> 
                    "30"], 
                    StyleBox["30", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[30, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$548127$727392, 
                    FEPrivate`Not[DynamicChart`click$548127$727392]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$548127$727392, {{{1., 0}, {0, 1.}}, {
                    0.18270909152852022`, 0.08134732861516003}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$548127$727392}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.244327, 0.0512856, 0.24126]], 
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1519173063162578`}]}], 
                    StatusArea[#, 19]& , TagBoxNote -> "19"], 
                    StyleBox["19", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[19, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$548131$727392, 
                    FEPrivate`Not[DynamicChart`click$548131$727392]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$548131$727392, {{{1., 0}, {
                    0, 1.}}, {-0.10892780700300542`, -0.1677341135890848}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$548131$727392}]]}}}}}, {}}, {{}}}}, {{{{
           
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
                StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                Style[11, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$548123$727392, 
                  FEPrivate`Not[DynamicChart`click$548123$727392]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$548123$727392, {{{1., 0}, {
                 0, 1.}}, {-0.16773411358908485`, 0.1089278070030054}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$548123$727392}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 30]& , TagBoxNote -> "30"], 
                StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
                Style[30, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$548127$727392, 
                  FEPrivate`Not[DynamicChart`click$548127$727392]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$548127$727392, {{{1., 0}, {0, 1.}}, {
                0.18270909152852022`, 0.08134732861516003}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$548127$727392}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}}, StatusArea[#, 19]& , TagBoxNote -> "19"], 
                StyleBox["19", {}, StripOnInput -> False]], Annotation[#, 
                Style[19, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$548131$727392, 
                  FEPrivate`Not[DynamicChart`click$548131$727392]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              If[
              DynamicChart`click$548131$727392, {{{1., 0}, {
                 0, 1.}}, {-0.10892780700300542`, -0.1677341135890848}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$548131$727392}]]}, {}}}, {}}, {}, {}}, 
       DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
     DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], PlotLabel -> 
      FormBox["\"History of Mental Illness - General\"", TraditionalForm], 
      PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
      Scaled[0.09166666666666669]}],FormBox[
     FormBox[
      TemplateBox[{"\"Unknown\"", "\"No\"", "\"Yes\""}, "SwatchLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0., 0.24239, 0.0232242]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.92378, 0.9005160000000001, 0.922777]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.244327, 0.0512856, 0.24126]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.24239, 0.0232242], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.16159333333333334`, 0.015482800000000001`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.24239`", ",", "0.0232242`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.24239, 0.0232242]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.24239, 0.0232242], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.92378, 0.9005160000000001, 0.922777], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6158533333333334, 0.6003440000000001, 
                    0.6151846666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.92378`", ",", "0.9005160000000001`", ",", 
                    "0.922777`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.92378, 0.9005160000000001, 0.922777]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.92378, 0.9005160000000001, 0.922777], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.244327, 0.0512856, 0.24126], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.16288466666666668`, 0.0341904, 0.16084], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.244327`", ",", "0.0512856`", ",", "0.24126`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.244327, 0.0512856, 0.24126]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.244327, 0.0512856, 0.24126], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"None", ",", "None", ",", "None"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxdlH9MU1cUx1/mFEScRDst2wKUEUHTIB0CowI9tqU/gFbFjsQpLt3sNDAc
UcGtW8YrcZlOCLJgRIPKfiJEUcHhHIKtAxEEAZ3oJmOMki4qIs5FcH+4sXjO
Td59SdN+e8659/z6PMXb72c6nhMEwTn9+f/72TOhWfeL0+tJbNHgH6D0ysuy
4Txqf4hf5R2fu8eDOgheCumpmLGlCbUMjLJldzbbz6KWo/9p1K/AmfaUks+V
J1GHcf7h3HkRIM1nMfivcx2qLTuFOgqOxd/y7J76CfVSTivBCYV5Ef9eRB0N
Y5G5cHTr96hjOK3i6nsNno41qZ8YmlHHwg2leuH9h22ol8M7qam6bcUNqOM4
Hc/FJ8DXwqPyGFsn6te5/iZifW7Uaq6eFVz9Sdx9ydjfC6hTuHgN9rsGNWA+
555pETj/ldL8xZXcPLRQvqLmwMBH6C9qISNNFuyeSf3WSfMRdSBIHj0UBJQn
d7/5A9r1MOPVqpw199oxPhUeZq/On5zfh/ZUbl8M0nxFAxdv5O43cvMwSfsp
mnAfKN4MfY9tvgrLj2g3w2e9gwmLY6+iPU26L2IaaIfM5+a1dKM9HUJtDW3r
A8meLu23kCHddzGDm79Fur+iBVpVs8fUBbR/Vm5fJzRLpvyeN6yh+QmQNPDg
94B3yd8fiuV1oZdklH8QND7qHPntQ4qXQfWLI7OCHXS/HP1bGb9xsxQ+zRza
3zBotBZte/rNMOP3WMIf87QVfYzfqbhd4QejrjB+beGmK/aXaX+iYOcO2/Dt
XrIvhWpLni/T3sP4rYqJqHQ8IR0N43VdbcFhVE8M/Ol56453N9lVMNho8Lt7
tYPxaz1zs7nXSfOMBbXtYK159TXGr3OycVOWq4vx+1Vfd07PfJpfPHxQOuEx
BNJ5CWB2ZNUFHupl/DpO+vtck3R+ItS3jDZ8euMS4zfiYvjP949fZvwK+Qsv
bJ+i+SeBazgESuTU/2ToX1+pV+VS/1K4fmig6BP3G2s3kgZQtBZsznW1MX5N
e7bmXT4+yviV1D/Nb2Z/WEDLCPVPC5W3V+Wk7O9n/P5Vv1NVlU756kDsKN6o
GKR4HRz4otSev6gW7XrYUFBoronsYPz6mgeyzu6/zvhVLnPPKVPcZPx2jv8T
uO8x1WuQ9mea36J638dNR2keRu5+I+zdtaOoMJvON8Hau+fvRYa6Gb9+JSVx
+cupf2Z4Ybh073fv0fvBDMUnFnzbvr2f8SvhYZpfd87h4Oi5Q4zf8fJob72X
8kuHydEN9r8f0PstA6xV+qiQXwcYv9L5W+DLLt2t6tBrjN8m05GgmUM0PyvH
4wRxK5Cdfv0HfN0l9w==
      "], {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{39, 122, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 
           49, 48, 47, 46, 45, 44, 43, 42, 41, 40}}], 
          PolygonBox[{{1, 121, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28,
            27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
           11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}, {}, {}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
          17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
          34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
          51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 120, 119, 118, 117, 116, 
          115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 
          102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 
          86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 
          69, 68, 67, 66, 65, 64, 63, 62, 61}}]]}, {}, {}}]}, {{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7CNvVj0+aLnXHirgoPNYoj/WYQ+Uz+Fg5v/4
HW/nQShfwEFK7uwU5oxtUL6Ig7uI/sv0xO1QvgRU/UYoX8Zhy1G7ni6d9VC+
App6JTTzVBxQ3aPmwBHZOGtl/wYoX8NhhdmNgx0/DkP5Wmh8HYcqh7Jclf+H
oHw9hzfq2Q7z87ZC+QZofEM0/xk5/Huzzeqn224o39jhqo6V2NuPR6B8E4dk
V1fnoqZNUL4pGt8MTb+5w2KGzxMNQk5C+RZo4WsJ9d8BKN8KzT/WaP63QbPP
Fhq++6F8OzT99tDwXg7lO0DdsxPCb3BAU++I6v4GR7T4cHKYaL18+rVqqPoG
JwcfLxHJA6yw8HZGdU+DswMDCnBxKOWaaHsmagdU3sWBWXlOVuDro1D9rg4f
YwMKvgtdgMq7oqUXN1T3Nrih6XdHs98dLT48UMOzwQOaHmD6PR0ufAt5NsV3
F1Te06H9/B1zNeNzUHkv1PTS4OXgdM9zJ//eM1B5bwf5kE1Honlg8t6o4c3g
g5reG3zQ4t8XNf02+DrsM+R8Y1UKS39+cPsBP7oLng==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Medium], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7DV/sLO4BR62hwo42Fx7f58r7QiUz+HQJLFK
/pjIOShfwGHz55OP7lYehPJFHBaIPmKTTD0A5UtA1e+D8mUcTNkUn9lzn4Ty
FRw2+9UX/VvyAMpXclhh/pDfacoFKF/F4Ydpi9JMjdNQvppDiJLH6UTpvVC+
hkN5SciD2+dh8loOC3xznwUlnoXydRzmGKjMSP0J4+s5vFt16oikAsw/Bg7P
D8a/fNwBkzd0uLPZjf3VueNQvpGD35bru89XHYXyjR2sQmau9Ay4BOWbOFR9
35wS1ngKyjd1WHThTNZZoTNQvplDRe+Hg248MPPMHTxTw1bxzDoP5Vs4pK7n
eNb4HWa+pcO6vU82tV49BuVbOagcUrryds0JKN/agaFAbH/xj51Qvo1D4wM5
hx4JWPjbOlyMnuFimA0LPzu08LB3qK87EBocB+M7OCjuK03PboSGR4ODg0dn
Xu6JNU+g8o6o/m9wdAi6qMC19xEs/JwcZtz2z7KbehEq7+TwaV254RxvmHud
HRqON8Up3oHpd3aYPqk3sUB8JVTexSGmtMxzuTo0fBpcHJ7tvha2feplqLyr
g47+Ae5+xetQeVeHk+9+8Uz4BvOvG2r4NLg51K97VrNtPiw+3NHsd3fobimp
L4uFme/hEPxqz2t1eWh6bfBwYO/pMS0wgYWfpwPfg97uZTnQ/NDg6dC0Vnjp
0WKofxm8UPNDg5fDgay5knq896Dy3g7vJuo9XvcY5j5vh+9PYhK/vD8Elfdx
8JvjoiF36xpU3gct/n0dFp5yvrFAHpreGnwdtnnME2C9B4s/P7j9AHQbGkg=

        "]]}}}, {{}, {}, {}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Total Number of Victims\"", TraditionalForm], 
     FormBox["\"Average Shooter Age\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{443., Automatic},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 60.}, {0, 0.646091665014219}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740268980688839*^9, 3.740269000656988*^9}, {
   3.74026904878456*^9, 3.7402690971407633`*^9}, {3.740269268023234*^9, 
   3.740269354709937*^9}, {3.7402694169483128`*^9, 3.740269427809939*^9}, {
   3.740269536547988*^9, 3.740269538878209*^9}, {3.74026974445977*^9, 
   3.740269761425275*^9}, {3.74028467720373*^9, 3.7402847020329847`*^9}, {
   3.740284964103775*^9, 3.7402849786833887`*^9}, 
   3.7402850917093763`*^9},ExpressionUUID->"1caf1996-5c38-42d7-a907-\
7190ce0497d8"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"de93efd8-12a9-4f5c-8a79-b815d24ac5f9"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.740224343432857*^9},ExpressionUUID->"01c4256e-42d0-42b4-b6a6-\
4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188072178087*^9},
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell["Main Results in Detail", "Subsubsection",
 CellChangeTimes->{
  3.7361820729365396`*^9},ExpressionUUID->"c1b785be-a60a-40fe-b1f1-\
2d83590b38cd"],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{
  3.736182092776252*^9, {3.740270780203475*^9, 
   3.74027082789198*^9}},ExpressionUUID->"2fb419d2-be9c-420e-8695-\
d8f93c6be810"],

Cell["\<\
https://github.com/Eunike91/Summer2018Starter/blob/master/StudentDeliverables/\
DataVisualization.nb\
\>", "Item",
 CellChangeTimes->{{3.7080963065367527`*^9, 3.708096309577277*^9}, {
   3.740270774767185*^9, 3.740270777367691*^9}, {3.7402867973772087`*^9, 
   3.740286815393162*^9}, {3.740286904514812*^9, 3.7402869520409184`*^9}, 
   3.740294076218308*^9},ExpressionUUID->"b90275fd-2a34-4a50-9f96-\
a8339f561d82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Links", "Subsubsection",
 CellChangeTimes->{
  3.73618224410275*^9, {3.74028108904333*^9, 
   3.740281090741222*^9}},ExpressionUUID->"1f9589aa-ebb7-426a-b31c-\
99a3bb01f894"],

Cell["https://datarepository.wolframcloud.com/", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963544862823`*^9}, {
   3.708113540381196*^9, 3.708113546129714*^9}, {3.7402706256820498`*^9, 
   3.7402706336853647`*^9}, {3.740270674477128*^9, 3.7402706750218143`*^9}, 
   3.740281118624511*^9},ExpressionUUID->"d17fd097-ab37-4f5e-ae9b-\
99b865820aac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 CellChangeTimes->{
  3.73618224410275*^9},ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell[CellGroupData[{

Cell["automated visualization ", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963544862823`*^9}, {
  3.708113540381196*^9, 3.708113546129714*^9}, {3.7402706256820498`*^9, 
  3.7402706336853647`*^9}, {3.740270674477128*^9, 
  3.7402706750218143`*^9}},ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-\
b6a38b6de7d0"],

Cell["data analysis ", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740270637748734*^9, 
  3.740270685111845*^9}},ExpressionUUID->"d4791c55-e7db-46a0-8162-\
0eebcfa1df4d"],

Cell["wolfram data repository", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740270637748734*^9, 
  3.740270708737438*^9}},ExpressionUUID->"2457d926-5a68-4281-9521-\
d82a082fe811"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{1323, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->""},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 7, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Linux x86 (64-bit) (March 7, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[400, 13, 227, 5, 53, "TemplateInstructions",ExpressionUUID->"2138b1dc-25d4-4a71-b7d5-46cc3f091ca5",
   CellTags->"LastModified"]},
 "AuthorInfo"->{
  Cell[652, 22, 218, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "PosterContent"->{
  Cell[1904, 59, 234, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[40084, 741, 252, 6, 68, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[670862, 13411, 231, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 677656, 13583},
 {"AuthorInfo", 677811, 13586},
 {"PosterContent", 677969, 13589},
 {"PresentationContent", 678137, 13592},
 {"ProjectNotes", 678306, 13595}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 227, 5, 53, "TemplateInstructions",ExpressionUUID->"2138b1dc-25d4-4a71-b7d5-46cc3f091ca5",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[652, 22, 218, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[873, 29, 314, 7, 48, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1190, 38, 344, 7, 48, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1537, 47, 330, 7, 48, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1904, 59, 234, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[2141, 66, 380, 7, 51, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2524, 75, 634, 13, 73, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[3161, 90, 331, 8, 37, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[3495, 100, 31358, 524, 319, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[34856, 626, 1911, 30, 117, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[36770, 658, 1103, 19, 51, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[37876, 679, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[37978, 682, 2069, 54, 33, "TemplateDivider",ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-c12593f67d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40084, 741, 252, 6, 68, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[40339, 749, 1395, 29, 63, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[41759, 782, 328, 5, 45, "TemplateEditableHeader",ExpressionUUID->"a82eb68b-c55f-495d-ac5a-d97167784e73"],
Cell[42090, 789, 1009, 17, 81, "TemplateEditableContent",ExpressionUUID->"c93624b0-8e9f-452c-9c74-674d9e990fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43136, 811, 495, 7, 45, "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],
Cell[43634, 820, 149942, 3117, 389, "TemplateEditableInput",ExpressionUUID->"20197eb1-0a2c-4e3a-a068-01939f0a01f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193613, 3942, 299, 5, 45, "TemplateEditableHeader",ExpressionUUID->"d75dd2ed-6909-4996-9557-aed432a2185a"],
Cell[193915, 3949, 18060, 488, 328, "TemplateEditableInput",ExpressionUUID->"af2d26b7-fc3c-46f2-93b4-de98255e8cb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212012, 4442, 326, 5, 45, "TemplateEditableHeader",ExpressionUUID->"e4763e39-fc36-4b87-825e-f177163abd1c"],
Cell[212341, 4449, 10104, 224, 529, "TemplateEditableInput",ExpressionUUID->"63938327-c519-4ea0-94de-82039c8feacc"],
Cell[222448, 4675, 177, 4, 31, "Input",ExpressionUUID->"062894ea-d746-4cd4-a5df-8373fa96b243"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222662, 4684, 423, 7, 45, "TemplateEditableHeader",ExpressionUUID->"c7f99b53-5487-496e-b16f-10bec4fa4b0a"],
Cell[223088, 4693, 13005, 266, 352, "TemplateEditableInput",ExpressionUUID->"97861147-20b4-4ff4-94b6-79e1965ccd43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236130, 4964, 300, 5, 45, "TemplateEditableHeader",ExpressionUUID->"b06ea982-1481-48df-a3e0-b46f3296baac"],
Cell[236433, 4971, 200742, 3474, 328, "TemplateEditableInput",ExpressionUUID->"d74431ef-2986-4bf8-b0cc-60f1fea45d61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437212, 8450, 238, 4, 45, "TemplateEditableHeader",ExpressionUUID->"35911f69-db5c-44da-8d6b-0345e1f58443"],
Cell[437453, 8456, 22309, 470, 363, "TemplateEditableInput",ExpressionUUID->"15145ec9-cd4f-400e-ab72-479c8b4d3552"],
Cell[459765, 8928, 207926, 4399, 826, "TemplateEditableInput",ExpressionUUID->"1caf1996-5c38-42d7-a907-7190ce0497d8"],
Cell[667694, 13329, 3119, 76, 33, "TemplateDivider",ExpressionUUID->"01c4256e-42d0-42b4-b6a6-4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[670862, 13411, 231, 5, 68, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[671096, 13418, 151, 3, 45, "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],
Cell[CellGroupData[{
Cell[671272, 13425, 180, 4, 37, "Subsubsection",ExpressionUUID->"2fb419d2-be9c-420e-8695-d8f93c6be810"],
Cell[671455, 13431, 425, 8, 32, "Item",ExpressionUUID->"b90275fd-2a34-4a50-9f96-a8339f561d82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671917, 13444, 180, 4, 45, "Subsubsection",ExpressionUUID->"1f9589aa-ebb7-426a-b31c-99a3bb01f894"],
Cell[672100, 13450, 359, 5, 32, "Item",ExpressionUUID->"d17fd097-ab37-4f5e-ae9b-99b865820aac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[672496, 13460, 132, 2, 45, "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[CellGroupData[{
Cell[672653, 13466, 318, 5, 32, "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],
Cell[672974, 13473, 207, 4, 32, "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"],
Cell[673184, 13479, 216, 4, 32, "Item",ExpressionUUID->"2457d926-5a68-4281-9521-d82a082fe811"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

